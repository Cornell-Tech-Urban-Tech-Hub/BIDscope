import{R as Xn,l as Z,g as or,B as de,p as ar,t as lr,C as pe,a as cr,b as ur,s as fr,W as hr,c as gn,S as dr,i as pr,d as gr,e as mr,T as yr,f as Ln,h as _r,j as xr,k as Mt,m as Zt,n as ae,o as Le,q as vr,r as Sn,u as ei,v as br,w as ge,x as wr,P as Re,y as mt,z as Bt,A as Ve,D as Be,E as Xt,F as qe,L as kr,G as Ir,H as Jn,I as mn,J as Tr,U as ct}from"./webgl-device.DkQLLCya.js";import{g as Pr}from"./index.6otl1p8d.js";var yt={exports:{}},Qn;function Ar(){if(Qn)return yt.exports;Qn=1,yt.exports=a,yt.exports.default=a;function a(g,k,v){v=v||2;var A=k&&k.length,C=A?k[0]*v:g.length,S=e(g,0,C,v,!0),O=[];if(!S||S.next===S.prev)return O;var N,$,U,Q,Y,G,ce;if(A&&(S=l(g,k,S,v)),g.length>80*v){N=U=g[0],$=Q=g[1];for(var K=v;K<C;K+=v)Y=g[K],G=g[K+1],Y<N&&(N=Y),G<$&&($=G),Y>U&&(U=Y),G>Q&&(Q=G);ce=Math.max(U-N,Q-$),ce=ce!==0?32767/ce:0}return n(S,O,v,N,$,ce,0),O}function e(g,k,v,A,C){var S,O;if(C===Qe(g,k,v,A)>0)for(S=k;S<v;S+=A)O=Je(S,g[S],g[S+1],O);else for(S=v-A;S>=k;S-=A)O=Je(S,g[S],g[S+1],O);return O&&B(O,O.next)&&(ie(O),O=O.next),O}function t(g,k){if(!g)return g;k||(k=g);var v=g,A;do if(A=!1,!v.steiner&&(B(v,v.next)||T(v.prev,v,v.next)===0)){if(ie(v),v=k=v.prev,v===v.next)break;A=!0}else v=v.next;while(A||v!==k);return k}function n(g,k,v,A,C,S,O){if(g){!O&&S&&x(g,A,C,S);for(var N=g,$,U;g.prev!==g.next;){if($=g.prev,U=g.next,S?i(g,A,C,S):s(g)){k.push($.i/v|0),k.push(g.i/v|0),k.push(U.i/v|0),ie(g),g=U.next,N=U.next;continue}if(g=U,g===N){O?O===1?(g=r(t(g),k,v),n(g,k,v,A,C,S,2)):O===2&&o(g,k,v,A,C,S):n(t(g),k,v,A,C,S,1);break}}}}function s(g){var k=g.prev,v=g,A=g.next;if(T(k,v,A)>=0)return!1;for(var C=k.x,S=v.x,O=A.x,N=k.y,$=v.y,U=A.y,Q=C<S?C<O?C:O:S<O?S:O,Y=N<$?N<U?N:U:$<U?$:U,G=C>S?C>O?C:O:S>O?S:O,ce=N>$?N>U?N:U:$>U?$:U,K=A.next;K!==k;){if(K.x>=Q&&K.x<=G&&K.y>=Y&&K.y<=ce&&M(C,N,S,$,O,U,K.x,K.y)&&T(K.prev,K,K.next)>=0)return!1;K=K.next}return!0}function i(g,k,v,A){var C=g.prev,S=g,O=g.next;if(T(C,S,O)>=0)return!1;for(var N=C.x,$=S.x,U=O.x,Q=C.y,Y=S.y,G=O.y,ce=N<$?N<U?N:U:$<U?$:U,K=Q<Y?Q<G?Q:G:Y<G?Y:G,et=N>$?N>U?N:U:$>U?$:U,tt=Q>Y?Q>G?Q:G:Y>G?Y:G,Kn=L(ce,K,k,v,A),Zn=L(et,tt,k,v,A),j=g.prevZ,H=g.nextZ;j&&j.z>=Kn&&H&&H.z<=Zn;){if(j.x>=ce&&j.x<=et&&j.y>=K&&j.y<=tt&&j!==C&&j!==O&&M(N,Q,$,Y,U,G,j.x,j.y)&&T(j.prev,j,j.next)>=0||(j=j.prevZ,H.x>=ce&&H.x<=et&&H.y>=K&&H.y<=tt&&H!==C&&H!==O&&M(N,Q,$,Y,U,G,H.x,H.y)&&T(H.prev,H,H.next)>=0))return!1;H=H.nextZ}for(;j&&j.z>=Kn;){if(j.x>=ce&&j.x<=et&&j.y>=K&&j.y<=tt&&j!==C&&j!==O&&M(N,Q,$,Y,U,G,j.x,j.y)&&T(j.prev,j,j.next)>=0)return!1;j=j.prevZ}for(;H&&H.z<=Zn;){if(H.x>=ce&&H.x<=et&&H.y>=K&&H.y<=tt&&H!==C&&H!==O&&M(N,Q,$,Y,U,G,H.x,H.y)&&T(H.prev,H,H.next)>=0)return!1;H=H.nextZ}return!0}function r(g,k,v){var A=g;do{var C=A.prev,S=A.next.next;!B(C,S)&&V(C,A,A.next,S)&&X(C,S)&&X(S,C)&&(k.push(C.i/v|0),k.push(A.i/v|0),k.push(S.i/v|0),ie(A),ie(A.next),A=g=S),A=A.next}while(A!==g);return t(A)}function o(g,k,v,A,C,S){var O=g;do{for(var N=O.next.next;N!==O.prev;){if(O.i!==N.i&&R(O,N)){var $=Te(O,N);O=t(O,O.next),$=t($,$.next),n(O,k,v,A,C,S,0),n($,k,v,A,C,S,0);return}N=N.next}O=O.next}while(O!==g)}function l(g,k,v,A){var C=[],S,O,N,$,U;for(S=0,O=k.length;S<O;S++)N=k[S]*A,$=S<O-1?k[S+1]*A:g.length,U=e(g,N,$,A,!1),U===U.next&&(U.steiner=!0),C.push(E(U));for(C.sort(c),S=0;S<C.length;S++)v=u(C[S],v);return v}function c(g,k){return g.x-k.x}function u(g,k){var v=f(g,k);if(!v)return k;var A=Te(v,g);return t(A,A.next),t(v,v.next)}function f(g,k){var v=k,A=g.x,C=g.y,S=-1/0,O;do{if(C<=v.y&&C>=v.next.y&&v.next.y!==v.y){var N=v.x+(C-v.y)*(v.next.x-v.x)/(v.next.y-v.y);if(N<=A&&N>S&&(S=N,O=v.x<v.next.x?v:v.next,N===A))return O}v=v.next}while(v!==k);if(!O)return null;var $=O,U=O.x,Q=O.y,Y=1/0,G;v=O;do A>=v.x&&v.x>=U&&A!==v.x&&M(C<Q?A:S,C,U,Q,C<Q?S:A,C,v.x,v.y)&&(G=Math.abs(C-v.y)/(A-v.x),X(v,g)&&(G<Y||G===Y&&(v.x>O.x||v.x===O.x&&p(O,v)))&&(O=v,Y=G)),v=v.next;while(v!==$);return O}function p(g,k){return T(g.prev,g,k.prev)<0&&T(k.next,g,g.next)<0}function x(g,k,v,A){var C=g;do C.z===0&&(C.z=L(C.x,C.y,k,v,A)),C.prevZ=C.prev,C.nextZ=C.next,C=C.next;while(C!==g);C.prevZ.nextZ=null,C.prevZ=null,I(C)}function I(g){var k,v,A,C,S,O,N,$,U=1;do{for(v=g,g=null,S=null,O=0;v;){for(O++,A=v,N=0,k=0;k<U&&(N++,A=A.nextZ,!!A);k++);for($=U;N>0||$>0&&A;)N!==0&&($===0||!A||v.z<=A.z)?(C=v,v=v.nextZ,N--):(C=A,A=A.nextZ,$--),S?S.nextZ=C:g=C,C.prevZ=S,S=C;v=A}S.nextZ=null,U*=2}while(O>1);return g}function L(g,k,v,A,C){return g=(g-v)*C|0,k=(k-A)*C|0,g=(g|g<<8)&16711935,g=(g|g<<4)&252645135,g=(g|g<<2)&858993459,g=(g|g<<1)&1431655765,k=(k|k<<8)&16711935,k=(k|k<<4)&252645135,k=(k|k<<2)&858993459,k=(k|k<<1)&1431655765,g|k<<1}function E(g){var k=g,v=g;do(k.x<v.x||k.x===v.x&&k.y<v.y)&&(v=k),k=k.next;while(k!==g);return v}function M(g,k,v,A,C,S,O,N){return(C-O)*(k-N)>=(g-O)*(S-N)&&(g-O)*(A-N)>=(v-O)*(k-N)&&(v-O)*(S-N)>=(C-O)*(A-N)}function R(g,k){return g.next.i!==k.i&&g.prev.i!==k.i&&!ne(g,k)&&(X(g,k)&&X(k,g)&&Ie(g,k)&&(T(g.prev,g,k.prev)||T(g,k.prev,k))||B(g,k)&&T(g.prev,g,g.next)>0&&T(k.prev,k,k.next)>0)}function T(g,k,v){return(k.y-g.y)*(v.x-k.x)-(k.x-g.x)*(v.y-k.y)}function B(g,k){return g.x===k.x&&g.y===k.y}function V(g,k,v,A){var C=se(T(g,k,v)),S=se(T(g,k,A)),O=se(T(v,A,g)),N=se(T(v,A,k));return!!(C!==S&&O!==N||C===0&&z(g,v,k)||S===0&&z(g,A,k)||O===0&&z(v,g,A)||N===0&&z(v,k,A))}function z(g,k,v){return k.x<=Math.max(g.x,v.x)&&k.x>=Math.min(g.x,v.x)&&k.y<=Math.max(g.y,v.y)&&k.y>=Math.min(g.y,v.y)}function se(g){return g>0?1:g<0?-1:0}function ne(g,k){var v=g;do{if(v.i!==g.i&&v.next.i!==g.i&&v.i!==k.i&&v.next.i!==k.i&&V(v,v.next,g,k))return!0;v=v.next}while(v!==g);return!1}function X(g,k){return T(g.prev,g,g.next)<0?T(g,k,g.next)>=0&&T(g,g.prev,k)>=0:T(g,k,g.prev)<0||T(g,g.next,k)<0}function Ie(g,k){var v=g,A=!1,C=(g.x+k.x)/2,S=(g.y+k.y)/2;do v.y>S!=v.next.y>S&&v.next.y!==v.y&&C<(v.next.x-v.x)*(S-v.y)/(v.next.y-v.y)+v.x&&(A=!A),v=v.next;while(v!==g);return A}function Te(g,k){var v=new ee(g.i,g.x,g.y),A=new ee(k.i,k.x,k.y),C=g.next,S=k.prev;return g.next=k,k.prev=g,v.next=C,C.prev=v,A.next=v,v.prev=A,S.next=A,A.prev=S,A}function Je(g,k,v,A){var C=new ee(g,k,v);return A?(C.next=A.next,C.prev=A,A.next.prev=C,A.next=C):(C.prev=C,C.next=C),C}function ie(g){g.next.prev=g.prev,g.prev.next=g.next,g.prevZ&&(g.prevZ.nextZ=g.nextZ),g.nextZ&&(g.nextZ.prevZ=g.prevZ)}function ee(g,k,v){this.i=g,this.x=k,this.y=v,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}a.deviation=function(g,k,v,A){var C=k&&k.length,S=C?k[0]*v:g.length,O=Math.abs(Qe(g,0,S,v));if(C)for(var N=0,$=k.length;N<$;N++){var U=k[N]*v,Q=N<$-1?k[N+1]*v:g.length;O-=Math.abs(Qe(g,U,Q,v))}var Y=0;for(N=0;N<A.length;N+=3){var G=A[N]*v,ce=A[N+1]*v,K=A[N+2]*v;Y+=Math.abs((g[G]-g[K])*(g[ce+1]-g[G+1])-(g[G]-g[ce])*(g[K+1]-g[G+1]))}return O===0&&Y===0?0:Math.abs((Y-O)/O)};function Qe(g,k,v,A){for(var C=0,S=k,O=v-A;S<v;S+=A)C+=(g[O]-g[S])*(g[S+1]+g[O+1]),O=S;return C}return a.flatten=function(g){for(var k=g[0][0].length,v={vertices:[],holes:[],dimensions:k},A=0,C=0;C<g.length;C++){for(var S=0;S<g[C].length;S++)for(var O=0;O<k;O++)v.vertices.push(g[C][S][O]);C>0&&(A+=g[C-1].length,v.holes.push(A))}return v},yt.exports}var Cr=Ar();const Lr=Pr(Cr),Sr=`out vec4 transform_output;
void main() {
  transform_output = vec4(0);
}`,Er=`#version 300 es
${Sr}`;function Or(a){const{input:e,inputChannels:t,output:n}={};if(!e)return Er;if(!t)throw new Error("inputChannels");const s=Mr(t),i=Br(e,t);return`#version 300 es
in ${s} ${e};
out vec4 ${n};
void main() {
  ${n} = ${i};
}`}function Mr(a){switch(a){case 1:return"float";case 2:return"vec2";case 3:return"vec3";case 4:return"vec4";default:throw new Error(`invalid channels: ${a}`)}}function Br(a,e){switch(e){case 1:return`vec4(${a}, 0.0, 0.0, 1.0)`;case 2:return`vec4(${a}, 0.0, 1.0)`;case 3:return`vec4(${a}, 1.0)`;case 4:return a;default:throw new Error(`invalid channels: ${e}`)}}class Ft extends Xn{static defaultProps={...Xn.defaultProps,shader:void 0,entryPoint:void 0,constants:{},shaderLayout:void 0};get[Symbol.toStringTag](){return"ComputePipeline"}hash="";shaderLayout;constructor(e,t){super(e,t,Ft.defaultProps),this.shaderLayout=t.shaderLayout}}const Fr={f32:{type:"f32",components:1},i32:{type:"i32",components:1},u32:{type:"u32",components:1},"vec2<f32>":{type:"f32",components:2},"vec3<f32>":{type:"f32",components:3},"vec4<f32>":{type:"f32",components:4},"vec2<i32>":{type:"i32",components:2},"vec3<i32>":{type:"i32",components:3},"vec4<i32>":{type:"i32",components:4},"vec2<u32>":{type:"u32",components:2},"vec3<u32>":{type:"u32",components:3},"vec4<u32>":{type:"u32",components:4},"mat2x2<f32>":{type:"f32",components:4},"mat2x3<f32>":{type:"f32",components:6},"mat2x4<f32>":{type:"f32",components:8},"mat3x2<f32>":{type:"f32",components:6},"mat3x3<f32>":{type:"f32",components:9},"mat3x4<f32>":{type:"f32",components:12},"mat4x2<f32>":{type:"f32",components:8},"mat4x3<f32>":{type:"f32",components:12},"mat4x4<f32>":{type:"f32",components:16}};function Nr(a){return Fr[a]}function Rr(a,e){switch(e){case 1:return a;case 2:return a+a%2;default:return a+(4-a%4)%4}}function Dr(a){return ArrayBuffer.isView(a)&&!(a instanceof DataView)}function Nt(a){return Array.isArray(a)?a.length===0||typeof a[0]=="number":Dr(a)}const es=1024;class Ur{layout={};byteLength;constructor(e){let t=0;for(const[s,i]of Object.entries(e)){const r=Nr(i),{type:o,components:l}=r;t=Rr(t,l);const c=t;t+=l,this.layout[s]={type:o,size:l,offset:c}}t+=(4-t%4)%4;const n=t*4;this.byteLength=Math.max(n,es)}getData(e){const t=Math.max(this.byteLength,es),n=or(t),s={i32:new Int32Array(n),u32:new Uint32Array(n),f32:new Float32Array(n),f16:new Uint16Array(n)};for(const[i,r]of Object.entries(e)){const o=this.layout[i];if(!o){Z.warn(`Supplied uniform value ${i} not present in uniform block layout`)();continue}const{type:l,size:c,offset:u}=o,f=s[l];if(c===1){if(typeof r!="number"&&typeof r!="boolean"){Z.warn(`Supplied value for single component uniform ${i} is not a number: ${r}`)();continue}f[u]=Number(r)}else{if(!Nt(r)){Z.warn(`Supplied value for multi component / array uniform ${i} is not a numeric array: ${r}`)();continue}f.set(r,u)}}return new Uint8Array(n)}has(e){return!!this.layout[e]}get(e){return this.layout[e]}}function $r(a,e,t=16){if(a!==e)return!1;const n=a,s=e;if(!Nt(n))return!1;if(Nt(s)&&n.length===s.length){for(let i=0;i<n.length;++i)if(s[i]!==n[i])return!1}return!0}function zr(a){return Nt(a)?a.slice():a}class Vr{name;uniforms={};modifiedUniforms={};modified=!0;bindingLayout={};needsRedraw="initialized";constructor(e){if(this.name=e?.name||"unnamed",e?.name&&e?.shaderLayout){const t=e?.shaderLayout.bindings?.find(s=>s.type==="uniform"&&s.name===e?.name);if(!t)throw new Error(e?.name);const n=t;for(const s of n.uniforms||[])this.bindingLayout[s.name]=s}}setUniforms(e){for(const[t,n]of Object.entries(e))this._setUniform(t,n),this.needsRedraw||this.setNeedsRedraw(`${this.name}.${t}=${n}`)}setNeedsRedraw(e){this.needsRedraw=this.needsRedraw||e}getAllUniforms(){return this.modifiedUniforms={},this.needsRedraw=!1,this.uniforms||{}}_setUniform(e,t){$r(this.uniforms[e],t)||(this.uniforms[e]=zr(t),this.modifiedUniforms[e]=!0,this.modified=!0)}}class Wr{uniformBlocks=new Map;uniformBufferLayouts=new Map;uniformBuffers=new Map;constructor(e){for(const[t,n]of Object.entries(e)){const s=t,i=new Ur(n.uniformTypes||{});this.uniformBufferLayouts.set(s,i);const r=new Vr({name:t});r.setUniforms(n.defaultUniforms||{}),this.uniformBlocks.set(s,r)}}destroy(){for(const e of this.uniformBuffers.values())e.destroy()}setUniforms(e){for(const[t,n]of Object.entries(e))this.uniformBlocks.get(t)?.setUniforms(n);this.updateUniformBuffers()}getUniformBufferByteLength(e){return this.uniformBufferLayouts.get(e)?.byteLength||0}getUniformBufferData(e){const t=this.uniformBlocks.get(e)?.getAllUniforms()||{};return this.uniformBufferLayouts.get(e)?.getData(t)}createUniformBuffer(e,t,n){n&&this.setUniforms(n);const s=this.getUniformBufferByteLength(t),i=e.createBuffer({usage:de.UNIFORM|de.COPY_DST,byteLength:s}),r=this.getUniformBufferData(t);return i.write(r),i}getManagedUniformBuffer(e,t){if(!this.uniformBuffers.get(t)){const n=this.getUniformBufferByteLength(t),s=e.createBuffer({usage:de.UNIFORM|de.COPY_DST,byteLength:n});this.uniformBuffers.set(t,s)}return this.uniformBuffers.get(t)}updateUniformBuffers(){let e=!1;for(const t of this.uniformBlocks.keys()){const n=this.updateUniformBuffer(t);e||=n}return e&&Z.log(3,`UniformStore.updateUniformBuffers(): ${e}`)(),e}updateUniformBuffer(e){const t=this.uniformBlocks.get(e);let n=this.uniformBuffers.get(e),s=!1;if(n&&t?.needsRedraw){s||=t.needsRedraw;const i=this.getUniformBufferData(e);n=this.uniformBuffers.get(e),n?.write(i);const r=this.uniformBlocks.get(e)?.getAllUniforms();Z.log(4,`Writing to uniform buffer ${String(e)}`,i,r)()}return s}}function ti(a){const e=ArrayBuffer.isView(a)?a.constructor:a;switch(e){case Float32Array:return"float32";case Uint16Array:return"uint16";case Uint32Array:return"uint32";case Uint8Array:case Uint8ClampedArray:return"uint8";case Int8Array:return"sint8";case Int16Array:return"sint16";case Int32Array:return"sint32";default:throw new Error(e.constructor.name)}}function ni(a){switch(a){case"float32":return Float32Array;case"uint32":return Uint32Array;case"sint32":return Int32Array;case"uint16":case"unorm16":return Uint16Array;case"sint16":case"snorm16":return Int16Array;case"uint8":case"unorm8":return Uint8Array;case"sint8":case"snorm8":return Int8Array;default:throw new Error(a)}}function Gr(a,e,t){if(!e||e>4)throw new Error(`size ${e}`);const n=e;let s=ti(a);if(s==="uint8"&&t&&n===1)return"unorm8-webgl";if(s==="uint8"&&t&&n===3)return"unorm8x3-webgl";if(s==="uint8"||s==="sint8"){if(n===1||n===3)throw new Error(`size: ${e}`);return t&&(s=s.replace("int","norm")),`${s}x${n}`}if(s==="uint16"||s==="sint16"){if(n===1||n===3)throw new Error(`size: ${e}`);return t&&(s=s.replace("int","norm")),`${s}x${n}`}return n===1?s:`${s}x${n}`}class Jt{bufferLayouts;constructor(e){this.bufferLayouts=e}getBufferLayout(e){return this.bufferLayouts.find(t=>t.name===e)||null}getAttributeNamesForBuffer(e){return e.attributes?e.attributes?.map(t=>t.attribute):[e.name]}mergeBufferLayouts(e,t){const n=[...e];for(const s of t){const i=n.findIndex(r=>r.name===s.name);i<0?n.push(s):n[i]=s}return n}getBufferIndex(e){const t=this.bufferLayouts.findIndex(n=>n.name===e);return t===-1&&Z.warn(`BufferLayout: Missing buffer for "${e}".`)(),t}}function jr(a,e){const t=Object.fromEntries(a.attributes.map(s=>[s.name,s.location])),n=e.slice();return n.sort((s,i)=>{const r=s.attributes?s.attributes.map(u=>u.attribute):[s.name],o=i.attributes?i.attributes.map(u=>u.attribute):[i.name],l=Math.min(...r.map(u=>t[u])),c=Math.min(...o.map(u=>t[u]));return l-c}),n}class ye{constructor(e,t){this.name=e,this.attributes=t,this.size=0}get isArray(){return!1}get isStruct(){return!1}get isTemplate(){return!1}getTypeName(){return this.name}}class ts{constructor(e,t,n){this.name=e,this.type=t,this.attributes=n,this.offset=0,this.size=0}get isArray(){return this.type.isArray}get isStruct(){return this.type.isStruct}get isTemplate(){return this.type.isTemplate}get align(){return this.type.isStruct?this.type.align:0}get members(){return this.type.isStruct?this.type.members:null}get format(){return this.type.isArray||this.type.isTemplate?this.type.format:null}get count(){return this.type.isArray?this.type.count:0}get stride(){return this.type.isArray?this.type.stride:this.size}}class Fe extends ye{constructor(e,t){super(e,t),this.members=[],this.align=0,this.startLine=-1,this.endLine=-1,this.inUse=!1}get isStruct(){return!0}}class De extends ye{constructor(e,t){super(e,t),this.count=0,this.stride=0}get isArray(){return!0}}class We extends ye{constructor(e,t,n,s){super(e,n),this.format=t,this.access=s}get isTemplate(){return!0}getTypeName(){let e=this.name;if(this.format!==null){if(e==="vec2"||e==="vec3"||e==="vec4"||e==="mat2x2"||e==="mat2x3"||e==="mat2x4"||e==="mat3x2"||e==="mat3x3"||e==="mat3x4"||e==="mat4x2"||e==="mat4x3"||e==="mat4x4"){if(this.format.name==="f32")return e+="f",e;if(this.format.name==="i32")return e+="i",e;if(this.format.name==="u32")return e+="u",e;if(this.format.name==="bool")return e+="b",e;if(this.format.name==="f16")return e+="h",e}e+=`<${this.format.name}>`}else if(e==="vec2"||e==="vec3"||e==="vec4")return e;return e}}var Me;(a=>{a[a.Uniform=0]="Uniform",a[a.Storage=1]="Storage",a[a.Texture=2]="Texture",a[a.Sampler=3]="Sampler",a[a.StorageTexture=4]="StorageTexture"})(Me||(Me={}));class _t{constructor(e,t,n,s,i,r,o){this.name=e,this.type=t,this.group=n,this.binding=s,this.attributes=i,this.resourceType=r,this.access=o}get isArray(){return this.type.isArray}get isStruct(){return this.type.isStruct}get isTemplate(){return this.type.isTemplate}get size(){return this.type.size}get align(){return this.type.isStruct?this.type.align:0}get members(){return this.type.isStruct?this.type.members:null}get format(){return this.type.isArray||this.type.isTemplate?this.type.format:null}get count(){return this.type.isArray?this.type.count:0}get stride(){return this.type.isArray?this.type.stride:this.size}}class Hr{constructor(e,t){this.name=e,this.type=t}}class qr{constructor(e,t,n,s){this.name=e,this.type=t,this.locationType=n,this.location=s,this.interpolation=null}}class ns{constructor(e,t,n,s){this.name=e,this.type=t,this.locationType=n,this.location=s}}class Yr{constructor(e,t,n,s){this.name=e,this.type=t,this.attributes=n,this.id=s}}class Kr{constructor(e,t,n){this.name=e,this.type=t,this.attributes=n}}class Zr{constructor(e,t=null,n){this.stage=null,this.inputs=[],this.outputs=[],this.arguments=[],this.returnType=null,this.resources=[],this.overrides=[],this.startLine=-1,this.endLine=-1,this.inUse=!1,this.calls=new Set,this.name=e,this.stage=t,this.attributes=n}}class Xr{constructor(){this.vertex=[],this.fragment=[],this.compute=[]}}const si=new Float32Array(1),Jr=new Int32Array(si.buffer),ue=new Uint16Array(1);function Qr(a){si[0]=a;const e=Jr[0],t=e>>31&1;let n=e>>23&255,s=8388607&e;if(n===255)return ue[0]=t<<15|31744|(s!==0?512:0),ue[0];if(n===0){if(s===0)return ue[0]=t<<15,ue[0];s|=8388608;let i=113;for(;!(8388608&s);)s<<=1,i--;return n=127-i,s&=8388607,n>0?(s=(s>>126-n)+(s>>127-n&1),ue[0]=t<<15|n<<10|s>>13,ue[0]):(ue[0]=t<<15,ue[0])}return n=n-127+15,n>=31?(ue[0]=t<<15|31744,ue[0]):n<=0?n<-10?(ue[0]=t<<15,ue[0]):(s=(8388608|s)>>1-n,ue[0]=t<<15|s>>13,ue[0]):(s>>=13,ue[0]=t<<15|n<<10|s,ue[0])}const En=new Uint32Array(1),ii=new Float32Array(En.buffer,0,1);function ss(a){const e=112+(a>>6&31)<<23|(63&a)<<17;return En[0]=e,ii[0]}function eo(a,e,t,n,s,i,r,o,l){const c=n*(r>>=s)*(i>>=s)+t*r+e*o;switch(l){case"r8unorm":return[W(a,c,"8unorm",1)[0]];case"r8snorm":return[W(a,c,"8snorm",1)[0]];case"r8uint":return[W(a,c,"8uint",1)[0]];case"r8sint":return[W(a,c,"8sint",1)[0]];case"rg8unorm":{const u=W(a,c,"8unorm",2);return[u[0],u[1]]}case"rg8snorm":{const u=W(a,c,"8snorm",2);return[u[0],u[1]]}case"rg8uint":{const u=W(a,c,"8uint",2);return[u[0],u[1]]}case"rg8sint":{const u=W(a,c,"8sint",2);return[u[0],u[1]]}case"rgba8unorm-srgb":case"rgba8unorm":{const u=W(a,c,"8unorm",4);return[u[0],u[1],u[2],u[3]]}case"rgba8snorm":{const u=W(a,c,"8snorm",4);return[u[0],u[1],u[2],u[3]]}case"rgba8uint":{const u=W(a,c,"8uint",4);return[u[0],u[1],u[2],u[3]]}case"rgba8sint":{const u=W(a,c,"8sint",4);return[u[0],u[1],u[2],u[3]]}case"bgra8unorm-srgb":case"bgra8unorm":{const u=W(a,c,"8unorm",4);return[u[2],u[1],u[0],u[3]]}case"r16uint":return[W(a,c,"16uint",1)[0]];case"r16sint":return[W(a,c,"16sint",1)[0]];case"r16float":return[W(a,c,"16float",1)[0]];case"rg16uint":{const u=W(a,c,"16uint",2);return[u[0],u[1]]}case"rg16sint":{const u=W(a,c,"16sint",2);return[u[0],u[1]]}case"rg16float":{const u=W(a,c,"16float",2);return[u[0],u[1]]}case"rgba16uint":{const u=W(a,c,"16uint",4);return[u[0],u[1],u[2],u[3]]}case"rgba16sint":{const u=W(a,c,"16sint",4);return[u[0],u[1],u[2],u[3]]}case"rgba16float":{const u=W(a,c,"16float",4);return[u[0],u[1],u[2],u[3]]}case"r32uint":return[W(a,c,"32uint",1)[0]];case"r32sint":return[W(a,c,"32sint",1)[0]];case"depth16unorm":case"depth24plus":case"depth24plus-stencil8":case"depth32float":case"depth32float-stencil8":case"r32float":return[W(a,c,"32float",1)[0]];case"rg32uint":{const u=W(a,c,"32uint",2);return[u[0],u[1]]}case"rg32sint":{const u=W(a,c,"32sint",2);return[u[0],u[1]]}case"rg32float":{const u=W(a,c,"32float",2);return[u[0],u[1]]}case"rgba32uint":{const u=W(a,c,"32uint",4);return[u[0],u[1],u[2],u[3]]}case"rgba32sint":{const u=W(a,c,"32sint",4);return[u[0],u[1],u[2],u[3]]}case"rgba32float":{const u=W(a,c,"32float",4);return[u[0],u[1],u[2],u[3]]}case"rg11b10ufloat":{const u=new Uint32Array(a.buffer,c,1)[0],f=(4192256&u)>>11,p=(4290772992&u)>>22;return[ss(2047&u),ss(f),function(x){const I=112+(x>>5&31)<<23|(31&x)<<18;return En[0]=I,ii[0]}(p),1]}}return null}function W(a,e,t,n){const s=[0,0,0,0];for(let c=0;c<n;++c)switch(t){case"8unorm":s[c]=a[e]/255,e++;break;case"8snorm":s[c]=a[e]/255*2-1,e++;break;case"8uint":s[c]=a[e],e++;break;case"8sint":s[c]=a[e]-127,e++;break;case"16uint":s[c]=a[e]|a[e+1]<<8,e+=2;break;case"16sint":s[c]=(a[e]|a[e+1]<<8)-32768,e+=2;break;case"16float":s[c]=(i=a[e]|a[e+1]<<8,r=void 0,o=void 0,l=void 0,r=(32768&i)>>15,l=1023&i,(o=(31744&i)>>10)==0?(r?-1:1)*Math.pow(2,-14)*(l/Math.pow(2,10)):o==31?l?NaN:1/0*(r?-1:1):(r?-1:1)*Math.pow(2,o-15)*(1+l/Math.pow(2,10))),e+=2;break;case"32uint":case"32sint":s[c]=a[e]|a[e+1]<<8|a[e+2]<<16|a[e+3]<<24,e+=4;break;case"32float":s[c]=new Float32Array(a.buffer,e,1)[0],e+=4}var i,r,o,l;return s}function q(a,e,t,n,s){for(let i=0;i<n;++i)switch(t){case"8unorm":a[e]=255*s[i],e++;break;case"8snorm":a[e]=.5*(s[i]+1)*255,e++;break;case"8uint":a[e]=s[i],e++;break;case"8sint":a[e]=s[i]+127,e++;break;case"16uint":new Uint16Array(a.buffer,e,1)[0]=s[i],e+=2;break;case"16sint":new Int16Array(a.buffer,e,1)[0]=s[i],e+=2;break;case"16float":{const r=Qr(s[i]);new Uint16Array(a.buffer,e,1)[0]=r,e+=2;break}case"32uint":new Uint32Array(a.buffer,e,1)[0]=s[i],e+=4;break;case"32sint":new Int32Array(a.buffer,e,1)[0]=s[i],e+=4;break;case"32float":new Float32Array(a.buffer,e,1)[0]=s[i],e+=4}return s}const Qt={r8unorm:{bytesPerBlock:1,blockWidth:1,blockHeight:1,isCompressed:!1,channels:1},r8snorm:{bytesPerBlock:1,blockWidth:1,blockHeight:1,isCompressed:!1,channels:1},r8uint:{bytesPerBlock:1,blockWidth:1,blockHeight:1,isCompressed:!1,channels:1},r8sint:{bytesPerBlock:1,blockWidth:1,blockHeight:1,isCompressed:!1,channels:1},rg8unorm:{bytesPerBlock:2,blockWidth:1,blockHeight:1,isCompressed:!1,channels:2},rg8snorm:{bytesPerBlock:2,blockWidth:1,blockHeight:1,isCompressed:!1,channels:2},rg8uint:{bytesPerBlock:2,blockWidth:1,blockHeight:1,isCompressed:!1,channels:2},rg8sint:{bytesPerBlock:2,blockWidth:1,blockHeight:1,isCompressed:!1,channels:2},rgba8unorm:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,channels:4},"rgba8unorm-srgb":{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,channels:4},rgba8snorm:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,channels:4},rgba8uint:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,channels:4},rgba8sint:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,channels:4},bgra8unorm:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,channels:4},"bgra8unorm-srgb":{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,channels:4},r16uint:{bytesPerBlock:2,blockWidth:1,blockHeight:1,isCompressed:!1,channels:1},r16sint:{bytesPerBlock:2,blockWidth:1,blockHeight:1,isCompressed:!1,channels:1},r16float:{bytesPerBlock:2,blockWidth:1,blockHeight:1,isCompressed:!1,channels:1},rg16uint:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,channels:2},rg16sint:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,channels:2},rg16float:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,channels:2},rgba16uint:{bytesPerBlock:8,blockWidth:1,blockHeight:1,isCompressed:!1,channels:4},rgba16sint:{bytesPerBlock:8,blockWidth:1,blockHeight:1,isCompressed:!1,channels:4},rgba16float:{bytesPerBlock:8,blockWidth:1,blockHeight:1,isCompressed:!1,channels:4},r32uint:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,channels:1},r32sint:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,channels:1},r32float:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,channels:1},rg32uint:{bytesPerBlock:8,blockWidth:1,blockHeight:1,isCompressed:!1,channels:2},rg32sint:{bytesPerBlock:8,blockWidth:1,blockHeight:1,isCompressed:!1,channels:2},rg32float:{bytesPerBlock:8,blockWidth:1,blockHeight:1,isCompressed:!1,channels:2},rgba32uint:{bytesPerBlock:16,blockWidth:1,blockHeight:1,isCompressed:!1,channels:4},rgba32sint:{bytesPerBlock:16,blockWidth:1,blockHeight:1,isCompressed:!1,channels:4},rgba32float:{bytesPerBlock:16,blockWidth:1,blockHeight:1,isCompressed:!1,channels:4},rgb10a2uint:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,channels:4},rgb10a2unorm:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,channels:4},rg11b10ufloat:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,channels:4},stencil8:{bytesPerBlock:1,blockWidth:1,blockHeight:1,isCompressed:!1,isDepthStencil:!0,hasDepth:!1,hasStencil:!0,channels:1},depth16unorm:{bytesPerBlock:2,blockWidth:1,blockHeight:1,isCompressed:!1,isDepthStencil:!0,hasDepth:!0,hasStencil:!1,channels:1},depth24plus:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,isDepthStencil:!0,hasDepth:!0,hasStencil:!1,depthOnlyFormat:"depth32float",channels:1},"depth24plus-stencil8":{bytesPerBlock:8,blockWidth:1,blockHeight:1,isCompressed:!1,isDepthStencil:!0,hasDepth:!0,hasStencil:!0,depthOnlyFormat:"depth32float",channels:1},depth32float:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,isDepthStencil:!0,hasDepth:!0,hasStencil:!1,channels:1},"depth32float-stencil8":{bytesPerBlock:8,blockWidth:1,blockHeight:1,isCompressed:!1,isDepthStencil:!0,hasDepth:!0,hasStencil:!0,stencilOnlyFormat:"depth32float",channels:1},rgb9e5ufloat:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,channels:4},"bc1-rgba-unorm":{bytesPerBlock:8,blockWidth:4,blockHeight:4,isCompressed:!0,channels:4},"bc1-rgba-unorm-srgb":{bytesPerBlock:8,blockWidth:4,blockHeight:4,isCompressed:!0,channels:4},"bc2-rgba-unorm":{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:!0,channels:4},"bc2-rgba-unorm-srgb":{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:!0,channels:4},"bc3-rgba-unorm":{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:!0,channels:4},"bc3-rgba-unorm-srgb":{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:!0,channels:4},"bc4-r-unorm":{bytesPerBlock:8,blockWidth:4,blockHeight:4,isCompressed:!0,channels:1},"bc4-r-snorm":{bytesPerBlock:8,blockWidth:4,blockHeight:4,isCompressed:!0,channels:1},"bc5-rg-unorm":{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:!0,channels:2},"bc5-rg-snorm":{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:!0,channels:2},"bc6h-rgb-ufloat":{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:!0,channels:4},"bc6h-rgb-float":{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:!0,channels:4},"bc7-rgba-unorm":{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:!0,channels:4},"bc7-rgba-unorm-srgb":{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:!0,channels:4},"etc2-rgb8unorm":{bytesPerBlock:8,blockWidth:4,blockHeight:4,isCompressed:!0,channels:4},"etc2-rgb8unorm-srgb":{bytesPerBlock:8,blockWidth:4,blockHeight:4,isCompressed:!0,channels:4},"etc2-rgb8a1unorm":{bytesPerBlock:8,blockWidth:4,blockHeight:4,isCompressed:!0,channels:4},"etc2-rgb8a1unorm-srgb":{bytesPerBlock:8,blockWidth:4,blockHeight:4,isCompressed:!0,channels:4},"etc2-rgba8unorm":{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:!0,channels:4},"etc2-rgba8unorm-srgb":{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:!0,channels:4},"eac-r11unorm":{bytesPerBlock:8,blockWidth:1,blockHeight:1,isCompressed:!0,channels:1},"eac-r11snorm":{bytesPerBlock:8,blockWidth:1,blockHeight:1,isCompressed:!0,channels:1},"eac-rg11unorm":{bytesPerBlock:16,blockWidth:1,blockHeight:1,isCompressed:!0,channels:2},"eac-rg11snorm":{bytesPerBlock:16,blockWidth:1,blockHeight:1,isCompressed:!0,channels:2},"astc-4x4-unorm":{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:!0,channels:4},"astc-4x4-unorm-srgb":{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:!0,channels:4},"astc-5x4-unorm":{bytesPerBlock:16,blockWidth:5,blockHeight:4,isCompressed:!0,channels:4},"astc-5x4-unorm-srgb":{bytesPerBlock:16,blockWidth:5,blockHeight:4,isCompressed:!0,channels:4},"astc-5x5-unorm":{bytesPerBlock:16,blockWidth:5,blockHeight:5,isCompressed:!0,channels:4},"astc-5x5-unorm-srgb":{bytesPerBlock:16,blockWidth:5,blockHeight:5,isCompressed:!0,channels:4},"astc-6x5-unorm":{bytesPerBlock:16,blockWidth:6,blockHeight:5,isCompressed:!0,channels:4},"astc-6x5-unorm-srgb":{bytesPerBlock:16,blockWidth:6,blockHeight:5,isCompressed:!0,channels:4},"astc-6x6-unorm":{bytesPerBlock:16,blockWidth:6,blockHeight:6,isCompressed:!0,channels:4},"astc-6x6-unorm-srgb":{bytesPerBlock:16,blockWidth:6,blockHeight:6,isCompressed:!0,channels:4},"astc-8x5-unorm":{bytesPerBlock:16,blockWidth:8,blockHeight:5,isCompressed:!0,channels:4},"astc-8x5-unorm-srgb":{bytesPerBlock:16,blockWidth:8,blockHeight:5,isCompressed:!0,channels:4},"astc-8x6-unorm":{bytesPerBlock:16,blockWidth:8,blockHeight:6,isCompressed:!0,channels:4},"astc-8x6-unorm-srgb":{bytesPerBlock:16,blockWidth:8,blockHeight:6,isCompressed:!0,channels:4},"astc-8x8-unorm":{bytesPerBlock:16,blockWidth:8,blockHeight:8,isCompressed:!0,channels:4},"astc-8x8-unorm-srgb":{bytesPerBlock:16,blockWidth:8,blockHeight:8,isCompressed:!0,channels:4},"astc-10x5-unorm":{bytesPerBlock:16,blockWidth:10,blockHeight:5,isCompressed:!0,channels:4},"astc-10x5-unorm-srgb":{bytesPerBlock:16,blockWidth:10,blockHeight:5,isCompressed:!0,channels:4},"astc-10x6-unorm":{bytesPerBlock:16,blockWidth:10,blockHeight:6,isCompressed:!0,channels:4},"astc-10x6-unorm-srgb":{bytesPerBlock:16,blockWidth:10,blockHeight:6,isCompressed:!0,channels:4},"astc-10x8-unorm":{bytesPerBlock:16,blockWidth:10,blockHeight:8,isCompressed:!0,channels:4},"astc-10x8-unorm-srgb":{bytesPerBlock:16,blockWidth:10,blockHeight:8,isCompressed:!0,channels:4},"astc-10x10-unorm":{bytesPerBlock:16,blockWidth:10,blockHeight:10,isCompressed:!0,channels:4},"astc-10x10-unorm-srgb":{bytesPerBlock:16,blockWidth:10,blockHeight:10,isCompressed:!0,channels:4},"astc-12x10-unorm":{bytesPerBlock:16,blockWidth:12,blockHeight:10,isCompressed:!0,channels:4},"astc-12x10-unorm-srgb":{bytesPerBlock:16,blockWidth:12,blockHeight:10,isCompressed:!0,channels:4},"astc-12x12-unorm":{bytesPerBlock:16,blockWidth:12,blockHeight:12,isCompressed:!0,channels:4},"astc-12x12-unorm-srgb":{bytesPerBlock:16,blockWidth:12,blockHeight:12,isCompressed:!0,channels:4}};class xe{constructor(){this.id=xe._id++,this.line=0}get isAstNode(){return!0}get astNodeType(){return""}search(e){e(this)}searchBlock(e,t){if(e){t(Rt.instance);for(const n of e)n instanceof Array?this.searchBlock(n,t):n.search(t);t(Dt.instance)}}constEvaluate(e,t){throw new Error("Cannot evaluate node")}constEvaluateString(e){return this.constEvaluate(e).toString()}}xe._id=0;class Rt extends xe{}Rt.instance=new Rt;class Dt extends xe{}Dt.instance=new Dt;const ri=new Set(["all","all","any","select","arrayLength","abs","acos","acosh","asin","asinh","atan","atanh","atan2","ceil","clamp","cos","cosh","countLeadingZeros","countOneBits","countTrailingZeros","cross","degrees","determinant","distance","dot","dot4U8Packed","dot4I8Packed","exp","exp2","extractBits","faceForward","firstLeadingBit","firstTrailingBit","floor","fma","fract","frexp","insertBits","inverseSqrt","ldexp","length","log","log2","max","min","mix","modf","normalize","pow","quantizeToF16","radians","reflect","refract","reverseBits","round","saturate","sign","sin","sinh","smoothStep","sqrt","step","tan","tanh","transpose","trunc","dpdx","dpdxCoarse","dpdxFine","dpdy","dpdyCoarse","dpdyFine","fwidth","fwidthCoarse","fwidthFine","textureDimensions","textureGather","textureGatherCompare","textureLoad","textureNumLayers","textureNumLevels","textureNumSamples","textureSample","textureSampleBias","textureSampleCompare","textureSampleCompareLevel","textureSampleGrad","textureSampleLevel","textureSampleBaseClampToEdge","textureStore","atomicLoad","atomicStore","atomicAdd","atomicSub","atomicMax","atomicMin","atomicAnd","atomicOr","atomicXor","atomicExchange","atomicCompareExchangeWeak","pack4x8snorm","pack4x8unorm","pack4xI8","pack4xU8","pack4x8Clamp","pack4xU8Clamp","pack2x16snorm","pack2x16unorm","pack2x16float","unpack4x8snorm","unpack4x8unorm","unpack4xI8","unpack4xU8","unpack2x16snorm","unpack2x16unorm","unpack2x16float","storageBarrier","textureBarrier","workgroupBarrier","workgroupUniformLoad","subgroupAdd","subgroupExclusiveAdd","subgroupInclusiveAdd","subgroupAll","subgroupAnd","subgroupAny","subgroupBallot","subgroupBroadcast","subgroupBroadcastFirst","subgroupElect","subgroupMax","subgroupMin","subgroupMul","subgroupExclusiveMul","subgroupInclusiveMul","subgroupOr","subgroupShuffle","subgroupShuffleDown","subgroupShuffleUp","subgroupShuffleXor","subgroupXor","quadBroadcast","quadSwapDiagonal","quadSwapX","quadSwapY"]);class J extends xe{constructor(){super()}}class ut extends J{constructor(e,t,n,s,i,r){super(),this.calls=new Set,this.name=e,this.args=t,this.returnType=n,this.body=s,this.startLine=i,this.endLine=r}get astNodeType(){return"function"}search(e){if(this.attributes)for(const t of this.attributes)e(t);e(this);for(const t of this.args)e(t);this.searchBlock(this.body,e)}}class to extends J{constructor(e){super(),this.expression=e}get astNodeType(){return"staticAssert"}search(e){this.expression.search(e)}}class oi extends J{constructor(e,t){super(),this.condition=e,this.body=t}get astNodeType(){return"while"}search(e){this.condition.search(e),this.searchBlock(this.body,e)}}class yn extends J{constructor(e,t){super(),this.body=e,this.loopId=t}get astNodeType(){return"continuing"}search(e){this.searchBlock(this.body,e)}}class ai extends J{constructor(e,t,n,s){super(),this.init=e,this.condition=t,this.increment=n,this.body=s}get astNodeType(){return"for"}search(e){var t,n,s;(t=this.init)===null||t===void 0||t.search(e),(n=this.condition)===null||n===void 0||n.search(e),(s=this.increment)===null||s===void 0||s.search(e),this.searchBlock(this.body,e)}}class Oe extends J{constructor(e,t,n,s,i){super(),this.attributes=null,this.name=e,this.type=t,this.storage=n,this.access=s,this.value=i}get astNodeType(){return"var"}search(e){var t;e(this),(t=this.value)===null||t===void 0||t.search(e)}}class On extends J{constructor(e,t,n){super(),this.attributes=null,this.name=e,this.type=t,this.value=n}get astNodeType(){return"override"}search(e){var t;(t=this.value)===null||t===void 0||t.search(e)}}class at extends J{constructor(e,t,n,s,i){super(),this.attributes=null,this.name=e,this.type=t,this.storage=n,this.access=s,this.value=i}get astNodeType(){return"let"}search(e){var t;e(this),(t=this.value)===null||t===void 0||t.search(e)}}class Tt extends J{constructor(e,t,n,s,i){super(),this.attributes=null,this.name=e,this.type=t,this.storage=n,this.access=s,this.value=i}get astNodeType(){return"const"}constEvaluate(e,t){return this.value.constEvaluate(e,t)}search(e){var t;e(this),(t=this.value)===null||t===void 0||t.search(e)}}var He,it,w,y;(a=>{a.increment="++",a.decrement="--"})(He||(He={})),(a=>{a.parse=function(e){const t=e;if(t=="parse")throw new Error("Invalid value for IncrementOperator");return a[t]}})(He||(He={}));class li extends J{constructor(e,t){super(),this.operator=e,this.variable=t}get astNodeType(){return"increment"}search(e){this.variable.search(e)}}(a=>{a.assign="=",a.addAssign="+=",a.subtractAssin="-=",a.multiplyAssign="*=",a.divideAssign="/=",a.moduloAssign="%=",a.andAssign="&=",a.orAssign="|=",a.xorAssign="^=",a.shiftLeftAssign="<<=",a.shiftRightAssign=">>="})(it||(it={})),(a=>{a.parse=function(e){const t=e;if(t=="parse")throw new Error("Invalid value for AssignOperator");return t}})(it||(it={}));class ci extends J{constructor(e,t,n){super(),this.operator=e,this.variable=t,this.value=n}get astNodeType(){return"assign"}search(e){this.variable.search(e),this.value.search(e)}}class Mn extends J{constructor(e,t){super(),this.name=e,this.args=t}get astNodeType(){return"call"}isBuiltin(){return ri.has(this.name)}search(e){for(const t of this.args)t.search(e);e(this)}}class ui extends J{constructor(e,t){super(),this.body=e,this.continuing=t}get astNodeType(){return"loop"}}class fi extends J{constructor(e,t){super(),this.condition=e,this.cases=t}get astNodeType(){return"switch"}}class hi extends J{constructor(e,t,n,s){super(),this.condition=e,this.body=t,this.elseif=n,this.else=s}get astNodeType(){return"if"}search(e){this.condition.search(e),this.searchBlock(this.body,e),this.searchBlock(this.elseif,e),this.searchBlock(this.else,e)}}class di extends J{constructor(e){super(),this.value=e}get astNodeType(){return"return"}search(e){var t;(t=this.value)===null||t===void 0||t.search(e)}}class no extends J{constructor(e){super(),this.name=e}get astNodeType(){return"enable"}}class so extends J{constructor(e){super(),this.extensions=e}get astNodeType(){return"requires"}}class pi extends J{constructor(e,t){super(),this.severity=e,this.rule=t}get astNodeType(){return"diagnostic"}}class Bn extends J{constructor(e,t){super(),this.name=e,this.type=t}get astNodeType(){return"alias"}}class io extends J{constructor(){super()}get astNodeType(){return"discard"}}class gi extends J{constructor(){super(),this.condition=null,this.loopId=-1}get astNodeType(){return"break"}}class mi extends J{constructor(){super(),this.loopId=-1}get astNodeType(){return"continue"}}class P extends J{constructor(e){super(),this.attributes=null,this.name=e}get astNodeType(){return"type"}get isStruct(){return!1}get isArray(){return!1}static maxFormatType(e){let t=e[0];if(t.name==="f32")return t;for(let n=1;n<e.length;++n){const s=P._priority.get(t.name);P._priority.get(e[n].name)<s&&(t=e[n])}return t.name==="x32"?P.i32:t}getTypeName(){return this.name}}P.x32=new P("x32"),P.f32=new P("f32"),P.i32=new P("i32"),P.u32=new P("u32"),P.f16=new P("f16"),P.bool=new P("bool"),P.void=new P("void"),P._priority=new Map([["f32",0],["f16",1],["u32",2],["i32",3],["x32",3]]);class is extends P{constructor(e){super(e)}}class Se extends P{constructor(e,t,n,s){super(e),this.members=t,this.startLine=n,this.endLine=s}get astNodeType(){return"struct"}get isStruct(){return!0}getMemberIndex(e){for(let t=0;t<this.members.length;t++)if(this.members[t].name==e)return t;return-1}search(e){for(const t of this.members)e(t)}}class b extends P{constructor(e,t,n){super(e),this.format=t,this.access=n}get astNodeType(){return"template"}getTypeName(){let e=this.name;if(this.format!==null){if(e==="vec2"||e==="vec3"||e==="vec4"||e==="mat2x2"||e==="mat2x3"||e==="mat2x4"||e==="mat3x2"||e==="mat3x3"||e==="mat3x4"||e==="mat4x2"||e==="mat4x3"||e==="mat4x4"){if(this.format.name==="f32")return e+="f",e;if(this.format.name==="i32")return e+="i",e;if(this.format.name==="u32")return e+="u",e;if(this.format.name==="bool")return e+="b",e;if(this.format.name==="f16")return e+="h",e}e+=`<${this.format.name}>`}else if(e==="vec2"||e==="vec3"||e==="vec4")return e;return e}}b.vec2f=new b("vec2",P.f32,null),b.vec3f=new b("vec3",P.f32,null),b.vec4f=new b("vec4",P.f32,null),b.vec2i=new b("vec2",P.i32,null),b.vec3i=new b("vec3",P.i32,null),b.vec4i=new b("vec4",P.i32,null),b.vec2u=new b("vec2",P.u32,null),b.vec3u=new b("vec3",P.u32,null),b.vec4u=new b("vec4",P.u32,null),b.vec2h=new b("vec2",P.f16,null),b.vec3h=new b("vec3",P.f16,null),b.vec4h=new b("vec4",P.f16,null),b.vec2b=new b("vec2",P.bool,null),b.vec3b=new b("vec3",P.bool,null),b.vec4b=new b("vec4",P.bool,null),b.mat2x2f=new b("mat2x2",P.f32,null),b.mat2x3f=new b("mat2x3",P.f32,null),b.mat2x4f=new b("mat2x4",P.f32,null),b.mat3x2f=new b("mat3x2",P.f32,null),b.mat3x3f=new b("mat3x3",P.f32,null),b.mat3x4f=new b("mat3x4",P.f32,null),b.mat4x2f=new b("mat4x2",P.f32,null),b.mat4x3f=new b("mat4x3",P.f32,null),b.mat4x4f=new b("mat4x4",P.f32,null),b.mat2x2h=new b("mat2x2",P.f16,null),b.mat2x3h=new b("mat2x3",P.f16,null),b.mat2x4h=new b("mat2x4",P.f16,null),b.mat3x2h=new b("mat3x2",P.f16,null),b.mat3x3h=new b("mat3x3",P.f16,null),b.mat3x4h=new b("mat3x4",P.f16,null),b.mat4x2h=new b("mat4x2",P.f16,null),b.mat4x3h=new b("mat4x3",P.f16,null),b.mat4x4h=new b("mat4x4",P.f16,null),b.mat2x2i=new b("mat2x2",P.i32,null),b.mat2x3i=new b("mat2x3",P.i32,null),b.mat2x4i=new b("mat2x4",P.i32,null),b.mat3x2i=new b("mat3x2",P.i32,null),b.mat3x3i=new b("mat3x3",P.i32,null),b.mat3x4i=new b("mat3x4",P.i32,null),b.mat4x2i=new b("mat4x2",P.i32,null),b.mat4x3i=new b("mat4x3",P.i32,null),b.mat4x4i=new b("mat4x4",P.i32,null),b.mat2x2u=new b("mat2x2",P.u32,null),b.mat2x3u=new b("mat2x3",P.u32,null),b.mat2x4u=new b("mat2x4",P.u32,null),b.mat3x2u=new b("mat3x2",P.u32,null),b.mat3x3u=new b("mat3x3",P.u32,null),b.mat3x4u=new b("mat3x4",P.u32,null),b.mat4x2u=new b("mat4x2",P.u32,null),b.mat4x3u=new b("mat4x3",P.u32,null),b.mat4x4u=new b("mat4x4",P.u32,null);class en extends P{constructor(e,t,n,s){super(e),this.storage=t,this.type=n,this.access=s}get astNodeType(){return"pointer"}}class lt extends P{constructor(e,t,n,s){super(e),this.attributes=t,this.format=n,this.count=s}get astNodeType(){return"array"}get isArray(){return!0}}class rt extends P{constructor(e,t,n){super(e),this.format=t,this.access=n}get astNodeType(){return"sampler"}}class Ce extends xe{constructor(){super(),this.postfix=null}}class Ge extends Ce{constructor(e){super(),this.value=e}get astNodeType(){return"stringExpr"}toString(){return this.value}constEvaluateString(){return this.value}}class Pe extends Ce{constructor(e,t){super(),this.type=e,this.args=t}get astNodeType(){return"createExpr"}search(e){if(e(this),this.args)for(const t of this.args)t.search(e)}constEvaluate(e,t){return t&&(t[0]=this.type),e.evalExpression(this,e.context)}}class Fn extends Ce{constructor(e,t){super(),this.cachedReturnValue=null,this.name=e,this.args=t}get astNodeType(){return"callExpr"}setCachedReturnValue(e){this.cachedReturnValue=e}get isBuiltin(){return ri.has(this.name)}constEvaluate(e,t){return e.evalExpression(this,e.context)}search(e){for(const t of this.args)t.search(e);e(this)}}class me extends Ce{constructor(e){super(),this.name=e}get astNodeType(){return"varExpr"}search(e){e(this),this.postfix&&this.postfix.search(e)}constEvaluate(e,t){return e.evalExpression(this,e.context)}}class yi extends Ce{constructor(e,t){super(),this.name=e,this.initializer=t}get astNodeType(){return"constExpr"}constEvaluate(e,t){if(this.initializer){const n=e.evalExpression(this.initializer,e.context);return n!==null&&this.postfix?n.getSubData(e,this.postfix,e.context):n}return null}search(e){this.initializer.search(e)}}class oe extends Ce{constructor(e,t){super(),this.value=e,this.type=t}get astNodeType(){return"literalExpr"}constEvaluate(e,t){return t!==void 0&&(t[0]=this.type),this.value}get isScalar(){return this.value instanceof m}get isVector(){return this.value instanceof d||this.value instanceof D}get scalarValue(){return this.value instanceof m?this.value.value:(console.error("Value is not scalar."),0)}get vectorValue(){return this.value instanceof d||this.value instanceof D?this.value.data:(console.error("Value is not a vector or matrix."),new Float32Array(0))}}class _i extends Ce{constructor(e,t){super(),this.type=e,this.value=t}get astNodeType(){return"bitcastExpr"}search(e){this.value.search(e)}}class Ke extends Ce{constructor(e){super(),this.index=e}search(e){this.index.search(e)}}class xi extends Ce{constructor(){super()}}class re extends xi{constructor(e,t){super(),this.operator=e,this.right=t}get astNodeType(){return"unaryOp"}constEvaluate(e,t){return e.evalExpression(this,e.context)}search(e){this.right.search(e)}}class be extends xi{constructor(e,t,n){super(),this.operator=e,this.left=t,this.right=n}get astNodeType(){return"binaryOp"}_getPromotedType(e,t){return e.name===t.name?e:e.name==="f32"||t.name==="f32"?P.f32:e.name==="u32"||t.name==="u32"?P.u32:P.i32}constEvaluate(e,t){return e.evalExpression(this,e.context)}search(e){this.left.search(e),this.right.search(e)}}class vi extends xe{constructor(e){super(),this.body=e}}class Pt extends Ce{constructor(){super()}get astNodeType(){return"default"}}class bi extends vi{constructor(e,t){super(t),this.selectors=e}get astNodeType(){return"case"}search(e){this.searchBlock(this.body,e)}}class wi extends vi{constructor(e){super(e)}get astNodeType(){return"default"}search(e){this.searchBlock(this.body,e)}}class rs extends xe{constructor(e,t,n){super(),this.name=e,this.type=t,this.attributes=n}get astNodeType(){return"argument"}}class ro extends xe{constructor(e,t){super(),this.condition=e,this.body=t}get astNodeType(){return"elseif"}search(e){this.condition.search(e),this.searchBlock(this.body,e)}}class os extends xe{constructor(e,t,n){super(),this.name=e,this.type=t,this.attributes=n}get astNodeType(){return"member"}}class ki extends xe{constructor(e,t){super(),this.name=e,this.value=t}get astNodeType(){return"attribute"}}class _e{constructor(e,t){this.parent=null,this.typeInfo=e,this.parent=t,this.id=_e._id++}clone(){throw`Clone: Not implemented for ${this.constructor.name}`}setDataValue(e,t,n,s){console.error(`SetDataValue: Not implemented for ${this.constructor.name}`)}getSubData(e,t,n){return console.error(`GetDataValue: Not implemented for ${this.constructor.name}`),null}toString(){return`<${this.typeInfo.name}>`}}_e._id=0;class _n extends _e{constructor(){super(new ye("void",null),null)}toString(){return"void"}}_n.void=new _n;class je extends _e{constructor(e){super(new ye("pointer",null),null),this.reference=e}clone(){return this}setDataValue(e,t,n,s){this.reference.setDataValue(e,t,n,s)}getSubData(e,t,n){return t?this.reference.getSubData(e,t,n):this}}class m extends _e{constructor(e,t,n=null){super(t,n),e instanceof Int32Array||e instanceof Uint32Array||e instanceof Float32Array?this.data=e:this.typeInfo.name==="x32"?e-Math.floor(e)!=0?this.data=new Float32Array([e]):this.data=e>=0?new Uint32Array([e]):new Int32Array([e]):this.typeInfo.name==="i32"||this.typeInfo.name==="bool"?this.data=new Int32Array([e]):this.typeInfo.name==="u32"?this.data=new Uint32Array([e]):this.typeInfo.name==="f32"||this.typeInfo.name==="f16"?this.data=new Float32Array([e]):console.error("ScalarData2: Invalid type",t)}clone(){if(this.data instanceof Float32Array)return new m(new Float32Array(this.data),this.typeInfo,null);if(this.data instanceof Int32Array)return new m(new Int32Array(this.data),this.typeInfo,null);if(this.data instanceof Uint32Array)return new m(new Uint32Array(this.data),this.typeInfo,null);throw"ScalarData: Invalid data type"}get value(){return this.data[0]}set value(e){this.data[0]=e}setDataValue(e,t,n,s){if(n)return void console.error("SetDataValue: Scalar data does not support postfix",n);if(!(t instanceof m))return void console.error("SetDataValue: Invalid value",t);let i=t.data[0];this.typeInfo.name==="i32"||this.typeInfo.name==="u32"?i=Math.floor(i):this.typeInfo.name==="bool"&&(i=i?1:0),this.data[0]=i}getSubData(e,t,n){return t?(console.error("getSubData: Scalar data does not support postfix",t),null):this}toString(){return`${this.value}`}}function oo(a,e,t){const n=e.length;return n===2?t==="f32"?new d(new Float32Array(e),a.getTypeInfo("vec2f")):t==="i32"||t==="bool"?new d(new Int32Array(e),a.getTypeInfo("vec2i")):t==="u32"?new d(new Uint32Array(e),a.getTypeInfo("vec2u")):t==="f16"?new d(new Float32Array(e),a.getTypeInfo("vec2h")):(console.error(`getSubData: Unknown format ${t}`),null):n===3?t==="f32"?new d(new Float32Array(e),a.getTypeInfo("vec3f")):t==="i32"||t==="bool"?new d(new Int32Array(e),a.getTypeInfo("vec3i")):t==="u32"?new d(new Uint32Array(e),a.getTypeInfo("vec3u")):t==="f16"?new d(new Float32Array(e),a.getTypeInfo("vec3h")):(console.error(`getSubData: Unknown format ${t}`),null):n===4?t==="f32"?new d(new Float32Array(e),a.getTypeInfo("vec4f")):t==="i32"||t==="bool"?new d(new Int32Array(e),a.getTypeInfo("vec4i")):t==="u32"?new d(new Uint32Array(e),a.getTypeInfo("vec4u")):t==="f16"?new d(new Float32Array(e),a.getTypeInfo("vec4h")):(console.error(`getSubData: Unknown format ${t}`),null):(console.error(`getSubData: Invalid vector size ${e.length}`),null)}class d extends _e{constructor(e,t,n=null){if(super(t,n),e instanceof Float32Array||e instanceof Uint32Array||e instanceof Int32Array)this.data=e;else{const s=this.typeInfo.name;s==="vec2f"||s==="vec3f"||s==="vec4f"?this.data=new Float32Array(e):s==="vec2i"||s==="vec3i"||s==="vec4i"?this.data=new Int32Array(e):s==="vec2u"||s==="vec3u"||s==="vec4u"?this.data=new Uint32Array(e):s==="vec2h"||s==="vec3h"||s==="vec4h"?this.data=new Float32Array(e):s==="vec2b"||s==="vec3b"||s==="vec4b"?this.data=new Int32Array(e):s==="vec2"||s==="vec3"||s==="vec4"?this.data=new Float32Array(e):console.error(`VectorData: Invalid type ${s}`)}}clone(){if(this.data instanceof Float32Array)return new d(new Float32Array(this.data),this.typeInfo,null);if(this.data instanceof Int32Array)return new d(new Int32Array(this.data),this.typeInfo,null);if(this.data instanceof Uint32Array)return new d(new Uint32Array(this.data),this.typeInfo,null);throw"VectorData: Invalid data type"}setDataValue(e,t,n,s){n instanceof Ge?console.error("TODO: Set vector postfix"):t instanceof d?this.data=t.data:console.error("SetDataValue: Invalid value",t)}getSubData(e,t,n){if(t===null)return this;let s=e.getTypeInfo("f32");if(this.typeInfo instanceof We)s=this.typeInfo.format||s;else{const r=this.typeInfo.name;r==="vec2f"||r==="vec3f"||r==="vec4f"?s=e.getTypeInfo("f32"):r==="vec2i"||r==="vec3i"||r==="vec4i"?s=e.getTypeInfo("i32"):r==="vec2b"||r==="vec3b"||r==="vec4b"?s=e.getTypeInfo("bool"):r==="vec2u"||r==="vec3u"||r==="vec4u"?s=e.getTypeInfo("u32"):r==="vec2h"||r==="vec3h"||r==="vec4h"?s=e.getTypeInfo("f16"):console.error(`GetSubData: Unknown type ${r}`)}let i=this;for(;t!==null&&i!==null;){if(t instanceof Ke){const r=t.index;let o=-1;if(r instanceof oe){if(!(r.value instanceof m))return console.error(`GetSubData: Invalid array index ${r.value}`),null;o=r.value.value}else{const l=e.evalExpression(r,n);if(!(l instanceof m))return console.error("GetSubData: Unknown index type",r),null;o=l.value}if(o<0||o>=i.data.length)return console.error("GetSubData: Index out of range",o),null;if(i.data instanceof Float32Array){const l=new Float32Array(i.data.buffer,i.data.byteOffset+4*o,1);return new m(l,s)}if(i.data instanceof Int32Array){const l=new Int32Array(i.data.buffer,i.data.byteOffset+4*o,1);return new m(l,s)}if(i.data instanceof Uint32Array){const l=new Uint32Array(i.data.buffer,i.data.byteOffset+4*o,1);return new m(l,s)}throw"GetSubData: Invalid data type"}if(!(t instanceof Ge))return console.error("GetSubData: Unknown postfix",t),null;{const r=t.value.toLowerCase();if(r.length===1){let l=0;if(r==="x"||r==="r")l=0;else if(r==="y"||r==="g")l=1;else if(r==="z"||r==="b")l=2;else{if(r!=="w"&&r!=="a")return console.error(`GetSubData: Unknown member ${r}`),null;l=3}if(this.data instanceof Float32Array){let c=new Float32Array(this.data.buffer,this.data.byteOffset+4*l,1);return new m(c,s,this)}if(this.data instanceof Int32Array){let c=new Int32Array(this.data.buffer,this.data.byteOffset+4*l,1);return new m(c,s,this)}if(this.data instanceof Uint32Array){let c=new Uint32Array(this.data.buffer,this.data.byteOffset+4*l,1);return new m(c,s,this)}}const o=[];for(const l of r)l==="x"||l==="r"?o.push(this.data[0]):l==="y"||l==="g"?o.push(this.data[1]):l==="z"||l==="b"?o.push(this.data[2]):l==="w"||l==="a"?o.push(this.data[3]):console.error(`GetDataValue: Unknown member ${l}`);i=oo(e,o,s.name)}t=t.postfix}return i}toString(){let e=`${this.data[0]}`;for(let t=1;t<this.data.length;++t)e+=`, ${this.data[t]}`;return e}}class D extends _e{constructor(e,t,n=null){super(t,n),e instanceof Float32Array?this.data=e:this.data=new Float32Array(e)}clone(){return new D(new Float32Array(this.data),this.typeInfo,null)}setDataValue(e,t,n,s){n instanceof Ge?console.error("TODO: Set matrix postfix"):t instanceof D?this.data=t.data:console.error("SetDataValue: Invalid value",t)}getSubData(e,t,n){if(t===null)return this;const s=this.typeInfo.name;if(e.getTypeInfo("f32"),this.typeInfo instanceof We)this.typeInfo.format;else if(s.endsWith("f"))e.getTypeInfo("f32");else if(s.endsWith("i"))e.getTypeInfo("i32");else if(s.endsWith("u"))e.getTypeInfo("u32");else{if(!s.endsWith("h"))return console.error(`GetDataValue: Unknown type ${s}`),null;e.getTypeInfo("f16")}if(t instanceof Ke){const i=t.index;let r=-1;if(i instanceof oe){if(!(i.value instanceof m))return console.error(`GetDataValue: Invalid array index ${i.value}`),null;r=i.value.value}else{const c=e.evalExpression(i,n);if(!(c instanceof m))return console.error("GetDataValue: Unknown index type",i),null;r=c.value}if(r<0||r>=this.data.length)return console.error("GetDataValue: Index out of range",r),null;const o=s.endsWith("h")?"h":"f";let l;if(s==="mat2x2"||s==="mat2x2f"||s==="mat2x2h"||s==="mat3x2"||s==="mat3x2f"||s==="mat3x2h"||s==="mat4x2"||s==="mat4x2f"||s==="mat4x2h")l=new d(new Float32Array(this.data.buffer,this.data.byteOffset+2*r*4,2),e.getTypeInfo(`vec2${o}`));else if(s==="mat2x3"||s==="mat2x3f"||s==="mat2x3h"||s==="mat3x3"||s==="mat3x3f"||s==="mat3x3h"||s==="mat4x3"||s==="mat4x3f"||s==="mat4x3h")l=new d(new Float32Array(this.data.buffer,this.data.byteOffset+3*r*4,3),e.getTypeInfo(`vec3${o}`));else{if(s!=="mat2x4"&&s!=="mat2x4f"&&s!=="mat2x4h"&&s!=="mat3x4"&&s!=="mat3x4f"&&s!=="mat3x4h"&&s!=="mat4x4"&&s!=="mat4x4f"&&s!=="mat4x4h")return console.error(`GetDataValue: Unknown type ${s}`),null;l=new d(new Float32Array(this.data.buffer,this.data.byteOffset+4*r*4,4),e.getTypeInfo(`vec4${o}`))}return t.postfix?l.getSubData(e,t.postfix,n):l}return console.error("GetDataValue: Invalid postfix",t),null}toString(){let e=`${this.data[0]}`;for(let t=1;t<this.data.length;++t)e+=`, ${this.data[t]}`;return e}}class te extends _e{constructor(e,t,n=0,s=null){super(t,s),this.buffer=e instanceof ArrayBuffer?e:e.buffer,this.offset=n}clone(){const e=new Uint8Array(new Uint8Array(this.buffer,this.offset,this.typeInfo.size));return new te(e.buffer,this.typeInfo,0,null)}setDataValue(e,t,n,s){if(t===null)return void console.log("setDataValue: NULL data.");let i=this.offset,r=this.typeInfo;for(;n;){if(n instanceof Ke)if(r instanceof De){const o=n.index;if(o instanceof oe){if(!(o.value instanceof m))return void console.error(`SetDataValue: Invalid index type ${o.value}`);i+=o.value.value*r.stride}else{const l=e.evalExpression(o,s);if(!(l instanceof m))return void console.error("SetDataValue: Unknown index type",o);i+=l.value*r.stride}r=r.format}else console.error(`SetDataValue: Type ${r.getTypeName()} is not an array`);else{if(!(n instanceof Ge))return void console.error("SetDataValue: Unknown postfix type",n);{const o=n.value;if(r instanceof Fe){let l=!1;for(const c of r.members)if(c.name===o){i+=c.offset,r=c.type,l=!0;break}if(!l)return void console.error(`SetDataValue: Member ${o} not found`)}else if(r instanceof ye){const l=r.getTypeName();let c=0;if(o==="x"||o==="r")c=0;else if(o==="y"||o==="g")c=1;else if(o==="z"||o==="b")c=2;else{if(o!=="w"&&o!=="a")return void console.error(`SetDataValue: Unknown member ${o}`);c=3}if(!(t instanceof m))return void console.error("SetDataValue: Invalid value",t);const u=t.value;return l==="vec2f"?void(new Float32Array(this.buffer,i,2)[c]=u):l==="vec3f"?void(new Float32Array(this.buffer,i,3)[c]=u):l==="vec4f"?void(new Float32Array(this.buffer,i,4)[c]=u):l==="vec2i"?void(new Int32Array(this.buffer,i,2)[c]=u):l==="vec3i"?void(new Int32Array(this.buffer,i,3)[c]=u):l==="vec4i"?void(new Int32Array(this.buffer,i,4)[c]=u):l==="vec2u"?void(new Uint32Array(this.buffer,i,2)[c]=u):l==="vec3u"?void(new Uint32Array(this.buffer,i,3)[c]=u):l==="vec4u"?void(new Uint32Array(this.buffer,i,4)[c]=u):void console.error(`SetDataValue: Type ${l} is not a struct`)}}}n=n.postfix}this.setData(e,t,r,i,s)}setData(e,t,n,s,i){const r=n.getTypeName();if(r!=="f32"&&r!=="f16")if(r!=="i32"&&r!=="atomic<i32>"&&r!=="x32")if(r!=="u32"&&r!=="atomic<u32>")if(r!=="bool")if(r!=="vec2f"&&r!=="vec2h")if(r!=="vec3f"&&r!=="vec3h")if(r!=="vec4f"&&r!=="vec4h")if(r!=="vec2i")if(r!=="vec3i")if(r!=="vec4i")if(r!=="vec2u")if(r!=="vec3u")if(r!=="vec4u")if(r!=="vec2b")if(r!=="vec3b")if(r!=="vec4b")if(r!=="mat2x2f"&&r!=="mat2x2h")if(r!=="mat2x3f"&&r!=="mat2x3h")if(r!=="mat2x4f"&&r!=="mat2x4h")if(r!=="mat3x2f"&&r!=="mat3x2h")if(r!=="mat3x3f"&&r!=="mat3x3h")if(r!=="mat3x4f"&&r!=="mat3x4h")if(r!=="mat4x2f"&&r!=="mat4x2h")if(r!=="mat4x3f"&&r!=="mat4x3h")if(r!=="mat4x4f"&&r!=="mat4x4h")if(t instanceof te){if(n===t.typeInfo)return void new Uint8Array(this.buffer,s,t.buffer.byteLength).set(new Uint8Array(t.buffer));console.error("SetDataValue: Type mismatch",r,t.typeInfo.getTypeName())}else console.error(`SetData: Unknown type ${r}`);else{const o=new Float32Array(this.buffer,s,16);t instanceof D?(o[0]=t.data[0],o[1]=t.data[1],o[2]=t.data[2],o[3]=t.data[3],o[4]=t.data[4],o[5]=t.data[5],o[6]=t.data[6],o[7]=t.data[7],o[8]=t.data[8],o[9]=t.data[9],o[10]=t.data[10],o[11]=t.data[11],o[12]=t.data[12],o[13]=t.data[13],o[14]=t.data[14],o[15]=t.data[15]):(o[0]=t[0],o[1]=t[1],o[2]=t[2],o[3]=t[3],o[4]=t[4],o[5]=t[5],o[6]=t[6],o[7]=t[7],o[8]=t[8],o[9]=t[9],o[10]=t[10],o[11]=t[11],o[12]=t[12],o[13]=t[13],o[14]=t[14],o[15]=t[15])}else{const o=new Float32Array(this.buffer,s,12);t instanceof D?(o[0]=t.data[0],o[1]=t.data[1],o[2]=t.data[2],o[3]=t.data[3],o[4]=t.data[4],o[5]=t.data[5],o[6]=t.data[6],o[7]=t.data[7],o[8]=t.data[8],o[9]=t.data[9],o[10]=t.data[10],o[11]=t.data[11]):(o[0]=t[0],o[1]=t[1],o[2]=t[2],o[3]=t[3],o[4]=t[4],o[5]=t[5],o[6]=t[6],o[7]=t[7],o[8]=t[8],o[9]=t[9],o[10]=t[10],o[11]=t[11])}else{const o=new Float32Array(this.buffer,s,8);t instanceof D?(o[0]=t.data[0],o[1]=t.data[1],o[2]=t.data[2],o[3]=t.data[3],o[4]=t.data[4],o[5]=t.data[5],o[6]=t.data[6],o[7]=t.data[7]):(o[0]=t[0],o[1]=t[1],o[2]=t[2],o[3]=t[3],o[4]=t[4],o[5]=t[5],o[6]=t[6],o[7]=t[7])}else{const o=new Float32Array(this.buffer,s,12);t instanceof D?(o[0]=t.data[0],o[1]=t.data[1],o[2]=t.data[2],o[3]=t.data[3],o[4]=t.data[4],o[5]=t.data[5],o[6]=t.data[6],o[7]=t.data[7],o[8]=t.data[8],o[9]=t.data[9],o[10]=t.data[10],o[11]=t.data[11]):(o[0]=t[0],o[1]=t[1],o[2]=t[2],o[3]=t[3],o[4]=t[4],o[5]=t[5],o[6]=t[6],o[7]=t[7],o[8]=t[8],o[9]=t[9],o[10]=t[10],o[11]=t[11])}else{const o=new Float32Array(this.buffer,s,9);t instanceof D?(o[0]=t.data[0],o[1]=t.data[1],o[2]=t.data[2],o[3]=t.data[3],o[4]=t.data[4],o[5]=t.data[5],o[6]=t.data[6],o[7]=t.data[7],o[8]=t.data[8]):(o[0]=t[0],o[1]=t[1],o[2]=t[2],o[3]=t[3],o[4]=t[4],o[5]=t[5],o[6]=t[6],o[7]=t[7],o[8]=t[8])}else{const o=new Float32Array(this.buffer,s,6);t instanceof D?(o[0]=t.data[0],o[1]=t.data[1],o[2]=t.data[2],o[3]=t.data[3],o[4]=t.data[4],o[5]=t.data[5]):(o[0]=t[0],o[1]=t[1],o[2]=t[2],o[3]=t[3],o[4]=t[4],o[5]=t[5])}else{const o=new Float32Array(this.buffer,s,8);t instanceof D?(o[0]=t.data[0],o[1]=t.data[1],o[2]=t.data[2],o[3]=t.data[3],o[4]=t.data[4],o[5]=t.data[5],o[6]=t.data[6],o[7]=t.data[7]):(o[0]=t[0],o[1]=t[1],o[2]=t[2],o[3]=t[3],o[4]=t[4],o[5]=t[5],o[6]=t[6],o[7]=t[7])}else{const o=new Float32Array(this.buffer,s,6);t instanceof D?(o[0]=t.data[0],o[1]=t.data[1],o[2]=t.data[2],o[3]=t.data[3],o[4]=t.data[4],o[5]=t.data[5]):(o[0]=t[0],o[1]=t[1],o[2]=t[2],o[3]=t[3],o[4]=t[4],o[5]=t[5])}else{const o=new Float32Array(this.buffer,s,4);t instanceof D?(o[0]=t.data[0],o[1]=t.data[1],o[2]=t.data[2],o[3]=t.data[3]):(o[0]=t[0],o[1]=t[1],o[2]=t[2],o[3]=t[3])}else{const o=new Uint32Array(this.buffer,s,4);t instanceof d?(o[0]=t.data[0],o[1]=t.data[1],o[2]=t.data[2],o[3]=t.data[3]):(o[0]=t[0],o[1]=t[1],o[2]=t[2],o[3]=t[3])}else{const o=new Uint32Array(this.buffer,s,3);t instanceof d?(o[0]=t.data[0],o[1]=t.data[1],o[2]=t.data[2]):(o[0]=t[0],o[1]=t[1],o[2]=t[2])}else{const o=new Uint32Array(this.buffer,s,2);t instanceof d?(o[0]=t.data[0],o[1]=t.data[1]):(o[0]=t[0],o[1]=t[1])}else{const o=new Uint32Array(this.buffer,s,4);t instanceof d?(o[0]=t.data[0],o[1]=t.data[1],o[2]=t.data[2],o[3]=t.data[3]):(o[0]=t[0],o[1]=t[1],o[2]=t[2],o[3]=t[3])}else{const o=new Uint32Array(this.buffer,s,3);t instanceof d?(o[0]=t.data[0],o[1]=t.data[1],o[2]=t.data[2]):(o[0]=t[0],o[1]=t[1],o[2]=t[2])}else{const o=new Uint32Array(this.buffer,s,2);t instanceof d?(o[0]=t.data[0],o[1]=t.data[1]):(o[0]=t[0],o[1]=t[1])}else{const o=new Int32Array(this.buffer,s,4);t instanceof d?(o[0]=t.data[0],o[1]=t.data[1],o[2]=t.data[2],o[3]=t.data[3]):(o[0]=t[0],o[1]=t[1],o[2]=t[2],o[3]=t[3])}else{const o=new Int32Array(this.buffer,s,3);t instanceof d?(o[0]=t.data[0],o[1]=t.data[1],o[2]=t.data[2]):(o[0]=t[0],o[1]=t[1],o[2]=t[2])}else{const o=new Int32Array(this.buffer,s,2);t instanceof d?(o[0]=t.data[0],o[1]=t.data[1]):(o[0]=t[0],o[1]=t[1])}else{const o=new Float32Array(this.buffer,s,4);t instanceof d?(o[0]=t.data[0],o[1]=t.data[1],o[2]=t.data[2],o[3]=t.data[3]):(o[0]=t[0],o[1]=t[1],o[2]=t[2],o[3]=t[3])}else{const o=new Float32Array(this.buffer,s,3);t instanceof d?(o[0]=t.data[0],o[1]=t.data[1],o[2]=t.data[2]):(o[0]=t[0],o[1]=t[1],o[2]=t[2])}else{const o=new Float32Array(this.buffer,s,2);t instanceof d?(o[0]=t.data[0],o[1]=t.data[1]):(o[0]=t[0],o[1]=t[1])}else t instanceof m&&(new Int32Array(this.buffer,s,1)[0]=t.value);else t instanceof m&&(new Uint32Array(this.buffer,s,1)[0]=t.value);else t instanceof m&&(new Int32Array(this.buffer,s,1)[0]=t.value);else t instanceof m&&(new Float32Array(this.buffer,s,1)[0]=t.value)}getSubData(e,t,n){var s,i,r;if(t===null)return this;let o=this.offset,l=this.typeInfo;for(;t;){if(t instanceof Ke){const u=t.index,f=e.evalExpression(u,n);let p=0;if(f instanceof m?p=f.value:console.error("GetDataValue: Invalid index type",u),l instanceof De)o+=p*l.stride,l=l.format;else{const x=l.getTypeName();x==="mat4x4"||x==="mat4x4f"||x==="mat4x4h"?(o+=16*p,l=e.getTypeInfo("vec4f")):console.error(`getDataValue: Type ${l.getTypeName()} is not an array`)}}else{if(!(t instanceof Ge))return console.error("GetDataValue: Unknown postfix type",t),null;{const u=t.value;if(l instanceof Fe){let f=!1;for(const p of l.members)if(p.name===u){o+=p.offset,l=p.type,f=!0;break}if(!f)return console.error(`GetDataValue: Member ${u} not found`),null}else if(l instanceof ye){const f=l.getTypeName();if(f==="vec2f"||f==="vec3f"||f==="vec4f"||f==="vec2i"||f==="vec3i"||f==="vec4i"||f==="vec2u"||f==="vec3u"||f==="vec4u"||f==="vec2b"||f==="vec3b"||f==="vec4b"||f==="vec2h"||f==="vec3h"||f==="vec4h"||f==="vec2"||f==="vec3"||f==="vec4"){if(u.length>0&&u.length<5){let p="f";const x=[];for(let I=0;I<u.length;++I){const L=u[I].toLowerCase();let E=0;if(L==="x"||L==="r")E=0;else if(L==="y"||L==="g")E=1;else if(L==="z"||L==="b")E=2;else{if(L!=="w"&&L!=="a")return console.error(`Unknown member ${u}`),null;E=3}if(u.length===1){if(f.endsWith("f"))return this.buffer.byteLength<o+4*E+4?(console.log("Insufficient buffer data"),null):new m(new Float32Array(this.buffer,o+4*E,1),e.getTypeInfo("f32"),this);if(f.endsWith("h"))return new m(new Float32Array(this.buffer,o+4*E,1),e.getTypeInfo("f16"),this);if(f.endsWith("i"))return new m(new Int32Array(this.buffer,o+4*E,1),e.getTypeInfo("i32"),this);if(f.endsWith("b"))return new m(new Int32Array(this.buffer,o+4*E,1),e.getTypeInfo("bool"),this);if(f.endsWith("u"))return new m(new Uint32Array(this.buffer,o+4*E,1),e.getTypeInfo("i32"),this)}if(f==="vec2f")x.push(new Float32Array(this.buffer,o,2)[E]);else if(f==="vec3f"){if(o+12>=this.buffer.byteLength)return console.log("Insufficient buffer data"),null;const M=new Float32Array(this.buffer,o,3);x.push(M[E])}else if(f==="vec4f")x.push(new Float32Array(this.buffer,o,4)[E]);else if(f==="vec2i")p="i",x.push(new Int32Array(this.buffer,o,2)[E]);else if(f==="vec3i")p="i",x.push(new Int32Array(this.buffer,o,3)[E]);else if(f==="vec4i")p="i",x.push(new Int32Array(this.buffer,o,4)[E]);else if(f==="vec2u"){p="u";const M=new Uint32Array(this.buffer,o,2);x.push(M[E])}else f==="vec3u"?(p="u",x.push(new Uint32Array(this.buffer,o,3)[E])):f==="vec4u"&&(p="u",x.push(new Uint32Array(this.buffer,o,4)[E]))}return x.length===2?l=e.getTypeInfo(`vec2${p}`):x.length===3?l=e.getTypeInfo(`vec3${p}`):x.length===4?l=e.getTypeInfo(`vec4${p}`):console.error(`GetDataValue: Invalid vector length ${x.length}`),new d(x,l,null)}return console.error(`GetDataValue: Unknown member ${u}`),null}return console.error(`GetDataValue: Type ${f} is not a struct`),null}}}t=t.postfix}const c=l.getTypeName();return c==="f32"?new m(new Float32Array(this.buffer,o,1),l,this):c==="i32"?new m(new Int32Array(this.buffer,o,1),l,this):c==="u32"?new m(new Uint32Array(this.buffer,o,1),l,this):c==="vec2f"?new d(new Float32Array(this.buffer,o,2),l,this):c==="vec3f"?new d(new Float32Array(this.buffer,o,3),l,this):c==="vec4f"?new d(new Float32Array(this.buffer,o,4),l,this):c==="vec2i"?new d(new Int32Array(this.buffer,o,2),l,this):c==="vec3i"?new d(new Int32Array(this.buffer,o,3),l,this):c==="vec4i"?new d(new Int32Array(this.buffer,o,4),l,this):c==="vec2u"?new d(new Uint32Array(this.buffer,o,2),l,this):c==="vec3u"?new d(new Uint32Array(this.buffer,o,3),l,this):c==="vec4u"?new d(new Uint32Array(this.buffer,o,4),l,this):l instanceof We&&l.name==="atomic"?((s=l.format)===null||s===void 0?void 0:s.name)==="u32"?new m(new Uint32Array(this.buffer,o,1)[0],l.format,this):((i=l.format)===null||i===void 0?void 0:i.name)==="i32"?new m(new Int32Array(this.buffer,o,1)[0],l.format,this):(console.error(`GetDataValue: Invalid atomic format ${(r=l.format)===null||r===void 0?void 0:r.name}`),null):new te(this.buffer,l,o,this)}toString(){let e="";if(this.typeInfo instanceof De)if(this.typeInfo.format.name==="f32"){const t=new Float32Array(this.buffer,this.offset);e=`[${t[0]}`;for(let n=1;n<t.length;++n)e+=`, ${t[n]}`}else if(this.typeInfo.format.name==="i32"){const t=new Int32Array(this.buffer,this.offset);e=`[${t[0]}`;for(let n=1;n<t.length;++n)e+=`, ${t[n]}`}else if(this.typeInfo.format.name==="u32"){const t=new Uint32Array(this.buffer,this.offset);e=`[${t[0]}`;for(let n=1;n<t.length;++n)e+=`, ${t[n]}`}else if(this.typeInfo.format.name==="vec2f"){const t=new Float32Array(this.buffer,this.offset);e=`[${t[0]}, ${t[1]}]`;for(let n=1;n<t.length/2;++n)e+=`, [${t[2*n]}, ${t[2*n+1]}]`}else if(this.typeInfo.format.name==="vec3f"){const t=new Float32Array(this.buffer,this.offset);e=`[${t[0]}, ${t[1]}, ${t[2]}]`;for(let n=4;n<t.length;n+=4)e+=`, [${t[n]}, ${t[n+1]}, ${t[n+2]}]`}else if(this.typeInfo.format.name==="vec4f"){const t=new Float32Array(this.buffer,this.offset);e=`[${t[0]}, ${t[1]}, ${t[2]}, ${t[3]}]`;for(let n=4;n<t.length;n+=4)e+=`, [${t[n]}, ${t[n+1]}, ${t[n+2]}, ${t[n+3]}]`}else e="[...]";else this.typeInfo instanceof Fe?e+="{...}":e="[...]";return e}}class Ee extends _e{constructor(e,t,n,s){super(t,null),this.data=e,this.descriptor=n,this.view=s}clone(){return new Ee(this.data,this.typeInfo,this.descriptor,this.view)}get width(){var e,t;const n=this.descriptor.size;return n instanceof Array&&n.length>0?(e=n[0])!==null&&e!==void 0?e:0:n instanceof Object&&(t=n.width)!==null&&t!==void 0?t:0}get height(){var e,t;const n=this.descriptor.size;return n instanceof Array&&n.length>1?(e=n[1])!==null&&e!==void 0?e:0:n instanceof Object&&(t=n.height)!==null&&t!==void 0?t:0}get depthOrArrayLayers(){var e,t;const n=this.descriptor.size;return n instanceof Array&&n.length>2?(e=n[2])!==null&&e!==void 0?e:0:n instanceof Object&&(t=n.depthOrArrayLayers)!==null&&t!==void 0?t:0}get format(){var e;return this.descriptor&&(e=this.descriptor.format)!==null&&e!==void 0?e:"rgba8unorm"}get sampleCount(){var e;return this.descriptor&&(e=this.descriptor.sampleCount)!==null&&e!==void 0?e:1}get mipLevelCount(){var e;return this.descriptor&&(e=this.descriptor.mipLevelCount)!==null&&e!==void 0?e:1}get dimension(){var e;return this.descriptor&&(e=this.descriptor.dimension)!==null&&e!==void 0?e:"2d"}getMipLevelSize(e){if(e>=this.mipLevelCount)return[0,0,0];const t=[this.width,this.height,this.depthOrArrayLayers];for(let n=0;n<t.length;++n)t[n]=Math.max(1,t[n]>>e);return t}get texelByteSize(){const e=this.format,t=Qt[e];return t?t.isDepthStencil?4:t.bytesPerBlock:0}get bytesPerRow(){return this.width*this.texelByteSize}get isDepthStencil(){const e=this.format,t=Qt[e];return!!t&&t.isDepthStencil}getGpuSize(){const e=this.format,t=Qt[e],n=this.width;if(!e||n<=0||!t)return-1;const s=this.height,i=this.depthOrArrayLayers,r=this.dimension;return n/t.blockWidth*(r==="1d"?1:s/t.blockHeight)*t.bytesPerBlock*i}getPixel(e,t,n=0,s=0){const i=this.texelByteSize,r=this.bytesPerRow,o=this.height,l=this.data[s];return eo(new Uint8Array(l),e,t,n,s,o,r,i,this.format)}setPixel(e,t,n,s,i){const r=this.texelByteSize,o=this.bytesPerRow,l=this.height,c=this.data[s];(function(u,f,p,x,I,L,E,M,R,T){const B=x*(E>>=I)*(L>>=I)+p*E+f*M;switch(R){case"r8unorm":return void q(u,B,"8unorm",1,T);case"r8snorm":return void q(u,B,"8snorm",1,T);case"r8uint":return void q(u,B,"8uint",1,T);case"r8sint":return void q(u,B,"8sint",1,T);case"rg8unorm":return void q(u,B,"8unorm",2,T);case"rg8snorm":return void q(u,B,"8snorm",2,T);case"rg8uint":return void q(u,B,"8uint",2,T);case"rg8sint":return void q(u,B,"8sint",2,T);case"rgba8unorm-srgb":case"rgba8unorm":case"bgra8unorm-srgb":case"bgra8unorm":return void q(u,B,"8unorm",4,T);case"rgba8snorm":return void q(u,B,"8snorm",4,T);case"rgba8uint":return void q(u,B,"8uint",4,T);case"rgba8sint":return void q(u,B,"8sint",4,T);case"r16uint":return void q(u,B,"16uint",1,T);case"r16sint":return void q(u,B,"16sint",1,T);case"r16float":return void q(u,B,"16float",1,T);case"rg16uint":return void q(u,B,"16uint",2,T);case"rg16sint":return void q(u,B,"16sint",2,T);case"rg16float":return void q(u,B,"16float",2,T);case"rgba16uint":return void q(u,B,"16uint",4,T);case"rgba16sint":return void q(u,B,"16sint",4,T);case"rgba16float":return void q(u,B,"16float",4,T);case"r32uint":return void q(u,B,"32uint",1,T);case"r32sint":return void q(u,B,"32sint",1,T);case"depth16unorm":case"depth24plus":case"depth24plus-stencil8":case"depth32float":case"depth32float-stencil8":case"r32float":return void q(u,B,"32float",1,T);case"rg32uint":return void q(u,B,"32uint",2,T);case"rg32sint":return void q(u,B,"32sint",2,T);case"rg32float":return void q(u,B,"32float",2,T);case"rgba32uint":return void q(u,B,"32uint",4,T);case"rgba32sint":return void q(u,B,"32sint",4,T);case"rgba32float":return void q(u,B,"32float",4,T);case"rg11b10ufloat":console.error("TODO: rg11b10ufloat not supported for writing")}})(new Uint8Array(c),e,t,n,s,l,o,r,this.format,i)}}(a=>{a[a.token=0]="token",a[a.keyword=1]="keyword",a[a.reserved=2]="reserved"})(y||(y={}));class _{constructor(e,t,n){this.name=e,this.type=t,this.rule=n}toString(){return this.name}}class h{}w=h,h.none=new _("",y.reserved,""),h.eof=new _("EOF",y.token,""),h.reserved={asm:new _("asm",y.reserved,"asm"),bf16:new _("bf16",y.reserved,"bf16"),do:new _("do",y.reserved,"do"),enum:new _("enum",y.reserved,"enum"),f16:new _("f16",y.reserved,"f16"),f64:new _("f64",y.reserved,"f64"),handle:new _("handle",y.reserved,"handle"),i8:new _("i8",y.reserved,"i8"),i16:new _("i16",y.reserved,"i16"),i64:new _("i64",y.reserved,"i64"),mat:new _("mat",y.reserved,"mat"),premerge:new _("premerge",y.reserved,"premerge"),regardless:new _("regardless",y.reserved,"regardless"),typedef:new _("typedef",y.reserved,"typedef"),u8:new _("u8",y.reserved,"u8"),u16:new _("u16",y.reserved,"u16"),u64:new _("u64",y.reserved,"u64"),unless:new _("unless",y.reserved,"unless"),using:new _("using",y.reserved,"using"),vec:new _("vec",y.reserved,"vec"),void:new _("void",y.reserved,"void")},h.keywords={array:new _("array",y.keyword,"array"),atomic:new _("atomic",y.keyword,"atomic"),bool:new _("bool",y.keyword,"bool"),f32:new _("f32",y.keyword,"f32"),i32:new _("i32",y.keyword,"i32"),mat2x2:new _("mat2x2",y.keyword,"mat2x2"),mat2x3:new _("mat2x3",y.keyword,"mat2x3"),mat2x4:new _("mat2x4",y.keyword,"mat2x4"),mat3x2:new _("mat3x2",y.keyword,"mat3x2"),mat3x3:new _("mat3x3",y.keyword,"mat3x3"),mat3x4:new _("mat3x4",y.keyword,"mat3x4"),mat4x2:new _("mat4x2",y.keyword,"mat4x2"),mat4x3:new _("mat4x3",y.keyword,"mat4x3"),mat4x4:new _("mat4x4",y.keyword,"mat4x4"),ptr:new _("ptr",y.keyword,"ptr"),sampler:new _("sampler",y.keyword,"sampler"),sampler_comparison:new _("sampler_comparison",y.keyword,"sampler_comparison"),struct:new _("struct",y.keyword,"struct"),texture_1d:new _("texture_1d",y.keyword,"texture_1d"),texture_2d:new _("texture_2d",y.keyword,"texture_2d"),texture_2d_array:new _("texture_2d_array",y.keyword,"texture_2d_array"),texture_3d:new _("texture_3d",y.keyword,"texture_3d"),texture_cube:new _("texture_cube",y.keyword,"texture_cube"),texture_cube_array:new _("texture_cube_array",y.keyword,"texture_cube_array"),texture_multisampled_2d:new _("texture_multisampled_2d",y.keyword,"texture_multisampled_2d"),texture_storage_1d:new _("texture_storage_1d",y.keyword,"texture_storage_1d"),texture_storage_2d:new _("texture_storage_2d",y.keyword,"texture_storage_2d"),texture_storage_2d_array:new _("texture_storage_2d_array",y.keyword,"texture_storage_2d_array"),texture_storage_3d:new _("texture_storage_3d",y.keyword,"texture_storage_3d"),texture_depth_2d:new _("texture_depth_2d",y.keyword,"texture_depth_2d"),texture_depth_2d_array:new _("texture_depth_2d_array",y.keyword,"texture_depth_2d_array"),texture_depth_cube:new _("texture_depth_cube",y.keyword,"texture_depth_cube"),texture_depth_cube_array:new _("texture_depth_cube_array",y.keyword,"texture_depth_cube_array"),texture_depth_multisampled_2d:new _("texture_depth_multisampled_2d",y.keyword,"texture_depth_multisampled_2d"),texture_external:new _("texture_external",y.keyword,"texture_external"),u32:new _("u32",y.keyword,"u32"),vec2:new _("vec2",y.keyword,"vec2"),vec3:new _("vec3",y.keyword,"vec3"),vec4:new _("vec4",y.keyword,"vec4"),bitcast:new _("bitcast",y.keyword,"bitcast"),block:new _("block",y.keyword,"block"),break:new _("break",y.keyword,"break"),case:new _("case",y.keyword,"case"),continue:new _("continue",y.keyword,"continue"),continuing:new _("continuing",y.keyword,"continuing"),default:new _("default",y.keyword,"default"),diagnostic:new _("diagnostic",y.keyword,"diagnostic"),discard:new _("discard",y.keyword,"discard"),else:new _("else",y.keyword,"else"),enable:new _("enable",y.keyword,"enable"),fallthrough:new _("fallthrough",y.keyword,"fallthrough"),false:new _("false",y.keyword,"false"),fn:new _("fn",y.keyword,"fn"),for:new _("for",y.keyword,"for"),function:new _("function",y.keyword,"function"),if:new _("if",y.keyword,"if"),let:new _("let",y.keyword,"let"),const:new _("const",y.keyword,"const"),loop:new _("loop",y.keyword,"loop"),while:new _("while",y.keyword,"while"),private:new _("private",y.keyword,"private"),read:new _("read",y.keyword,"read"),read_write:new _("read_write",y.keyword,"read_write"),return:new _("return",y.keyword,"return"),requires:new _("requires",y.keyword,"requires"),storage:new _("storage",y.keyword,"storage"),switch:new _("switch",y.keyword,"switch"),true:new _("true",y.keyword,"true"),alias:new _("alias",y.keyword,"alias"),type:new _("type",y.keyword,"type"),uniform:new _("uniform",y.keyword,"uniform"),var:new _("var",y.keyword,"var"),override:new _("override",y.keyword,"override"),workgroup:new _("workgroup",y.keyword,"workgroup"),write:new _("write",y.keyword,"write"),r8unorm:new _("r8unorm",y.keyword,"r8unorm"),r8snorm:new _("r8snorm",y.keyword,"r8snorm"),r8uint:new _("r8uint",y.keyword,"r8uint"),r8sint:new _("r8sint",y.keyword,"r8sint"),r16uint:new _("r16uint",y.keyword,"r16uint"),r16sint:new _("r16sint",y.keyword,"r16sint"),r16float:new _("r16float",y.keyword,"r16float"),rg8unorm:new _("rg8unorm",y.keyword,"rg8unorm"),rg8snorm:new _("rg8snorm",y.keyword,"rg8snorm"),rg8uint:new _("rg8uint",y.keyword,"rg8uint"),rg8sint:new _("rg8sint",y.keyword,"rg8sint"),r32uint:new _("r32uint",y.keyword,"r32uint"),r32sint:new _("r32sint",y.keyword,"r32sint"),r32float:new _("r32float",y.keyword,"r32float"),rg16uint:new _("rg16uint",y.keyword,"rg16uint"),rg16sint:new _("rg16sint",y.keyword,"rg16sint"),rg16float:new _("rg16float",y.keyword,"rg16float"),rgba8unorm:new _("rgba8unorm",y.keyword,"rgba8unorm"),rgba8unorm_srgb:new _("rgba8unorm_srgb",y.keyword,"rgba8unorm_srgb"),rgba8snorm:new _("rgba8snorm",y.keyword,"rgba8snorm"),rgba8uint:new _("rgba8uint",y.keyword,"rgba8uint"),rgba8sint:new _("rgba8sint",y.keyword,"rgba8sint"),bgra8unorm:new _("bgra8unorm",y.keyword,"bgra8unorm"),bgra8unorm_srgb:new _("bgra8unorm_srgb",y.keyword,"bgra8unorm_srgb"),rgb10a2unorm:new _("rgb10a2unorm",y.keyword,"rgb10a2unorm"),rg11b10float:new _("rg11b10float",y.keyword,"rg11b10float"),rg32uint:new _("rg32uint",y.keyword,"rg32uint"),rg32sint:new _("rg32sint",y.keyword,"rg32sint"),rg32float:new _("rg32float",y.keyword,"rg32float"),rgba16uint:new _("rgba16uint",y.keyword,"rgba16uint"),rgba16sint:new _("rgba16sint",y.keyword,"rgba16sint"),rgba16float:new _("rgba16float",y.keyword,"rgba16float"),rgba32uint:new _("rgba32uint",y.keyword,"rgba32uint"),rgba32sint:new _("rgba32sint",y.keyword,"rgba32sint"),rgba32float:new _("rgba32float",y.keyword,"rgba32float"),static_assert:new _("static_assert",y.keyword,"static_assert")},h.tokens={decimal_float_literal:new _("decimal_float_literal",y.token,/((-?[0-9]*\.[0-9]+|-?[0-9]+\.[0-9]*)((e|E)(\+|-)?[0-9]+)?[fh]?)|(-?[0-9]+(e|E)(\+|-)?[0-9]+[fh]?)|(-?[0-9]+[fh])/),hex_float_literal:new _("hex_float_literal",y.token,/-?0x((([0-9a-fA-F]*\.[0-9a-fA-F]+|[0-9a-fA-F]+\.[0-9a-fA-F]*)((p|P)(\+|-)?[0-9]+[fh]?)?)|([0-9a-fA-F]+(p|P)(\+|-)?[0-9]+[fh]?))/),int_literal:new _("int_literal",y.token,/-?0x[0-9a-fA-F]+|0i?|-?[1-9][0-9]*i?/),uint_literal:new _("uint_literal",y.token,/0x[0-9a-fA-F]+u|0u|[1-9][0-9]*u/),name:new _("name",y.token,/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/u),ident:new _("ident",y.token,/[_a-zA-Z][0-9a-zA-Z_]*/),and:new _("and",y.token,"&"),and_and:new _("and_and",y.token,"&&"),arrow:new _("arrow ",y.token,"->"),attr:new _("attr",y.token,"@"),forward_slash:new _("forward_slash",y.token,"/"),bang:new _("bang",y.token,"!"),bracket_left:new _("bracket_left",y.token,"["),bracket_right:new _("bracket_right",y.token,"]"),brace_left:new _("brace_left",y.token,"{"),brace_right:new _("brace_right",y.token,"}"),colon:new _("colon",y.token,":"),comma:new _("comma",y.token,","),equal:new _("equal",y.token,"="),equal_equal:new _("equal_equal",y.token,"=="),not_equal:new _("not_equal",y.token,"!="),greater_than:new _("greater_than",y.token,">"),greater_than_equal:new _("greater_than_equal",y.token,">="),shift_right:new _("shift_right",y.token,">>"),less_than:new _("less_than",y.token,"<"),less_than_equal:new _("less_than_equal",y.token,"<="),shift_left:new _("shift_left",y.token,"<<"),modulo:new _("modulo",y.token,"%"),minus:new _("minus",y.token,"-"),minus_minus:new _("minus_minus",y.token,"--"),period:new _("period",y.token,"."),plus:new _("plus",y.token,"+"),plus_plus:new _("plus_plus",y.token,"++"),or:new _("or",y.token,"|"),or_or:new _("or_or",y.token,"||"),paren_left:new _("paren_left",y.token,"("),paren_right:new _("paren_right",y.token,")"),semicolon:new _("semicolon",y.token,";"),star:new _("star",y.token,"*"),tilde:new _("tilde",y.token,"~"),underscore:new _("underscore",y.token,"_"),xor:new _("xor",y.token,"^"),plus_equal:new _("plus_equal",y.token,"+="),minus_equal:new _("minus_equal",y.token,"-="),times_equal:new _("times_equal",y.token,"*="),division_equal:new _("division_equal",y.token,"/="),modulo_equal:new _("modulo_equal",y.token,"%="),and_equal:new _("and_equal",y.token,"&="),or_equal:new _("or_equal",y.token,"|="),xor_equal:new _("xor_equal",y.token,"^="),shift_right_equal:new _("shift_right_equal",y.token,">>="),shift_left_equal:new _("shift_left_equal",y.token,"<<=")},h.simpleTokens={"@":w.tokens.attr,"{":w.tokens.brace_left,"}":w.tokens.brace_right,":":w.tokens.colon,",":w.tokens.comma,"(":w.tokens.paren_left,")":w.tokens.paren_right,";":w.tokens.semicolon},h.literalTokens={"&":w.tokens.and,"&&":w.tokens.and_and,"->":w.tokens.arrow,"/":w.tokens.forward_slash,"!":w.tokens.bang,"[":w.tokens.bracket_left,"]":w.tokens.bracket_right,"=":w.tokens.equal,"==":w.tokens.equal_equal,"!=":w.tokens.not_equal,">":w.tokens.greater_than,">=":w.tokens.greater_than_equal,">>":w.tokens.shift_right,"<":w.tokens.less_than,"<=":w.tokens.less_than_equal,"<<":w.tokens.shift_left,"%":w.tokens.modulo,"-":w.tokens.minus,"--":w.tokens.minus_minus,".":w.tokens.period,"+":w.tokens.plus,"++":w.tokens.plus_plus,"|":w.tokens.or,"||":w.tokens.or_or,"*":w.tokens.star,"~":w.tokens.tilde,_:w.tokens.underscore,"^":w.tokens.xor,"+=":w.tokens.plus_equal,"-=":w.tokens.minus_equal,"*=":w.tokens.times_equal,"/=":w.tokens.division_equal,"%=":w.tokens.modulo_equal,"&=":w.tokens.and_equal,"|=":w.tokens.or_equal,"^=":w.tokens.xor_equal,">>=":w.tokens.shift_right_equal,"<<=":w.tokens.shift_left_equal},h.regexTokens={decimal_float_literal:w.tokens.decimal_float_literal,hex_float_literal:w.tokens.hex_float_literal,int_literal:w.tokens.int_literal,uint_literal:w.tokens.uint_literal,ident:w.tokens.ident},h.storage_class=[w.keywords.function,w.keywords.private,w.keywords.workgroup,w.keywords.uniform,w.keywords.storage],h.access_mode=[w.keywords.read,w.keywords.write,w.keywords.read_write],h.sampler_type=[w.keywords.sampler,w.keywords.sampler_comparison],h.sampled_texture_type=[w.keywords.texture_1d,w.keywords.texture_2d,w.keywords.texture_2d_array,w.keywords.texture_3d,w.keywords.texture_cube,w.keywords.texture_cube_array],h.multisampled_texture_type=[w.keywords.texture_multisampled_2d],h.storage_texture_type=[w.keywords.texture_storage_1d,w.keywords.texture_storage_2d,w.keywords.texture_storage_2d_array,w.keywords.texture_storage_3d],h.depth_texture_type=[w.keywords.texture_depth_2d,w.keywords.texture_depth_2d_array,w.keywords.texture_depth_cube,w.keywords.texture_depth_cube_array,w.keywords.texture_depth_multisampled_2d],h.texture_external_type=[w.keywords.texture_external],h.any_texture_type=[...w.sampled_texture_type,...w.multisampled_texture_type,...w.storage_texture_type,...w.depth_texture_type,...w.texture_external_type],h.texel_format=[w.keywords.r8unorm,w.keywords.r8snorm,w.keywords.r8uint,w.keywords.r8sint,w.keywords.r16uint,w.keywords.r16sint,w.keywords.r16float,w.keywords.rg8unorm,w.keywords.rg8snorm,w.keywords.rg8uint,w.keywords.rg8sint,w.keywords.r32uint,w.keywords.r32sint,w.keywords.r32float,w.keywords.rg16uint,w.keywords.rg16sint,w.keywords.rg16float,w.keywords.rgba8unorm,w.keywords.rgba8unorm_srgb,w.keywords.rgba8snorm,w.keywords.rgba8uint,w.keywords.rgba8sint,w.keywords.bgra8unorm,w.keywords.bgra8unorm_srgb,w.keywords.rgb10a2unorm,w.keywords.rg11b10float,w.keywords.rg32uint,w.keywords.rg32sint,w.keywords.rg32float,w.keywords.rgba16uint,w.keywords.rgba16sint,w.keywords.rgba16float,w.keywords.rgba32uint,w.keywords.rgba32sint,w.keywords.rgba32float],h.const_literal=[w.tokens.int_literal,w.tokens.uint_literal,w.tokens.decimal_float_literal,w.tokens.hex_float_literal,w.keywords.true,w.keywords.false],h.literal_or_ident=[w.tokens.ident,w.tokens.int_literal,w.tokens.uint_literal,w.tokens.decimal_float_literal,w.tokens.hex_float_literal,w.tokens.name],h.element_count_expression=[w.tokens.int_literal,w.tokens.uint_literal,w.tokens.ident],h.template_types=[w.keywords.vec2,w.keywords.vec3,w.keywords.vec4,w.keywords.mat2x2,w.keywords.mat2x3,w.keywords.mat2x4,w.keywords.mat3x2,w.keywords.mat3x3,w.keywords.mat3x4,w.keywords.mat4x2,w.keywords.mat4x3,w.keywords.mat4x4,w.keywords.atomic,w.keywords.bitcast,...w.any_texture_type],h.attribute_name=[w.tokens.ident,w.keywords.block,w.keywords.diagnostic],h.assignment_operators=[w.tokens.equal,w.tokens.plus_equal,w.tokens.minus_equal,w.tokens.times_equal,w.tokens.division_equal,w.tokens.modulo_equal,w.tokens.and_equal,w.tokens.or_equal,w.tokens.xor_equal,w.tokens.shift_right_equal,w.tokens.shift_left_equal],h.increment_operators=[w.tokens.plus_plus,w.tokens.minus_minus];class as{constructor(e,t,n,s,i){this.type=e,this.lexeme=t,this.line=n,this.start=s,this.end=i}toString(){return this.lexeme}isTemplateType(){return h.template_types.indexOf(this.type)!=-1}isArrayType(){return this.type==h.keywords.array}isArrayOrTemplateType(){return this.isArrayType()||this.isTemplateType()}}class ao{constructor(e){this._tokens=[],this._start=0,this._current=0,this._line=1,this._source=e??""}scanTokens(){for(;!this._isAtEnd();)if(this._start=this._current,!this.scanToken())throw`Invalid syntax at line ${this._line}`;return this._tokens.push(new as(h.eof,"",this._line,this._current,this._current)),this._tokens}scanToken(){let e=this._advance();if(e==`
`)return this._line++,!0;if(this._isWhitespace(e))return!0;if(e=="/"){if(this._peekAhead()=="/"){for(;e!=`
`;){if(this._isAtEnd())return!0;e=this._advance()}return this._line++,!0}if(this._peekAhead()=="*"){this._advance();let r=1;for(;r>0;){if(this._isAtEnd())return!0;if(e=this._advance(),e==`
`)this._line++;else if(e=="*"){if(this._peekAhead()=="/"&&(this._advance(),r--,r==0))return!0}else e=="/"&&this._peekAhead()=="*"&&(this._advance(),r++)}return!0}}const t=h.simpleTokens[e];if(t)return this._addToken(t),!0;let n=h.none;const s=this._isAlpha(e),i=e==="_";if(this._isAlphaNumeric(e)){let r=this._peekAhead();for(;this._isAlphaNumeric(r);)e+=this._advance(),r=this._peekAhead()}if(s){const r=h.keywords[e];if(r)return this._addToken(r),!0}if(s||i)return this._addToken(h.tokens.ident),!0;for(;;){let r=this._findType(e);const o=this._peekAhead();if(e=="-"&&this._tokens.length>0){if(o=="=")return this._current++,e+=o,this._addToken(h.tokens.minus_equal),!0;if(o=="-")return this._current++,e+=o,this._addToken(h.tokens.minus_minus),!0;const l=this._tokens.length-1;if((h.literal_or_ident.indexOf(this._tokens[l].type)!=-1||this._tokens[l].type==h.tokens.paren_right)&&o!=">")return this._addToken(r),!0}if(e==">"&&(o==">"||o=="=")){let l=!1,c=this._tokens.length-1;for(let u=0;u<5&&c>=0&&h.assignment_operators.indexOf(this._tokens[c].type)===-1;++u,--c)if(this._tokens[c].type===h.tokens.less_than){c>0&&this._tokens[c-1].isArrayOrTemplateType()&&(l=!0);break}if(l)return this._addToken(r),!0}if(r===h.none){let l=e,c=0;const u=2;for(let f=0;f<u;++f)if(l+=this._peekAhead(f),r=this._findType(l),r!==h.none){c=f;break}if(r===h.none)return n!==h.none&&(this._current--,this._addToken(n),!0);e=l,this._current+=c+1}if(n=r,this._isAtEnd())break;e+=this._advance()}return n!==h.none&&(this._addToken(n),!0)}_findType(e){for(const n in h.regexTokens){const s=h.regexTokens[n];if(this._match(e,s.rule))return s}return h.literalTokens[e]||h.none}_match(e,t){const n=t.exec(e);return n&&n.index==0&&n[0]==e}_isAtEnd(){return this._current>=this._source.length}_isAlpha(e){return!this._isNumeric(e)&&!this._isWhitespace(e)&&e!=="_"&&e!=="."&&e!=="("&&e!==")"&&e!=="["&&e!=="]"&&e!=="{"&&e!=="}"&&e!==","&&e!==";"&&e!==":"&&e!=="="&&e!=="!"&&e!=="<"&&e!==">"&&e!=="+"&&e!=="-"&&e!=="*"&&e!=="/"&&e!=="%"&&e!=="&"&&e!=="|"&&e!=="^"&&e!=="~"&&e!=="@"&&e!=="#"&&e!=="?"&&e!=="'"&&e!=="`"&&e!=='"'&&e!=="\\"&&e!==`
`&&e!=="\r"&&e!=="	"&&e!=="\0"}_isNumeric(e){return e>="0"&&e<="9"}_isAlphaNumeric(e){return this._isAlpha(e)||this._isNumeric(e)||e==="_"}_isWhitespace(e){return e==" "||e=="	"||e=="\r"}_advance(e=0){let t=this._source[this._current];return e=e||0,e++,this._current+=e,t}_peekAhead(e=0){return e=e||0,this._current+e>=this._source.length?"\0":this._source[this._current+e]}_addToken(e){const t=this._source.substring(this._start,this._current);this._tokens.push(new as(e,t,this._line,this._start,this._current))}}function F(a){return Array.isArray(a)||a?.buffer instanceof ArrayBuffer}const Ut=new Float32Array(1),lo=new Uint32Array(Ut.buffer),co=new Uint32Array(Ut.buffer),$t=new Int32Array(1),uo=new Float32Array($t.buffer),fo=new Uint32Array($t.buffer),zt=new Uint32Array(1),ho=new Float32Array(zt.buffer),po=new Int32Array(zt.buffer);function ls(a,e,t){if(e===t)return a;if(e==="f32"){if(t==="i32"||t==="x32")return Ut[0]=a,lo[0];if(t==="u32")return Ut[0]=a,co[0]}else if(e==="i32"||e==="x32"){if(t==="f32")return $t[0]=a,uo[0];if(t==="u32")return $t[0]=a,fo[0]}else if(e==="u32"){if(t==="f32")return zt[0]=a,ho[0];if(t==="i32"||t==="x32")return zt[0]=a,po[0]}return console.error(`Unsupported cast from ${e} to ${t}`),a}class go{constructor(e){this.resources=null,this.inUse=!1,this.info=null,this.node=e}}class xt{constructor(e,t){this.align=e,this.size=t}}class Ae{constructor(){this.uniforms=[],this.storage=[],this.textures=[],this.samplers=[],this.aliases=[],this.overrides=[],this.structs=[],this.entry=new Xr,this.functions=[],this._types=new Map,this._functions=new Map}_isStorageTexture(e){return e.name=="texture_storage_1d"||e.name=="texture_storage_2d"||e.name=="texture_storage_2d_array"||e.name=="texture_storage_3d"}updateAST(e){for(const t of e)t instanceof ut&&this._functions.set(t.name,new go(t));for(const t of e)if(t instanceof Se){const n=this.getTypeInfo(t,null);n instanceof Fe&&this.structs.push(n)}for(const t of e)if(t instanceof Bn)this.aliases.push(this._getAliasInfo(t));else if(t instanceof On){const n=t,s=this._getAttributeNum(n.attributes,"id",0),i=n.type!=null?this.getTypeInfo(n.type,n.attributes):null;this.overrides.push(new Yr(n.name,i,n.attributes,s))}else if(this._isUniformVar(t)){const n=t,s=this._getAttributeNum(n.attributes,"group",0),i=this._getAttributeNum(n.attributes,"binding",0),r=this.getTypeInfo(n.type,n.attributes),o=new _t(n.name,r,s,i,n.attributes,Me.Uniform,n.access);o.access||(o.access="read"),this.uniforms.push(o)}else if(this._isStorageVar(t)){const n=t,s=this._getAttributeNum(n.attributes,"group",0),i=this._getAttributeNum(n.attributes,"binding",0),r=this.getTypeInfo(n.type,n.attributes),o=this._isStorageTexture(r),l=new _t(n.name,r,s,i,n.attributes,o?Me.StorageTexture:Me.Storage,n.access);l.access||(l.access="read"),this.storage.push(l)}else if(this._isTextureVar(t)){const n=t,s=this._getAttributeNum(n.attributes,"group",0),i=this._getAttributeNum(n.attributes,"binding",0),r=this.getTypeInfo(n.type,n.attributes),o=this._isStorageTexture(r),l=new _t(n.name,r,s,i,n.attributes,o?Me.StorageTexture:Me.Texture,n.access);l.access||(l.access="read"),o?this.storage.push(l):this.textures.push(l)}else if(this._isSamplerVar(t)){const n=t,s=this._getAttributeNum(n.attributes,"group",0),i=this._getAttributeNum(n.attributes,"binding",0),r=this.getTypeInfo(n.type,n.attributes),o=new _t(n.name,r,s,i,n.attributes,Me.Sampler,n.access);this.samplers.push(o)}else if(t instanceof ut){const n=this._getAttribute(t,"vertex"),s=this._getAttribute(t,"fragment"),i=this._getAttribute(t,"compute"),r=n||s||i,o=new Zr(t.name,r?.name,t.attributes);o.attributes=t.attributes,o.startLine=t.startLine,o.endLine=t.endLine,this.functions.push(o),this._functions.get(t.name).info=o,r&&(this._functions.get(t.name).inUse=!0,o.inUse=!0,o.resources=this._findResources(t,!!r),o.inputs=this._getInputs(t.args),o.outputs=this._getOutputs(t.returnType),this.entry[r.name].push(o)),o.arguments=t.args.map(l=>new Kr(l.name,this.getTypeInfo(l.type,l.attributes),l.attributes)),o.returnType=t.returnType?this.getTypeInfo(t.returnType,t.attributes):null}for(const t of this._functions.values())t.info&&(t.info.inUse=t.inUse,this._addCalls(t.node,t.info.calls));for(const t of this._functions.values())t.node.search(n=>{var s,i,r;if(n instanceof ki){if(n.value)if(F(n.value))for(const o of n.value)for(const l of this.overrides)o===l.name&&((s=t.info)===null||s===void 0||s.overrides.push(l));else for(const o of this.overrides)n.value===o.name&&((i=t.info)===null||i===void 0||i.overrides.push(o))}else if(n instanceof me)for(const o of this.overrides)n.name===o.name&&((r=t.info)===null||r===void 0||r.overrides.push(o))});for(const t of this.uniforms)this._markStructsInUse(t.type);for(const t of this.storage)this._markStructsInUse(t.type)}getStructInfo(e){for(const t of this.structs)if(t.name==e)return t;return null}getOverrideInfo(e){for(const t of this.overrides)if(t.name==e)return t;return null}_markStructsInUse(e){if(e)if(e.isStruct){if(e.inUse=!0,e.members)for(const t of e.members)this._markStructsInUse(t.type)}else if(e.isArray)this._markStructsInUse(e.format);else if(e.isTemplate)e.format&&this._markStructsInUse(e.format);else{const t=this._getAlias(e.name);t&&this._markStructsInUse(t)}}_addCalls(e,t){var n;for(const s of e.calls){const i=(n=this._functions.get(s.name))===null||n===void 0?void 0:n.info;i&&t.add(i)}}findResource(e,t,n){if(n){for(const s of this.entry.compute)if(s.name===n){for(const i of s.resources)if(i.group==e&&i.binding==t)return i}for(const s of this.entry.vertex)if(s.name===n){for(const i of s.resources)if(i.group==e&&i.binding==t)return i}for(const s of this.entry.fragment)if(s.name===n){for(const i of s.resources)if(i.group==e&&i.binding==t)return i}}for(const s of this.uniforms)if(s.group==e&&s.binding==t)return s;for(const s of this.storage)if(s.group==e&&s.binding==t)return s;for(const s of this.textures)if(s.group==e&&s.binding==t)return s;for(const s of this.samplers)if(s.group==e&&s.binding==t)return s;return null}_findResource(e){for(const t of this.uniforms)if(t.name==e)return t;for(const t of this.storage)if(t.name==e)return t;for(const t of this.textures)if(t.name==e)return t;for(const t of this.samplers)if(t.name==e)return t;return null}_markStructsFromAST(e){const t=this.getTypeInfo(e,null);this._markStructsInUse(t)}_findResources(e,t){const n=[],s=this,i=[];return e.search(r=>{if(r instanceof Rt)i.push({});else if(r instanceof Dt)i.pop();else if(r instanceof Oe){const o=r;t&&o.type!==null&&this._markStructsFromAST(o.type),i.length>0&&(i[i.length-1][o.name]=o)}else if(r instanceof Pe){const o=r;t&&o.type!==null&&this._markStructsFromAST(o.type)}else if(r instanceof at){const o=r;t&&o.type!==null&&this._markStructsFromAST(o.type),i.length>0&&(i[i.length-1][o.name]=o)}else if(r instanceof me){const o=r;if(i.length>0&&i[i.length-1][o.name])return;const l=s._findResource(o.name);l&&n.push(l)}else if(r instanceof Fn){const o=r,l=s._functions.get(o.name);l&&(t&&(l.inUse=!0),e.calls.add(l.node),l.resources===null&&(l.resources=s._findResources(l.node,t)),n.push(...l.resources))}else if(r instanceof Mn){const o=r,l=s._functions.get(o.name);l&&(t&&(l.inUse=!0),e.calls.add(l.node),l.resources===null&&(l.resources=s._findResources(l.node,t)),n.push(...l.resources))}}),[...new Map(n.map(r=>[r.name,r])).values()]}getBindGroups(){const e=[];function t(n,s){n>=e.length&&(e.length=n+1),e[n]===void 0&&(e[n]=[]),s>=e[n].length&&(e[n].length=s+1)}for(const n of this.uniforms)t(n.group,n.binding),e[n.group][n.binding]=n;for(const n of this.storage)t(n.group,n.binding),e[n.group][n.binding]=n;for(const n of this.textures)t(n.group,n.binding),e[n.group][n.binding]=n;for(const n of this.samplers)t(n.group,n.binding),e[n.group][n.binding]=n;return e}_getOutputs(e,t=void 0){if(t===void 0&&(t=[]),e instanceof Se)this._getStructOutputs(e,t);else{const n=this._getOutputInfo(e);n!==null&&t.push(n)}return t}_getStructOutputs(e,t){for(const n of e.members)if(n.type instanceof Se)this._getStructOutputs(n.type,t);else{const s=this._getAttribute(n,"location")||this._getAttribute(n,"builtin");if(s!==null){const i=this.getTypeInfo(n.type,n.type.attributes),r=this._parseInt(s.value),o=new ns(n.name,i,s.name,r);t.push(o)}}}_getOutputInfo(e){const t=this._getAttribute(e,"location")||this._getAttribute(e,"builtin");if(t!==null){const n=this.getTypeInfo(e,e.attributes),s=this._parseInt(t.value);return new ns("",n,t.name,s)}return null}_getInputs(e,t=void 0){t===void 0&&(t=[]);for(const n of e)if(n.type instanceof Se)this._getStructInputs(n.type,t);else{const s=this._getInputInfo(n);s!==null&&t.push(s)}return t}_getStructInputs(e,t){for(const n of e.members)if(n.type instanceof Se)this._getStructInputs(n.type,t);else{const s=this._getInputInfo(n);s!==null&&t.push(s)}}_getInputInfo(e){const t=this._getAttribute(e,"location")||this._getAttribute(e,"builtin");if(t!==null){const n=this._getAttribute(e,"interpolation"),s=this.getTypeInfo(e.type,e.attributes),i=this._parseInt(t.value),r=new qr(e.name,s,t.name,i);return n!==null&&(r.interpolation=this._parseString(n.value)),r}return null}_parseString(e){return e instanceof Array&&(e=e[0]),e}_parseInt(e){e instanceof Array&&(e=e[0]);const t=parseInt(e);return isNaN(t)?e:t}_getAlias(e){for(const t of this.aliases)if(t.name==e)return t.type;return null}_getAliasInfo(e){return new Hr(e.name,this.getTypeInfo(e.type,null))}getTypeInfoByName(e){for(const t of this.structs)if(t.name==e)return t;for(const t of this.aliases)if(t.name==e)return t.type;return null}getTypeInfo(e,t=null){if(this._types.has(e))return this._types.get(e);if(e instanceof lt){const s=e,i=s.format?this.getTypeInfo(s.format,s.attributes):null,r=new De(s.name,t);return r.format=i,r.count=s.count,this._types.set(e,r),this._updateTypeInfo(r),r}if(e instanceof Se){const s=e,i=new Fe(s.name,t);i.startLine=s.startLine,i.endLine=s.endLine;for(const r of s.members){const o=this.getTypeInfo(r.type,r.attributes);i.members.push(new ts(r.name,o,r.attributes))}return this._types.set(e,i),this._updateTypeInfo(i),i}if(e instanceof rt){const s=e,i=s.format instanceof P,r=s.format?i?this.getTypeInfo(s.format,null):new ye(s.format,null):null,o=new We(s.name,r,t,s.access);return this._types.set(e,o),this._updateTypeInfo(o),o}if(e instanceof b){const s=e,i=s.format?this.getTypeInfo(s.format,null):null,r=new We(s.name,i,t,s.access);return this._types.set(e,r),this._updateTypeInfo(r),r}const n=new ye(e.name,t);return this._types.set(e,n),this._updateTypeInfo(n),n}_updateTypeInfo(e){var t,n,s;const i=this._getTypeSize(e);if(e.size=(t=i?.size)!==null&&t!==void 0?t:0,e instanceof De&&e.format){const r=this._getTypeSize(e.format);e.stride=Math.max((n=r?.size)!==null&&n!==void 0?n:0,(s=r?.align)!==null&&s!==void 0?s:0),this._updateTypeInfo(e.format)}e instanceof Fe&&this._updateStructInfo(e)}_updateStructInfo(e){var t;let n=0,s=0,i=0,r=0;for(let o=0,l=e.members.length;o<l;++o){const c=e.members[o],u=this._getTypeSize(c);if(!u)continue;(t=this._getAlias(c.type.name))!==null&&t!==void 0||c.type;const f=u.align,p=u.size;n=this._roundUp(f,n+s),s=p,i=n,r=Math.max(r,f),c.offset=n,c.size=p,this._updateTypeInfo(c.type)}e.size=this._roundUp(r,i+s),e.align=r}_getTypeSize(e){var t,n;if(e==null)return null;const s=this._getAttributeNum(e.attributes,"size",0),i=this._getAttributeNum(e.attributes,"align",0);if(e instanceof ts&&(e=e.type),e instanceof ye){const r=this._getAlias(e.name);r!==null&&(e=r)}{const r=Ae._typeInfo[e.name];if(r!==void 0){const o=((t=e.format)===null||t===void 0?void 0:t.name)==="f16"?2:1;return new xt(Math.max(i,r.align/o),Math.max(s,r.size/o))}}{const r=Ae._typeInfo[e.name.substring(0,e.name.length-1)];if(r){const o=e.name[e.name.length-1]==="h"?2:1;return new xt(Math.max(i,r.align/o),Math.max(s,r.size/o))}}if(e instanceof De){let r=e,o=8,l=8;const c=this._getTypeSize(r.format);return c!==null&&(l=c.size,o=c.align),l=r.count*this._getAttributeNum((n=e?.attributes)!==null&&n!==void 0?n:null,"stride",this._roundUp(o,l)),s&&(l=s),new xt(Math.max(i,o),Math.max(s,l))}if(e instanceof Fe){let r=0,o=0,l=0,c=0,u=0;for(const f of e.members){const p=this._getTypeSize(f.type);p!==null&&(r=Math.max(p.align,r),l=this._roundUp(p.align,l+c),c=p.size,u=l)}return o=this._roundUp(r,u+c),new xt(Math.max(i,r),Math.max(s,o))}return null}_isUniformVar(e){return e instanceof Oe&&e.storage=="uniform"}_isStorageVar(e){return e instanceof Oe&&e.storage=="storage"}_isTextureVar(e){return e instanceof Oe&&e.type!==null&&Ae._textureTypes.indexOf(e.type.name)!=-1}_isSamplerVar(e){return e instanceof Oe&&e.type!==null&&Ae._samplerTypes.indexOf(e.type.name)!=-1}_getAttribute(e,t){const n=e;if(!n||!n.attributes)return null;const s=n.attributes;for(let i of s)if(i.name==t)return i;return null}_getAttributeNum(e,t,n){if(e===null)return n;for(let s of e)if(s.name==t){let i=s!==null&&s.value!==null?s.value:n;return i instanceof Array&&(i=i[0]),typeof i=="number"?i:typeof i=="string"?parseInt(i):n}return n}_roundUp(e,t){return Math.ceil(t/e)*e}}Ae._typeInfo={f16:{align:2,size:2},i32:{align:4,size:4},u32:{align:4,size:4},f32:{align:4,size:4},atomic:{align:4,size:4},vec2:{align:8,size:8},vec3:{align:16,size:12},vec4:{align:16,size:16},mat2x2:{align:8,size:16},mat3x2:{align:8,size:24},mat4x2:{align:8,size:32},mat2x3:{align:16,size:32},mat3x3:{align:16,size:48},mat4x3:{align:16,size:64},mat2x4:{align:16,size:32},mat3x4:{align:16,size:48},mat4x4:{align:16,size:64}},Ae._textureTypes=h.any_texture_type.map(a=>a.name),Ae._samplerTypes=h.sampler_type.map(a=>a.name);class Nn{constructor(e,t,n){this.name=e,this.value=t,this.node=n}clone(){return new Nn(this.name,this.value,this.node)}}class Rn{constructor(e){this.name=e.name,this.node=e}clone(){return new Rn(this.node)}}class Dn{constructor(e){this.parent=null,this.variables=new Map,this.functions=new Map,this.currentFunctionName="",e&&(this.parent=e,this.currentFunctionName=e.currentFunctionName)}getVariable(e){var t;return this.variables.has(e)?(t=this.variables.get(e))!==null&&t!==void 0?t:null:this.parent?this.parent.getVariable(e):null}getFunction(e){var t;return this.functions.has(e)?(t=this.functions.get(e))!==null&&t!==void 0?t:null:this.parent?this.parent.getFunction(e):null}createVariable(e,t,n){this.variables.set(e,new Nn(e,t,n??null))}setVariable(e,t,n){const s=this.getVariable(e);s!==null?s.value=t:this.createVariable(e,t,n)}getVariableValue(e){var t;const n=this.getVariable(e);return(t=n?.value)!==null&&t!==void 0?t:null}clone(){return new Dn(this)}}class mo{evalExpression(e,t){return null}getTypeInfo(e){return null}getVariableName(e,t){return""}}class yo{constructor(e){this.exec=e}getTypeInfo(e){return this.exec.getTypeInfo(e)}All(e,t){const n=this.exec.evalExpression(e.args[0],t);let s=!0;if(n instanceof d)return n.data.forEach(i=>{i||(s=!1)}),new m(s?1:0,this.getTypeInfo("bool"));throw new Error(`All() expects a vector argument. Line ${e.line}`)}Any(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof d){const s=n.data.some(i=>i);return new m(s?1:0,this.getTypeInfo("bool"))}throw new Error(`Any() expects a vector argument. Line ${e.line}`)}Select(e,t){const n=this.exec.evalExpression(e.args[2],t);if(!(n instanceof m))throw new Error(`Select() expects a bool condition. Line ${e.line}`);return n.value?this.exec.evalExpression(e.args[1],t):this.exec.evalExpression(e.args[0],t)}ArrayLength(e,t){let n=e.args[0];n instanceof re&&(n=n.right);const s=this.exec.evalExpression(n,t);if(s instanceof te&&s.typeInfo.size===0){const i=s.typeInfo,r=s.buffer.byteLength/i.stride;return new m(r,this.getTypeInfo("u32"))}return new m(s.typeInfo.size,this.getTypeInfo("u32"))}Abs(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof d)return new d(n.data.map(i=>Math.abs(i)),n.typeInfo);const s=n;return new m(Math.abs(s.value),s.typeInfo)}Acos(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof d)return new d(n.data.map(i=>Math.acos(i)),n.typeInfo);const s=n;return new m(Math.acos(s.value),n.typeInfo)}Acosh(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof d)return new d(n.data.map(i=>Math.acosh(i)),n.typeInfo);const s=n;return new m(Math.acosh(s.value),n.typeInfo)}Asin(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof d)return new d(n.data.map(i=>Math.asin(i)),n.typeInfo);const s=n;return new m(Math.asin(s.value),n.typeInfo)}Asinh(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof d)return new d(n.data.map(i=>Math.asinh(i)),n.typeInfo);const s=n;return new m(Math.asinh(s.value),n.typeInfo)}Atan(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof d)return new d(n.data.map(i=>Math.atan(i)),n.typeInfo);const s=n;return new m(Math.atan(s.value),n.typeInfo)}Atanh(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof d)return new d(n.data.map(i=>Math.atanh(i)),n.typeInfo);const s=n;return new m(Math.atanh(s.value),n.typeInfo)}Atan2(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t);if(n instanceof d&&s instanceof d)return new d(n.data.map((o,l)=>Math.atan2(o,s.data[l])),n.typeInfo);const i=n,r=s;return new m(Math.atan2(i.value,r.value),n.typeInfo)}Ceil(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof d)return new d(n.data.map(i=>Math.ceil(i)),n.typeInfo);const s=n;return new m(Math.ceil(s.value),n.typeInfo)}_clamp(e,t,n){return Math.min(Math.max(e,t),n)}Clamp(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t),i=this.exec.evalExpression(e.args[2],t);if(n instanceof d&&s instanceof d&&i instanceof d)return new d(n.data.map((c,u)=>this._clamp(c,s.data[u],i.data[u])),n.typeInfo);const r=n,o=s,l=i;return new m(this._clamp(r.value,o.value,l.value),n.typeInfo)}Cos(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof d)return new d(n.data.map(i=>Math.cos(i)),n.typeInfo);const s=n;return new m(Math.cos(s.value),n.typeInfo)}Cosh(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof d)return new d(n.data.map(i=>Math.cosh(i)),n.typeInfo);const s=n;return new m(Math.cos(s.value),n.typeInfo)}CountLeadingZeros(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof d)return new d(n.data.map(i=>Math.clz32(i)),n.typeInfo);const s=n;return new m(Math.clz32(s.value),n.typeInfo)}_countOneBits(e){let t=0;for(;e!==0;)1&e&&t++,e>>=1;return t}CountOneBits(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof d)return new d(n.data.map(i=>this._countOneBits(i)),n.typeInfo);const s=n;return new m(this._countOneBits(s.value),n.typeInfo)}_countTrailingZeros(e){if(e===0)return 32;let t=0;for(;!(1&e);)e>>=1,t++;return t}CountTrailingZeros(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof d)return new d(n.data.map(i=>this._countTrailingZeros(i)),n.typeInfo);const s=n;return new m(this._countTrailingZeros(s.value),n.typeInfo)}Cross(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t);if(n instanceof d&&s instanceof d){if(n.data.length!==3||s.data.length!==3)return console.error(`Cross() expects 3D vectors. Line ${e.line}`),null;const i=n.data,r=s.data;return new d([i[1]*r[2]-r[1]*i[2],i[2]*r[0]-r[2]*i[0],i[0]*r[1]-r[0]*i[1]],n.typeInfo)}return console.error(`Cross() expects vector arguments. Line ${e.line}`),null}Degrees(e,t){const n=this.exec.evalExpression(e.args[0],t),s=180/Math.PI;return n instanceof d?new d(n.data.map(i=>i*s),n.typeInfo):new m(n.value*s,this.getTypeInfo("f32"))}Determinant(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof D){const s=n.data,i=n.typeInfo.getTypeName(),r=i.endsWith("h")?this.getTypeInfo("f16"):this.getTypeInfo("f32");if(i==="mat2x2"||i==="mat2x2f"||i==="mat2x2h")return new m(s[0]*s[3]-s[1]*s[2],r);if(i==="mat2x3"||i==="mat2x3f"||i==="mat2x3h")return new m(s[0]*(s[4]*s[8]-s[5]*s[7])-s[1]*(s[3]*s[8]-s[5]*s[6])+s[2]*(s[3]*s[7]-s[4]*s[6]),r);if(i==="mat2x4"||i==="mat2x4f"||i==="mat2x4h")console.error(`TODO: Determinant for ${i}`);else if(i==="mat3x2"||i==="mat3x2f"||i==="mat3x2h")console.error(`TODO: Determinant for ${i}`);else{if(i==="mat3x3"||i==="mat3x3f"||i==="mat3x3h")return new m(s[0]*(s[4]*s[8]-s[5]*s[7])-s[1]*(s[3]*s[8]-s[5]*s[6])+s[2]*(s[3]*s[7]-s[4]*s[6]),r);i==="mat3x4"||i==="mat3x4f"||i==="mat3x4h"||i==="mat4x2"||i==="mat4x2f"||i==="mat4x2h"||i==="mat4x3"||i==="mat4x3f"||i==="mat4x3h"?console.error(`TODO: Determinant for ${i}`):i!=="mat4x4"&&i!=="mat4x4f"&&i!=="mat4x4h"||console.error(`TODO: Determinant for ${i}`)}}return console.error(`Determinant expects a matrix argument. Line ${e.line}`),null}Distance(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t);if(n instanceof d&&s instanceof d){let o=0;for(let l=0;l<n.data.length;++l)o+=(n.data[l]-s.data[l])*(n.data[l]-s.data[l]);return new m(Math.sqrt(o),this.getTypeInfo("f32"))}const i=n,r=s;return new m(Math.abs(i.value-r.value),n.typeInfo)}_dot(e,t){let n=0;for(let s=0;s<e.length;++s)n+=t[s]*e[s];return n}Dot(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t);return n instanceof d&&s instanceof d?new m(this._dot(n.data,s.data),this.getTypeInfo("f32")):(console.error(`Dot() expects vector arguments. Line ${e.line}`),null)}Dot4U8Packed(e,t){return console.error(`TODO: dot4U8Packed. Line ${e.line}`),null}Dot4I8Packed(e,t){return console.error(`TODO: dot4I8Packed. Line ${e.line}`),null}Exp(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof d)return new d(n.data.map(i=>Math.exp(i)),n.typeInfo);const s=n;return new m(Math.exp(s.value),n.typeInfo)}Exp2(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof d)return new d(n.data.map(i=>Math.pow(2,i)),n.typeInfo);const s=n;return new m(Math.pow(2,s.value),n.typeInfo)}ExtractBits(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t),i=this.exec.evalExpression(e.args[2],t);if(s.typeInfo.name!=="u32"&&s.typeInfo.name!=="x32")return console.error(`ExtractBits() expects an i32 offset argument. Line ${e.line}`),null;if(i.typeInfo.name!=="u32"&&i.typeInfo.name!=="x32")return console.error(`ExtractBits() expects an i32 count argument. Line ${e.line}`),null;const r=s.value,o=i.value;if(n instanceof d)return new d(n.data.map(c=>c>>r&(1<<o)-1),n.typeInfo);if(n.typeInfo.name!=="i32"&&n.typeInfo.name!=="x32")return console.error(`ExtractBits() expects an i32 argument. Line ${e.line}`),null;const l=n.value;return new m(l>>r&(1<<o)-1,this.getTypeInfo("i32"))}FaceForward(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t),i=this.exec.evalExpression(e.args[2],t);if(n instanceof d&&s instanceof d&&i instanceof d){const r=this._dot(s.data,i.data);return new d(r<0?Array.from(n.data):n.data.map(o=>-o),n.typeInfo)}return console.error(`FaceForward() expects vector arguments. Line ${e.line}`),null}_firstLeadingBit(e){return e===0?-1:31-Math.clz32(e)}FirstLeadingBit(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof d)return new d(n.data.map(i=>this._firstLeadingBit(i)),n.typeInfo);const s=n;return new m(this._firstLeadingBit(s.value),n.typeInfo)}_firstTrailingBit(e){return e===0?-1:Math.log2(e&-e)}FirstTrailingBit(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof d)return new d(n.data.map(i=>this._firstTrailingBit(i)),n.typeInfo);const s=n;return new m(this._firstTrailingBit(s.value),n.typeInfo)}Floor(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof d)return new d(n.data.map(i=>Math.floor(i)),n.typeInfo);const s=n;return new m(Math.floor(s.value),n.typeInfo)}Fma(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t),i=this.exec.evalExpression(e.args[2],t);if(n instanceof d&&s instanceof d&&i instanceof d)return n.data.length!==s.data.length||n.data.length!==i.data.length?(console.error(`Fma() expects vectors of the same length. Line ${e.line}`),null):new d(n.data.map((c,u)=>c*s.data[u]+i.data[u]),n.typeInfo);const r=n,o=s,l=i;return new m(r.value*o.value+l.value,r.typeInfo)}Fract(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof d)return new d(n.data.map(i=>i-Math.floor(i)),n.typeInfo);const s=n;return new m(s.value-Math.floor(s.value),n.typeInfo)}Frexp(e,t){return console.error(`TODO: frexp. Line ${e.line}`),null}InsertBits(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t),i=this.exec.evalExpression(e.args[2],t),r=this.exec.evalExpression(e.args[3],t);if(i.typeInfo.name!=="u32"&&i.typeInfo.name!=="x32")return console.error(`InsertBits() expects an i32 offset argument. Line ${e.line}`),null;const o=i.value,l=(1<<r.value)-1<<o,c=~l;if(n instanceof d&&s instanceof d)return new d(n.data.map((p,x)=>p&c|s.data[x]<<o&l),n.typeInfo);const u=n.value,f=s.value;return new m(u&c|f<<o&l,n.typeInfo)}InverseSqrt(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof d)return new d(n.data.map(i=>1/Math.sqrt(i)),n.typeInfo);const s=n;return new m(1/Math.sqrt(s.value),n.typeInfo)}Ldexp(e,t){return console.error(`TODO: ldexp. Line ${e.line}`),null}Length(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof d){let i=0;return n.data.forEach(r=>{i+=r*r}),new m(Math.sqrt(i),this.getTypeInfo("f32"))}const s=n;return new m(Math.abs(s.value),n.typeInfo)}Log(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof d)return new d(n.data.map(i=>Math.log(i)),n.typeInfo);const s=n;return new m(Math.log(s.value),n.typeInfo)}Log2(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof d)return new d(n.data.map(i=>Math.log2(i)),n.typeInfo);const s=n;return new m(Math.log2(s.value),n.typeInfo)}Max(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t);if(n instanceof d&&s instanceof d)return new d(n.data.map((o,l)=>Math.max(o,s.data[l])),n.typeInfo);const i=n,r=s;return new m(Math.max(i.value,r.value),n.typeInfo)}Min(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t);if(n instanceof d&&s instanceof d)return new d(n.data.map((o,l)=>Math.min(o,s.data[l])),n.typeInfo);const i=n,r=s;return new m(Math.min(i.value,r.value),n.typeInfo)}Mix(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t),i=this.exec.evalExpression(e.args[2],t);if(n instanceof d&&s instanceof d&&i instanceof d)return new d(n.data.map((l,c)=>n.data[c]*(1-i.data[c])+s.data[c]*i.data[c]),n.typeInfo);const r=s,o=i;return new m(n.value*(1-o.value)+r.value*o.value,n.typeInfo)}Modf(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t);if(n instanceof d&&s instanceof d)return new d(n.data.map((r,o)=>r%s.data[o]),n.typeInfo);const i=s;return new m(n.value%i.value,n.typeInfo)}Normalize(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof d){const s=this.Length(e,t).value;return new d(n.data.map(i=>i/s),n.typeInfo)}return console.error(`Normalize() expects a vector argument. Line ${e.line}`),null}Pow(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t);if(n instanceof d&&s instanceof d)return new d(n.data.map((o,l)=>Math.pow(o,s.data[l])),n.typeInfo);const i=n,r=s;return new m(Math.pow(i.value,r.value),n.typeInfo)}QuantizeToF16(e,t){const n=this.exec.evalExpression(e.args[0],t);return n instanceof d?new d(n.data.map(s=>s),n.typeInfo):new m(n.value,n.typeInfo)}Radians(e,t){const n=this.exec.evalExpression(e.args[0],t);return n instanceof d?new d(n.data.map(s=>s*Math.PI/180),n.typeInfo):new m(n.value*Math.PI/180,this.getTypeInfo("f32"))}Reflect(e,t){let n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t);if(n instanceof d&&s instanceof d){const i=this._dot(n.data,s.data);return new d(n.data.map((r,o)=>r-2*i*s.data[o]),n.typeInfo)}return console.error(`Reflect() expects vector arguments. Line ${e.line}`),null}Refract(e,t){let n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t),i=this.exec.evalExpression(e.args[2],t);if(n instanceof d&&s instanceof d&&i instanceof m){const r=this._dot(s.data,n.data);return new d(n.data.map((o,l)=>{const c=1-i.value*i.value*(1-r*r);if(c<0)return 0;const u=Math.sqrt(c);return i.value*o-(i.value*r+u)*s.data[l]}),n.typeInfo)}return console.error(`Refract() expects vector arguments and a scalar argument. Line ${e.line}`),null}ReverseBits(e,t){return console.error(`TODO: reverseBits. Line ${e.line}`),null}Round(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof d)return new d(n.data.map(i=>Math.round(i)),n.typeInfo);const s=n;return new m(Math.round(s.value),n.typeInfo)}Saturate(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof d)return new d(n.data.map(i=>Math.min(Math.max(i,0),1)),n.typeInfo);const s=n;return new m(Math.min(Math.max(s.value,0),1),n.typeInfo)}Sign(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof d)return new d(n.data.map(i=>Math.sign(i)),n.typeInfo);const s=n;return new m(Math.sign(s.value),n.typeInfo)}Sin(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof d)return new d(n.data.map(i=>Math.sin(i)),n.typeInfo);const s=n;return new m(Math.sin(s.value),n.typeInfo)}Sinh(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof d)return new d(n.data.map(i=>Math.sinh(i)),n.typeInfo);const s=n;return new m(Math.sinh(s.value),n.typeInfo)}_smoothstep(e,t,n){const s=Math.min(Math.max((n-e)/(t-e),0),1);return s*s*(3-2*s)}SmoothStep(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t),i=this.exec.evalExpression(e.args[2],t);if(i instanceof d&&n instanceof d&&s instanceof d)return new d(i.data.map((c,u)=>this._smoothstep(n.data[u],s.data[u],c)),i.typeInfo);const r=n,o=s,l=i;return new m(this._smoothstep(r.value,o.value,l.value),i.typeInfo)}Sqrt(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof d)return new d(n.data.map(i=>Math.sqrt(i)),n.typeInfo);const s=n;return new m(Math.sqrt(s.value),n.typeInfo)}Step(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t);if(s instanceof d&&n instanceof d)return new d(s.data.map((r,o)=>r<n.data[o]?0:1),s.typeInfo);const i=n;return new m(s.value<i.value?0:1,i.typeInfo)}Tan(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof d)return new d(n.data.map(i=>Math.tan(i)),n.typeInfo);const s=n;return new m(Math.tan(s.value),n.typeInfo)}Tanh(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof d)return new d(n.data.map(i=>Math.tanh(i)),n.typeInfo);const s=n;return new m(Math.tanh(s.value),n.typeInfo)}_getTransposeType(e){const t=e.getTypeName();return t==="mat2x2f"||t==="mat2x2h"?e:t==="mat2x3f"?this.getTypeInfo("mat3x2f"):t==="mat2x3h"?this.getTypeInfo("mat3x2h"):t==="mat2x4f"?this.getTypeInfo("mat4x2f"):t==="mat2x4h"?this.getTypeInfo("mat4x2h"):t==="mat3x2f"?this.getTypeInfo("mat2x3f"):t==="mat3x2h"?this.getTypeInfo("mat2x3h"):t==="mat3x3f"||t==="mat3x3h"?e:t==="mat3x4f"?this.getTypeInfo("mat4x3f"):t==="mat3x4h"?this.getTypeInfo("mat4x3h"):t==="mat4x2f"?this.getTypeInfo("mat2x4f"):t==="mat4x2h"?this.getTypeInfo("mat2x4h"):t==="mat4x3f"?this.getTypeInfo("mat3x4f"):t==="mat4x3h"?this.getTypeInfo("mat3x4h"):(t==="mat4x4f"||t==="mat4x4h"||console.error(`Invalid matrix type ${t}`),e)}Transpose(e,t){const n=this.exec.evalExpression(e.args[0],t);if(!(n instanceof D))return console.error(`Transpose() expects a matrix argument. Line ${e.line}`),null;const s=this._getTransposeType(n.typeInfo);if(n.typeInfo.name==="mat2x2"||n.typeInfo.name==="mat2x2f"||n.typeInfo.name==="mat2x2h"){const i=n.data;return new D([i[0],i[2],i[1],i[3]],s)}if(n.typeInfo.name==="mat2x3"||n.typeInfo.name==="mat2x3f"||n.typeInfo.name==="mat2x3h"){const i=n.data;return new D([i[0],i[3],i[6],i[1],i[4],i[7]],s)}if(n.typeInfo.name==="mat2x4"||n.typeInfo.name==="mat2x4f"||n.typeInfo.name==="mat2x4h"){const i=n.data;return new D([i[0],i[4],i[8],i[12],i[1],i[5],i[9],i[13]],s)}if(n.typeInfo.name==="mat3x2"||n.typeInfo.name==="mat3x2f"||n.typeInfo.name==="mat3x2h"){const i=n.data;return new D([i[0],i[3],i[1],i[4],i[2],i[5]],s)}if(n.typeInfo.name==="mat3x3"||n.typeInfo.name==="mat3x3f"||n.typeInfo.name==="mat3x3h"){const i=n.data;return new D([i[0],i[3],i[6],i[1],i[4],i[7],i[2],i[5],i[8]],s)}if(n.typeInfo.name==="mat3x4"||n.typeInfo.name==="mat3x4f"||n.typeInfo.name==="mat3x4h"){const i=n.data;return new D([i[0],i[4],i[8],i[12],i[1],i[5],i[9],i[13],i[2],i[6],i[10],i[14]],s)}if(n.typeInfo.name==="mat4x2"||n.typeInfo.name==="mat4x2f"||n.typeInfo.name==="mat4x2h"){const i=n.data;return new D([i[0],i[4],i[1],i[5],i[2],i[6]],s)}if(n.typeInfo.name==="mat4x3"||n.typeInfo.name==="mat4x3f"||n.typeInfo.name==="mat4x3h"){const i=n.data;return new D([i[0],i[4],i[8],i[1],i[5],i[9],i[2],i[6],i[10]],s)}if(n.typeInfo.name==="mat4x4"||n.typeInfo.name==="mat4x4f"||n.typeInfo.name==="mat4x4h"){const i=n.data;return new D([i[0],i[4],i[8],i[12],i[1],i[5],i[9],i[13],i[2],i[6],i[10],i[14],i[3],i[7],i[11],i[15]],s)}return console.error(`Invalid matrix type ${n.typeInfo.name}`),null}Trunc(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof d)return new d(n.data.map(i=>Math.trunc(i)),n.typeInfo);const s=n;return new m(Math.trunc(s.value),n.typeInfo)}Dpdx(e,t){return console.error(`TODO: dpdx. Line ${e.line}`),null}DpdxCoarse(e,t){return console.error(`TODO: dpdxCoarse. Line ${e.line}`),null}DpdxFine(e,t){return console.error("TODO: dpdxFine"),null}Dpdy(e,t){return console.error("TODO: dpdy"),null}DpdyCoarse(e,t){return console.error("TODO: dpdyCoarse"),null}DpdyFine(e,t){return console.error("TODO: dpdyFine"),null}Fwidth(e,t){return console.error("TODO: fwidth"),null}FwidthCoarse(e,t){return console.error("TODO: fwidthCoarse"),null}FwidthFine(e,t){return console.error("TODO: fwidthFine"),null}TextureDimensions(e,t){const n=e.args[0],s=e.args.length>1?this.exec.evalExpression(e.args[1],t).value:0;if(n instanceof me){const i=n.name,r=t.getVariableValue(i);if(r instanceof Ee){if(s<0||s>=r.mipLevelCount)return console.error(`Invalid mip level for textureDimensions. Line ${e.line}`),null;const o=r.getMipLevelSize(s),l=r.dimension;return l==="1d"?new m(o[0],this.getTypeInfo("u32")):l==="3d"?new d(o,this.getTypeInfo("vec3u")):l==="2d"?new d(o.slice(0,2),this.getTypeInfo("vec2u")):(console.error(`Invalid texture dimension ${l} not found. Line ${e.line}`),null)}return console.error(`Texture ${i} not found. Line ${e.line}`),null}return console.error(`Invalid texture argument for textureDimensions. Line ${e.line}`),null}TextureGather(e,t){return console.error("TODO: textureGather"),null}TextureGatherCompare(e,t){return console.error("TODO: textureGatherCompare"),null}TextureLoad(e,t){const n=e.args[0],s=this.exec.evalExpression(e.args[1],t),i=e.args.length>2?this.exec.evalExpression(e.args[2],t).value:0;if(!(s instanceof d)||s.data.length!==2)return console.error(`Invalid UV argument for textureLoad. Line ${e.line}`),null;if(n instanceof me){const r=n.name,o=t.getVariableValue(r);if(o instanceof Ee){const l=Math.floor(s.data[0]),c=Math.floor(s.data[1]);if(l<0||l>=o.width||c<0||c>=o.height)return console.error(`Texture ${r} out of bounds. Line ${e.line}`),null;const u=o.getPixel(l,c,0,i);return u===null?(console.error(`Invalid texture format for textureLoad. Line ${e.line}`),null):new d(u,this.getTypeInfo("vec4f"))}return console.error(`Texture ${r} not found. Line ${e.line}`),null}return console.error(`Invalid texture argument for textureLoad. Line ${e.line}`),null}TextureNumLayers(e,t){const n=e.args[0];if(n instanceof me){const s=n.name,i=t.getVariableValue(s);return i instanceof Ee?new m(i.depthOrArrayLayers,this.getTypeInfo("u32")):(console.error(`Texture ${s} not found. Line ${e.line}`),null)}return console.error(`Invalid texture argument for textureNumLayers. Line ${e.line}`),null}TextureNumLevels(e,t){const n=e.args[0];if(n instanceof me){const s=n.name,i=t.getVariableValue(s);return i instanceof Ee?new m(i.mipLevelCount,this.getTypeInfo("u32")):(console.error(`Texture ${s} not found. Line ${e.line}`),null)}return console.error(`Invalid texture argument for textureNumLevels. Line ${e.line}`),null}TextureNumSamples(e,t){const n=e.args[0];if(n instanceof me){const s=n.name,i=t.getVariableValue(s);return i instanceof Ee?new m(i.sampleCount,this.getTypeInfo("u32")):(console.error(`Texture ${s} not found. Line ${e.line}`),null)}return console.error(`Invalid texture argument for textureNumSamples. Line ${e.line}`),null}TextureSample(e,t){return console.error("TODO: textureSample"),null}TextureSampleBias(e,t){return console.error("TODO: textureSampleBias"),null}TextureSampleCompare(e,t){return console.error("TODO: textureSampleCompare"),null}TextureSampleCompareLevel(e,t){return console.error("TODO: textureSampleCompareLevel"),null}TextureSampleGrad(e,t){return console.error("TODO: textureSampleGrad"),null}TextureSampleLevel(e,t){return console.error("TODO: textureSampleLevel"),null}TextureSampleBaseClampToEdge(e,t){return console.error("TODO: textureSampleBaseClampToEdge"),null}TextureStore(e,t){const n=e.args[0],s=this.exec.evalExpression(e.args[1],t),i=e.args.length===4?this.exec.evalExpression(e.args[2],t).value:0,r=e.args.length===4?this.exec.evalExpression(e.args[3],t).data:this.exec.evalExpression(e.args[2],t).data;if(r.length!==4)return console.error(`Invalid value argument for textureStore. Line ${e.line}`),null;if(!(s instanceof d)||s.data.length!==2)return console.error(`Invalid UV argument for textureStore. Line ${e.line}`),null;if(n instanceof me){const o=n.name,l=t.getVariableValue(o);if(l instanceof Ee){const c=l.getMipLevelSize(0),u=Math.floor(s.data[0]),f=Math.floor(s.data[1]);return u<0||u>=c[0]||f<0||f>=c[1]?(console.error(`Texture ${o} out of bounds. Line ${e.line}`),null):(l.setPixel(u,f,0,i,Array.from(r)),null)}return console.error(`Texture ${o} not found. Line ${e.line}`),null}return console.error(`Invalid texture argument for textureStore. Line ${e.line}`),null}AtomicLoad(e,t){let n=e.args[0];n instanceof re&&(n=n.right);const s=this.exec.getVariableName(n,t);return t.getVariable(s).value.getSubData(this.exec,n.postfix,t)}AtomicStore(e,t){let n=e.args[0];n instanceof re&&(n=n.right);const s=this.exec.getVariableName(n,t),i=t.getVariable(s);let r=e.args[1];const o=this.exec.evalExpression(r,t),l=i.value.getSubData(this.exec,n.postfix,t);return l instanceof m&&o instanceof m&&(l.value=o.value),i.value instanceof te&&i.value.setDataValue(this.exec,l,n.postfix,t),null}AtomicAdd(e,t){let n=e.args[0];n instanceof re&&(n=n.right);const s=this.exec.getVariableName(n,t),i=t.getVariable(s);let r=e.args[1];const o=this.exec.evalExpression(r,t),l=i.value.getSubData(this.exec,n.postfix,t),c=new m(l.value,l.typeInfo);return l instanceof m&&o instanceof m&&(l.value+=o.value),i.value instanceof te&&i.value.setDataValue(this.exec,l,n.postfix,t),c}AtomicSub(e,t){let n=e.args[0];n instanceof re&&(n=n.right);const s=this.exec.getVariableName(n,t),i=t.getVariable(s);let r=e.args[1];const o=this.exec.evalExpression(r,t),l=i.value.getSubData(this.exec,n.postfix,t),c=new m(l.value,l.typeInfo);return l instanceof m&&o instanceof m&&(l.value-=o.value),i.value instanceof te&&i.value.setDataValue(this.exec,l,n.postfix,t),c}AtomicMax(e,t){let n=e.args[0];n instanceof re&&(n=n.right);const s=this.exec.getVariableName(n,t),i=t.getVariable(s);let r=e.args[1];const o=this.exec.evalExpression(r,t),l=i.value.getSubData(this.exec,n.postfix,t),c=new m(l.value,l.typeInfo);return l instanceof m&&o instanceof m&&(l.value=Math.max(l.value,o.value)),i.value instanceof te&&i.value.setDataValue(this.exec,l,n.postfix,t),c}AtomicMin(e,t){let n=e.args[0];n instanceof re&&(n=n.right);const s=this.exec.getVariableName(n,t),i=t.getVariable(s);let r=e.args[1];const o=this.exec.evalExpression(r,t),l=i.value.getSubData(this.exec,n.postfix,t),c=new m(l.value,l.typeInfo);return l instanceof m&&o instanceof m&&(l.value=Math.min(l.value,o.value)),i.value instanceof te&&i.value.setDataValue(this.exec,l,n.postfix,t),c}AtomicAnd(e,t){let n=e.args[0];n instanceof re&&(n=n.right);const s=this.exec.getVariableName(n,t),i=t.getVariable(s);let r=e.args[1];const o=this.exec.evalExpression(r,t),l=i.value.getSubData(this.exec,n.postfix,t),c=new m(l.value,l.typeInfo);return l instanceof m&&o instanceof m&&(l.value=l.value&o.value),i.value instanceof te&&i.value.setDataValue(this.exec,l,n.postfix,t),c}AtomicOr(e,t){let n=e.args[0];n instanceof re&&(n=n.right);const s=this.exec.getVariableName(n,t),i=t.getVariable(s);let r=e.args[1];const o=this.exec.evalExpression(r,t),l=i.value.getSubData(this.exec,n.postfix,t),c=new m(l.value,l.typeInfo);return l instanceof m&&o instanceof m&&(l.value=l.value|o.value),i.value instanceof te&&i.value.setDataValue(this.exec,l,n.postfix,t),c}AtomicXor(e,t){let n=e.args[0];n instanceof re&&(n=n.right);const s=this.exec.getVariableName(n,t),i=t.getVariable(s);let r=e.args[1];const o=this.exec.evalExpression(r,t),l=i.value.getSubData(this.exec,n.postfix,t),c=new m(l.value,l.typeInfo);return l instanceof m&&o instanceof m&&(l.value=l.value^o.value),i.value instanceof te&&i.value.setDataValue(this.exec,l,n.postfix,t),c}AtomicExchange(e,t){let n=e.args[0];n instanceof re&&(n=n.right);const s=this.exec.getVariableName(n,t),i=t.getVariable(s);let r=e.args[1];const o=this.exec.evalExpression(r,t),l=i.value.getSubData(this.exec,n.postfix,t),c=new m(l.value,l.typeInfo);return l instanceof m&&o instanceof m&&(l.value=o.value),i.value instanceof te&&i.value.setDataValue(this.exec,l,n.postfix,t),c}AtomicCompareExchangeWeak(e,t){return console.error("TODO: atomicCompareExchangeWeak"),null}Pack4x8snorm(e,t){return console.error("TODO: pack4x8snorm"),null}Pack4x8unorm(e,t){return console.error("TODO: pack4x8unorm"),null}Pack4xI8(e,t){return console.error("TODO: pack4xI8"),null}Pack4xU8(e,t){return console.error("TODO: pack4xU8"),null}Pack4x8Clamp(e,t){return console.error("TODO: pack4x8Clamp"),null}Pack4xU8Clamp(e,t){return console.error("TODO: pack4xU8Clamp"),null}Pack2x16snorm(e,t){return console.error("TODO: pack2x16snorm"),null}Pack2x16unorm(e,t){return console.error("TODO: pack2x16unorm"),null}Pack2x16float(e,t){return console.error("TODO: pack2x16float"),null}Unpack4x8snorm(e,t){return console.error("TODO: unpack4x8snorm"),null}Unpack4x8unorm(e,t){return console.error("TODO: unpack4x8unorm"),null}Unpack4xI8(e,t){return console.error("TODO: unpack4xI8"),null}Unpack4xU8(e,t){return console.error("TODO: unpack4xU8"),null}Unpack2x16snorm(e,t){return console.error("TODO: unpack2x16snorm"),null}Unpack2x16unorm(e,t){return console.error("TODO: unpack2x16unorm"),null}Unpack2x16float(e,t){return console.error("TODO: unpack2x16float"),null}StorageBarrier(e,t){return null}TextureBarrier(e,t){return null}WorkgroupBarrier(e,t){return null}WorkgroupUniformLoad(e,t){return null}SubgroupAdd(e,t){return console.error("TODO: subgroupAdd"),null}SubgroupExclusiveAdd(e,t){return console.error("TODO: subgroupExclusiveAdd"),null}SubgroupInclusiveAdd(e,t){return console.error("TODO: subgroupInclusiveAdd"),null}SubgroupAll(e,t){return console.error("TODO: subgroupAll"),null}SubgroupAnd(e,t){return console.error("TODO: subgroupAnd"),null}SubgroupAny(e,t){return console.error("TODO: subgroupAny"),null}SubgroupBallot(e,t){return console.error("TODO: subgroupBallot"),null}SubgroupBroadcast(e,t){return console.error("TODO: subgroupBroadcast"),null}SubgroupBroadcastFirst(e,t){return console.error("TODO: subgroupBroadcastFirst"),null}SubgroupElect(e,t){return console.error("TODO: subgroupElect"),null}SubgroupMax(e,t){return console.error("TODO: subgroupMax"),null}SubgroupMin(e,t){return console.error("TODO: subgroupMin"),null}SubgroupMul(e,t){return console.error("TODO: subgroupMul"),null}SubgroupExclusiveMul(e,t){return console.error("TODO: subgroupExclusiveMul"),null}SubgroupInclusiveMul(e,t){return console.error("TODO: subgroupInclusiveMul"),null}SubgroupOr(e,t){return console.error("TODO: subgroupOr"),null}SubgroupShuffle(e,t){return console.error("TODO: subgroupShuffle"),null}SubgroupShuffleDown(e,t){return console.error("TODO: subgroupShuffleDown"),null}SubgroupShuffleUp(e,t){return console.error("TODO: subgroupShuffleUp"),null}SubgroupShuffleXor(e,t){return console.error("TODO: subgroupShuffleXor"),null}SubgroupXor(e,t){return console.error("TODO: subgroupXor"),null}QuadBroadcast(e,t){return console.error("TODO: quadBroadcast"),null}QuadSwapDiagonal(e,t){return console.error("TODO: quadSwapDiagonal"),null}QuadSwapX(e,t){return console.error("TODO: quadSwapX"),null}QuadSwapY(e,t){return console.error("TODO: quadSwapY"),null}}const tn={vec2:2,vec2f:2,vec2i:2,vec2u:2,vec2b:2,vec2h:2,vec3:3,vec3f:3,vec3i:3,vec3u:3,vec3b:3,vec3h:3,vec4:4,vec4f:4,vec4i:4,vec4u:4,vec4b:4,vec4h:4},he={mat2x2:[2,2,4],mat2x2f:[2,2,4],mat2x2h:[2,2,4],mat2x3:[2,3,6],mat2x3f:[2,3,6],mat2x3h:[2,3,6],mat2x4:[2,4,8],mat2x4f:[2,4,8],mat2x4h:[2,4,8],mat3x2:[3,2,6],mat3x2f:[3,2,6],mat3x2h:[3,2,6],mat3x3:[3,3,9],mat3x3f:[3,3,9],mat3x3h:[3,3,9],mat3x4:[3,4,12],mat3x4f:[3,4,12],mat3x4h:[3,4,12],mat4x2:[4,2,8],mat4x2f:[4,2,8],mat4x2h:[4,2,8],mat4x3:[4,3,12],mat4x3f:[4,3,12],mat4x3h:[4,3,12],mat4x4:[4,4,16],mat4x4f:[4,4,16],mat4x4h:[4,4,16]};class fe extends mo{constructor(e,t){var n;super(),this.ast=e??[],this.reflection=new Ae,this.reflection.updateAST(this.ast),this.context=(n=t?.clone())!==null&&n!==void 0?n:new Dn,this.builtins=new yo(this),this.typeInfo={bool:this.getTypeInfo(P.bool),i32:this.getTypeInfo(P.i32),u32:this.getTypeInfo(P.u32),f32:this.getTypeInfo(P.f32),f16:this.getTypeInfo(P.f16),vec2f:this.getTypeInfo(b.vec2f),vec2u:this.getTypeInfo(b.vec2u),vec2i:this.getTypeInfo(b.vec2i),vec2h:this.getTypeInfo(b.vec2h),vec3f:this.getTypeInfo(b.vec3f),vec3u:this.getTypeInfo(b.vec3u),vec3i:this.getTypeInfo(b.vec3i),vec3h:this.getTypeInfo(b.vec3h),vec4f:this.getTypeInfo(b.vec4f),vec4u:this.getTypeInfo(b.vec4u),vec4i:this.getTypeInfo(b.vec4i),vec4h:this.getTypeInfo(b.vec4h),mat2x2f:this.getTypeInfo(b.mat2x2f),mat2x3f:this.getTypeInfo(b.mat2x3f),mat2x4f:this.getTypeInfo(b.mat2x4f),mat3x2f:this.getTypeInfo(b.mat3x2f),mat3x3f:this.getTypeInfo(b.mat3x3f),mat3x4f:this.getTypeInfo(b.mat3x4f),mat4x2f:this.getTypeInfo(b.mat4x2f),mat4x3f:this.getTypeInfo(b.mat4x3f),mat4x4f:this.getTypeInfo(b.mat4x4f)}}getVariableValue(e){var t,n;const s=(n=(t=this.context.getVariable(e))===null||t===void 0?void 0:t.value)!==null&&n!==void 0?n:null;if(s===null)return null;if(s instanceof m)return s.value;if(s instanceof d||s instanceof D)return Array.from(s.data);if(s instanceof te&&s.typeInfo instanceof De){if(s.typeInfo.format.name==="u32")return Array.from(new Uint32Array(s.buffer,s.offset,s.typeInfo.count));if(s.typeInfo.format.name==="i32")return Array.from(new Int32Array(s.buffer,s.offset,s.typeInfo.count));if(s.typeInfo.format.name==="f32")return Array.from(new Float32Array(s.buffer,s.offset,s.typeInfo.count))}return console.error(`Unsupported return variable type ${s.typeInfo.name}`),null}execute(e){(e=e??{}).constants&&this._setOverrides(e.constants,this.context),this._execStatements(this.ast,this.context)}dispatchWorkgroups(e,t,n,s){const i=this.context.clone();(s=s??{}).constants&&this._setOverrides(s.constants,i),this._execStatements(this.ast,i);const r=i.getFunction(e);if(!r)return void console.error(`Function ${e} not found`);if(typeof t=="number")t=[t,1,1];else{if(t.length===0)return void console.error("Invalid dispatch count");t.length===1?t=[t[0],1,1]:t.length===2?t=[t[0],t[1],1]:t.length>3&&(t=[t[0],t[1],t[2]])}const o=t[0],l=t[1],c=t[2],u=this.getTypeInfo("vec3u");i.setVariable("@num_workgroups",new d(t,u));for(const f in n)for(const p in n[f]){const x=n[f][p];i.variables.forEach(I=>{var L;const E=I.node;if(E?.attributes){let M=null,R=null;for(const T of E.attributes)T.name==="binding"?M=T.value:T.name==="group"&&(R=T.value);if(p==M&&f==R)if(x.texture!==void 0&&x.descriptor!==void 0){const T=new Ee(x.texture,this.getTypeInfo(E.type),x.descriptor,(L=x.texture.view)!==null&&L!==void 0?L:null);I.value=T}else x.uniform!==void 0?I.value=new te(x.uniform,this.getTypeInfo(E.type)):I.value=new te(x,this.getTypeInfo(E.type))}})}for(let f=0;f<c;++f)for(let p=0;p<l;++p)for(let x=0;x<o;++x)i.setVariable("@workgroup_id",new d([x,p,f],this.getTypeInfo("vec3u"))),this._dispatchWorkgroup(r,[x,p,f],i)}execStatement(e,t){if(e instanceof di)return this.evalExpression(e.value,t);if(e instanceof gi){if(e.condition){const n=this.evalExpression(e.condition,t);if(!(n instanceof m))throw new Error("Invalid break-if condition");if(!n.value)return null}return fe._breakObj}if(e instanceof mi)return fe._continueObj;if(e instanceof at)this._let(e,t);else if(e instanceof Oe)this._var(e,t);else if(e instanceof Tt)this._const(e,t);else if(e instanceof ut)this._function(e,t);else{if(e instanceof hi)return this._if(e,t);if(e instanceof fi)return this._switch(e,t);if(e instanceof ai)return this._for(e,t);if(e instanceof oi)return this._while(e,t);if(e instanceof ui)return this._loop(e,t);if(e instanceof yn){const n=t.clone();return n.currentFunctionName=t.currentFunctionName,this._execStatements(e.body,n)}if(e instanceof ci)this._assign(e,t);else if(e instanceof li)this._increment(e,t);else{if(e instanceof Se)return null;if(e instanceof On){const n=e.name;t.getVariable(n)===null&&t.setVariable(n,new m(0,this.getTypeInfo("u32")))}else if(e instanceof Mn)this._call(e,t);else{if(e instanceof pi||e instanceof Bn)return null;console.error("Invalid statement type.",e,`Line ${e.line}`)}}}return null}evalExpression(e,t){return e instanceof be?this._evalBinaryOp(e,t):e instanceof oe?this._evalLiteral(e,t):e instanceof me?this._evalVariable(e,t):e instanceof Fn?this._evalCall(e,t):e instanceof Pe?this._evalCreate(e,t):e instanceof yi?this._evalConst(e,t):e instanceof _i?this._evalBitcast(e,t):e instanceof re?this._evalUnaryOp(e,t):(console.error("Invalid expression type",e,`Line ${e.line}`),null)}getTypeInfo(e){var t;if(e instanceof P){const s=this.reflection.getTypeInfo(e);if(s!==null)return s}let n=(t=this.typeInfo[e])!==null&&t!==void 0?t:null;return n!==null||(n=this.reflection.getTypeInfoByName(e)),n}_setOverrides(e,t){for(const n in e){const s=e[n],i=this.reflection.getOverrideInfo(n);i!==null?(i.type===null&&(i.type=this.getTypeInfo("u32")),i.type.name==="u32"||i.type.name==="i32"||i.type.name==="f32"||i.type.name==="f16"?t.setVariable(n,new m(s,i.type)):i.type.name==="bool"?t.setVariable(n,new m(s?1:0,i.type)):i.type.name==="vec2"||i.type.name==="vec3"||i.type.name==="vec4"||i.type.name==="vec2f"||i.type.name==="vec3f"||i.type.name==="vec4f"||i.type.name==="vec2i"||i.type.name==="vec3i"||i.type.name==="vec4i"||i.type.name==="vec2u"||i.type.name==="vec3u"||i.type.name==="vec4u"||i.type.name==="vec2h"||i.type.name==="vec3h"||i.type.name==="vec4h"?t.setVariable(n,new d(s,i.type)):console.error(`Invalid constant type for ${n}`)):console.error(`Override ${n} does not exist in the shader.`)}}_dispatchWorkgroup(e,t,n){const s=[1,1,1];for(const u of e.node.attributes)if(u.name==="workgroup_size"){if(u.value.length>0){const f=n.getVariableValue(u.value[0]);s[0]=f instanceof m?f.value:parseInt(u.value[0])}if(u.value.length>1){const f=n.getVariableValue(u.value[1]);s[1]=f instanceof m?f.value:parseInt(u.value[1])}if(u.value.length>2){const f=n.getVariableValue(u.value[2]);s[2]=f instanceof m?f.value:parseInt(u.value[2])}}const i=this.getTypeInfo("vec3u"),r=this.getTypeInfo("u32");n.setVariable("@workgroup_size",new d(s,i));const o=s[0],l=s[1],c=s[2];for(let u=0,f=0;u<c;++u)for(let p=0;p<l;++p)for(let x=0;x<o;++x,++f){const I=[x,p,u],L=[x+t[0]*s[0],p+t[1]*s[1],u+t[2]*s[2]];n.setVariable("@local_invocation_id",new d(I,i)),n.setVariable("@global_invocation_id",new d(L,i)),n.setVariable("@local_invocation_index",new m(f,r)),this._dispatchExec(e,n)}}_dispatchExec(e,t){for(const n of e.node.args)for(const s of n.attributes)if(s.name==="builtin"){const i=`@${s.value}`,r=t.getVariable(i);r!==void 0&&t.variables.set(n.name,r)}this._execStatements(e.node.body,t)}getVariableName(e,t){for(;e instanceof re;)e=e.right;return e instanceof me?e.name:(console.error("Unknown variable type",e,"Line",e.line),null)}_execStatements(e,t){for(const n of e){if(n instanceof Array){const i=t.clone(),r=this._execStatements(n,i);if(r)return r;continue}const s=this.execStatement(n,t);if(s)return s}return null}_call(e,t){const n=t.clone();n.currentFunctionName=e.name;const s=t.getFunction(e.name);if(s){for(let i=0;i<s.node.args.length;++i){const r=s.node.args[i],o=this.evalExpression(e.args[i],n);n.setVariable(r.name,o,r)}this._execStatements(s.node.body,n)}else e.isBuiltin?this._callBuiltinFunction(e,n):this.getTypeInfo(e.name)&&this._evalCreate(e,t)}_increment(e,t){const n=this.getVariableName(e.variable,t),s=t.getVariable(n);s?e.operator==="++"?s.value instanceof m?s.value.value++:console.error(`Variable ${n} is not a scalar. Line ${e.line}`):e.operator==="--"?s.value instanceof m?s.value.value--:console.error(`Variable ${n} is not a scalar. Line ${e.line}`):console.error(`Unknown increment operator ${e.operator}. Line ${e.line}`):console.error(`Variable ${n} not found. Line ${e.line}`)}_getVariableData(e,t){if(e instanceof me){const n=this.getVariableName(e,t),s=t.getVariable(n);return s===null?(console.error(`Variable ${n} not found. Line ${e.line}`),null):s.value.getSubData(this,e.postfix,t)}if(e instanceof re){if(e.operator==="*"){const n=this._getVariableData(e.right,t);return n instanceof je?n.reference.getSubData(this,e.postfix,t):(console.error(`Variable ${e.right} is not a pointer. Line ${e.line}`),null)}if(e.operator==="&"){const n=this._getVariableData(e.right,t);return new je(n)}}return null}_assign(e,t){let n=null,s="<var>",i=null;if(e.variable instanceof re){const l=this._getVariableData(e.variable,t),c=this.evalExpression(e.value,t),u=e.operator;if(u==="="){if(l instanceof m||l instanceof d||l instanceof D){if(c instanceof m||c instanceof d||c instanceof D&&l.data.length===c.data.length)return void l.data.set(c.data);console.error(`Invalid assignment. Line ${e.line}`)}else if(l instanceof te&&c instanceof te&&l.buffer.byteLength-l.offset>=c.buffer.byteLength-c.offset)return void(l.buffer.byteLength%4==0?new Uint32Array(l.buffer,l.offset,l.typeInfo.size/4).set(new Uint32Array(c.buffer,c.offset,c.typeInfo.size/4)):new Uint8Array(l.buffer,l.offset,l.typeInfo.size).set(new Uint8Array(c.buffer,c.offset,c.typeInfo.size)));return console.error(`Invalid assignment. Line ${e.line}`),null}if(u==="+=")return l instanceof m||l instanceof d||l instanceof D?c instanceof m||c instanceof d||c instanceof D?void l.data.set(c.data.map((f,p)=>l.data[p]+f)):void console.error(`Invalid assignment . Line ${e.line}`):void console.error(`Invalid assignment. Line ${e.line}`);if(u==="-=")return(l instanceof m||l instanceof d||l instanceof D)&&(c instanceof m||c instanceof d||c instanceof D)?void l.data.set(c.data.map((f,p)=>l.data[p]-f)):void console.error(`Invalid assignment. Line ${e.line}`)}if(e.variable instanceof re){if(e.variable.operator==="*"){s=this.getVariableName(e.variable.right,t);const l=t.getVariable(s);if(!(l&&l.value instanceof je))return void console.error(`Variable ${s} is not a pointer. Line ${e.line}`);n=l.value.reference;let c=e.variable.postfix;if(!c){let u=e.variable.right;for(;u instanceof re;){if(u.postfix){c=u.postfix;break}u=u.right}}c&&(n=n.getSubData(this,c,t))}}else{i=e.variable.postfix,s=this.getVariableName(e.variable,t);const l=t.getVariable(s);if(l===null)return void console.error(`Variable ${s} not found. Line ${e.line}`);n=l.value}if(n instanceof je&&(n=n.reference),n===null)return void console.error(`Variable ${s} not found. Line ${e.line}`);const r=this.evalExpression(e.value,t),o=e.operator;if(o==="=")if(n instanceof te)n.setDataValue(this,r,i,t);else if(i){if(!(n instanceof d||n instanceof D))return void console.error(`Variable ${s} is not a vector or matrix. Line ${e.line}`);if(i instanceof Ke){const l=this.evalExpression(i.index,t).value;if(n instanceof d){if(!(r instanceof m))return void console.error(`Invalid assignment to ${s}. Line ${e.line}`);n.data[l]=r.value}else{if(!(n instanceof D))return void console.error(`Invalid assignment to ${s}. Line ${e.line}`);{const c=this.evalExpression(i.index,t).value;if(c<0)return void console.error(`Invalid assignment to ${s}. Line ${e.line}`);if(!(r instanceof d))return void console.error(`Invalid assignment to ${s}. Line ${e.line}`);{const u=n.typeInfo.getTypeName();if(u==="mat2x2"||u==="mat2x2f"||u==="mat2x2h"){if(!(c<2&&r.data.length===2))return void console.error(`Invalid assignment to ${s}. Line ${e.line}`);n.data[2*c]=r.data[0],n.data[2*c+1]=r.data[1]}else if(u==="mat2x3"||u==="mat2x3f"||u==="mat2x3h"){if(!(c<2&&r.data.length===3))return void console.error(`Invalid assignment to ${s}. Line ${e.line}`);n.data[3*c]=r.data[0],n.data[3*c+1]=r.data[1],n.data[3*c+2]=r.data[2]}else if(u==="mat2x4"||u==="mat2x4f"||u==="mat2x4h"){if(!(c<2&&r.data.length===4))return void console.error(`Invalid assignment to ${s}. Line ${e.line}`);n.data[4*c]=r.data[0],n.data[4*c+1]=r.data[1],n.data[4*c+2]=r.data[2],n.data[4*c+3]=r.data[3]}else if(u==="mat3x2"||u==="mat3x2f"||u==="mat3x2h"){if(!(c<3&&r.data.length===2))return void console.error(`Invalid assignment to ${s}. Line ${e.line}`);n.data[2*c]=r.data[0],n.data[2*c+1]=r.data[1]}else if(u==="mat3x3"||u==="mat3x3f"||u==="mat3x3h"){if(!(c<3&&r.data.length===3))return void console.error(`Invalid assignment to ${s}. Line ${e.line}`);n.data[3*c]=r.data[0],n.data[3*c+1]=r.data[1],n.data[3*c+2]=r.data[2]}else if(u==="mat3x4"||u==="mat3x4f"||u==="mat3x4h"){if(!(c<3&&r.data.length===4))return void console.error(`Invalid assignment to ${s}. Line ${e.line}`);n.data[4*c]=r.data[0],n.data[4*c+1]=r.data[1],n.data[4*c+2]=r.data[2],n.data[4*c+3]=r.data[3]}else if(u==="mat4x2"||u==="mat4x2f"||u==="mat4x2h"){if(!(c<4&&r.data.length===2))return void console.error(`Invalid assignment to ${s}. Line ${e.line}`);n.data[2*c]=r.data[0],n.data[2*c+1]=r.data[1]}else if(u==="mat4x3"||u==="mat4x3f"||u==="mat4x3h"){if(!(c<4&&r.data.length===3))return void console.error(`Invalid assignment to ${s}. Line ${e.line}`);n.data[3*c]=r.data[0],n.data[3*c+1]=r.data[1],n.data[3*c+2]=r.data[2]}else{if(u!=="mat4x4"&&u!=="mat4x4f"&&u!=="mat4x4h")return void console.error(`Invalid assignment to ${s}. Line ${e.line}`);if(!(c<4&&r.data.length===4))return void console.error(`Invalid assignment to ${s}. Line ${e.line}`);n.data[4*c]=r.data[0],n.data[4*c+1]=r.data[1],n.data[4*c+2]=r.data[2],n.data[4*c+3]=r.data[3]}}}}}else if(i instanceof Ge){const l=i.value;if(!(n instanceof d))return void console.error(`Invalid assignment to ${l}. Variable ${s} is not a vector. Line ${e.line}`);if(r instanceof m){if(l.length>1)return void console.error(`Invalid assignment to ${l} for variable ${s}. Line ${e.line}`);if(l==="x")n.data[0]=r.value;else if(l==="y"){if(n.data.length<2)return void console.error(`Invalid assignment to ${l} for variable ${s}. Line ${e.line}`);n.data[1]=r.value}else if(l==="z"){if(n.data.length<3)return void console.error(`Invalid assignment to ${l} for variable ${s}. Line ${e.line}`);n.data[2]=r.value}else if(l==="w"){if(n.data.length<4)return void console.error(`Invalid assignment to ${l} for variable ${s}. Line ${e.line}`);n.data[3]=r.value}}else{if(!(r instanceof d))return void console.error(`Invalid assignment to ${s}. Line ${e.line}`);if(l.length!==r.data.length)return void console.error(`Invalid assignment to ${l} for variable ${s}. Line ${e.line}`);for(let c=0;c<l.length;++c){const u=l[c];if(u==="x"||u==="r")n.data[0]=r.data[c];else if(u==="y"||u==="g"){if(r.data.length<2)return void console.error(`Invalid assignment to ${u} for variable ${s}. Line ${e.line}`);n.data[1]=r.data[c]}else if(u==="z"||u==="b"){if(r.data.length<3)return void console.error(`Invalid assignment to ${u} for variable ${s}. Line ${e.line}`);n.data[2]=r.data[c]}else{if(u!=="w"&&u!=="a")return void console.error(`Invalid assignment to ${u} for variable ${s}. Line ${e.line}`);if(r.data.length<4)return void console.error(`Invalid assignment to ${u} for variable ${s}. Line ${e.line}`);n.data[3]=r.data[c]}}}}}else n instanceof m&&r instanceof m?n.value=r.value:n instanceof d&&r instanceof d||n instanceof D&&r instanceof D?n.data.set(r.data):console.error(`Invalid assignment to ${s}. Line ${e.line}`);else{const l=n.getSubData(this,i,t);if(l instanceof d&&r instanceof m){const c=l.data,u=r.value;if(o==="+=")for(let f=0;f<c.length;++f)c[f]+=u;else if(o==="-=")for(let f=0;f<c.length;++f)c[f]-=u;else if(o==="*=")for(let f=0;f<c.length;++f)c[f]*=u;else if(o==="/=")for(let f=0;f<c.length;++f)c[f]/=u;else if(o==="%=")for(let f=0;f<c.length;++f)c[f]%=u;else if(o==="&=")for(let f=0;f<c.length;++f)c[f]&=u;else if(o==="|=")for(let f=0;f<c.length;++f)c[f]|=u;else if(o==="^=")for(let f=0;f<c.length;++f)c[f]^=u;else if(o==="<<=")for(let f=0;f<c.length;++f)c[f]<<=u;else if(o===">>=")for(let f=0;f<c.length;++f)c[f]>>=u;else console.error(`Invalid operator ${o}. Line ${e.line}`)}else if(l instanceof d&&r instanceof d){const c=l.data,u=r.data;if(c.length!==u.length)return void console.error(`Vector length mismatch. Line ${e.line}`);if(o==="+=")for(let f=0;f<c.length;++f)c[f]+=u[f];else if(o==="-=")for(let f=0;f<c.length;++f)c[f]-=u[f];else if(o==="*=")for(let f=0;f<c.length;++f)c[f]*=u[f];else if(o==="/=")for(let f=0;f<c.length;++f)c[f]/=u[f];else if(o==="%=")for(let f=0;f<c.length;++f)c[f]%=u[f];else if(o==="&=")for(let f=0;f<c.length;++f)c[f]&=u[f];else if(o==="|=")for(let f=0;f<c.length;++f)c[f]|=u[f];else if(o==="^=")for(let f=0;f<c.length;++f)c[f]^=u[f];else if(o==="<<=")for(let f=0;f<c.length;++f)c[f]<<=u[f];else if(o===">>=")for(let f=0;f<c.length;++f)c[f]>>=u[f];else console.error(`Invalid operator ${o}. Line ${e.line}`)}else{if(!(l instanceof m&&r instanceof m))return void console.error(`Invalid type for ${e.operator} operator. Line ${e.line}`);o==="+="?l.value+=r.value:o==="-="?l.value-=r.value:o==="*="?l.value*=r.value:o==="/="?l.value/=r.value:o==="%="?l.value%=r.value:o==="&="?l.value&=r.value:o==="|="?l.value|=r.value:o==="^="?l.value^=r.value:o==="<<="?l.value<<=r.value:o===">>="?l.value>>=r.value:console.error(`Invalid operator ${o}. Line ${e.line}`)}n instanceof te&&n.setDataValue(this,l,i,t)}}_function(e,t){const n=new Rn(e);t.functions.set(e.name,n)}_const(e,t){let n=null;e.value!==null&&(n=this.evalExpression(e.value,t)),t.createVariable(e.name,n,e)}_let(e,t){let n=null;if(e.value!==null){if(n=this.evalExpression(e.value,t),n===null)return void console.error(`Invalid value for variable ${e.name}. Line ${e.line}`);e.value instanceof re||(n=n.clone())}else{const s=e.type.name;if(s==="f32"||s==="i32"||s==="u32"||s==="bool"||s==="f16"||s==="vec2"||s==="vec3"||s==="vec4"||s==="vec2f"||s==="vec3f"||s==="vec4f"||s==="vec2i"||s==="vec3i"||s==="vec4i"||s==="vec2u"||s==="vec3u"||s==="vec4u"||s==="vec2h"||s==="vec3h"||s==="vec4h"||s==="vec2b"||s==="vec3b"||s==="vec4b"||s==="mat2x2"||s==="mat2x3"||s==="mat2x4"||s==="mat3x2"||s==="mat3x3"||s==="mat3x4"||s==="mat4x2"||s==="mat4x3"||s==="mat4x4"||s==="mat2x2f"||s==="mat2x3f"||s==="mat2x4f"||s==="mat3x2f"||s==="mat3x3f"||s==="mat3x4f"||s==="mat4x2f"||s==="mat4x3f"||s==="mat4x4f"||s==="mat2x2h"||s==="mat2x3h"||s==="mat2x4h"||s==="mat3x2h"||s==="mat3x3h"||s==="mat3x4h"||s==="mat4x2h"||s==="mat4x3h"||s==="mat4x4h"||s==="array"){const i=new Pe(e.type,[]);n=this._evalCreate(i,t)}}t.createVariable(e.name,n,e)}_var(e,t){let n=null;if(e.value!==null){if(n=this.evalExpression(e.value,t),n===null)return void console.error(`Invalid value for variable ${e.name}. Line ${e.line}`);e.value instanceof re||(n=n.clone())}else{if(e.type===null)return void console.error(`Variable ${e.name} has no type. Line ${e.line}`);const s=e.type.name;if(s==="f32"||s==="i32"||s==="u32"||s==="bool"||s==="f16"||s==="vec2"||s==="vec3"||s==="vec4"||s==="vec2f"||s==="vec3f"||s==="vec4f"||s==="vec2i"||s==="vec3i"||s==="vec4i"||s==="vec2u"||s==="vec3u"||s==="vec4u"||s==="vec2h"||s==="vec3h"||s==="vec4h"||s==="vec2b"||s==="vec3b"||s==="vec4b"||s==="mat2x2"||s==="mat2x3"||s==="mat2x4"||s==="mat3x2"||s==="mat3x3"||s==="mat3x4"||s==="mat4x2"||s==="mat4x3"||s==="mat4x4"||s==="mat2x2f"||s==="mat2x3f"||s==="mat2x4f"||s==="mat3x2f"||s==="mat3x3f"||s==="mat3x4f"||s==="mat4x2f"||s==="mat4x3f"||s==="mat4x4f"||s==="mat2x2h"||s==="mat2x3h"||s==="mat2x4h"||s==="mat3x2h"||s==="mat3x3h"||s==="mat3x4h"||s==="mat4x2h"||s==="mat4x3h"||s==="mat4x4h"||e.type instanceof lt||e.type instanceof Se||e.type instanceof b){const i=new Pe(e.type,[]);n=this._evalCreate(i,t)}}t.createVariable(e.name,n,e)}_switch(e,t){t=t.clone();const n=this.evalExpression(e.condition,t);if(!(n instanceof m))return console.error(`Invalid if condition. Line ${e.line}`),null;let s=null;for(const i of e.cases)if(i instanceof bi)for(const r of i.selectors){if(r instanceof Pt){s=i;continue}const o=this.evalExpression(r,t);if(!(o instanceof m))return console.error(`Invalid case selector. Line ${e.line}`),null;if(o.value===n.value)return this._execStatements(i.body,t)}else i instanceof wi&&(s=i);return s?this._execStatements(s.body,t):null}_if(e,t){t=t.clone();const n=this.evalExpression(e.condition,t);if(!(n instanceof m))return console.error(`Invalid if condition. Line ${e.line}`),null;if(n.value)return this._execStatements(e.body,t);for(const s of e.elseif){const i=this.evalExpression(s.condition,t);if(!(i instanceof m))return console.error(`Invalid if condition. Line ${e.line}`),null;if(i.value)return this._execStatements(s.body,t)}return e.else?this._execStatements(e.else,t):null}_getScalarValue(e){return e instanceof m?e.value:(console.error("Expected scalar value.",e),0)}_for(e,t){for(t=t.clone(),this.execStatement(e.init,t);this._getScalarValue(this.evalExpression(e.condition,t));){const n=this._execStatements(e.body,t);if(n===fe._breakObj)break;if(n!==null&&n!==fe._continueObj)return n;this.execStatement(e.increment,t)}return null}_loop(e,t){for(t=t.clone();;){const n=this._execStatements(e.body,t);if(n===fe._breakObj)break;if(n===fe._continueObj){if(e.continuing&&this._execStatements(e.continuing.body,t)===fe._breakObj)break}else if(n!==null)return n}return null}_while(e,t){for(t=t.clone();this._getScalarValue(this.evalExpression(e.condition,t));){const n=this._execStatements(e.body,t);if(n===fe._breakObj)break;if(n!==fe._continueObj&&n!==null)return n}return null}_evalBitcast(e,t){const n=this.evalExpression(e.value,t),s=e.type;if(n instanceof m){const i=ls(n.value,n.typeInfo.name,s.name);return new m(i,this.getTypeInfo(s))}if(n instanceof d){const i=n.typeInfo.getTypeName();let r="";if(i.endsWith("f"))r="f32";else if(i.endsWith("i"))r="i32";else if(i.endsWith("u"))r="u32";else if(i.endsWith("b"))r="bool";else{if(!i.endsWith("h"))return console.error(`Unknown vector type ${i}. Line ${e.line}`),null;r="f16"}const o=s.getTypeName();let l="";if(o.endsWith("f"))l="f32";else if(o.endsWith("i"))l="i32";else if(o.endsWith("u"))l="u32";else if(o.endsWith("b"))l="bool";else{if(!o.endsWith("h"))return console.error(`Unknown vector type ${l}. Line ${e.line}`),null;l="f16"}const c=function(u,f,p){if(f===p)return u;const x=new Array(u.length);for(let I=0;I<u.length;I++)x[I]=ls(u[I],f,p);return x}(Array.from(n.data),r,l);return new d(c,this.getTypeInfo(s))}return console.error(`TODO: bitcast for ${n.typeInfo.name}. Line ${e.line}`),null}_evalConst(e,t){return t.getVariableValue(e.name).clone().getSubData(this,e.postfix,t)}_evalCreate(e,t){var n;if(e instanceof Pe){if(e.type===null)return _n.void;switch(e.type.getTypeName()){case"bool":case"i32":case"u32":case"f32":case"f16":return this._callConstructorValue(e,t);case"vec2":case"vec3":case"vec4":case"vec2f":case"vec3f":case"vec4f":case"vec2h":case"vec3h":case"vec4h":case"vec2i":case"vec3i":case"vec4i":case"vec2u":case"vec3u":case"vec4u":case"vec2b":case"vec3b":case"vec4b":return this._callConstructorVec(e,t);case"mat2x2":case"mat2x2f":case"mat2x2h":case"mat2x3":case"mat2x3f":case"mat2x3h":case"mat2x4":case"mat2x4f":case"mat2x4h":case"mat3x2":case"mat3x2f":case"mat3x2h":case"mat3x3":case"mat3x3f":case"mat3x3h":case"mat3x4":case"mat3x4f":case"mat3x4h":case"mat4x2":case"mat4x2f":case"mat4x2h":case"mat4x3":case"mat4x3f":case"mat4x3h":case"mat4x4":case"mat4x4f":case"mat4x4h":return this._callConstructorMatrix(e,t)}}const s=e instanceof Pe?e.type.name:e.name,i=e instanceof Pe?this.getTypeInfo(e.type):this.getTypeInfo(e.name);if(i===null)return console.error(`Unknown type ${s}. Line ${e.line}`),null;if(i.size===0)return null;const r=new te(new ArrayBuffer(i.size),i,0);if(i instanceof Fe){if(e.args)for(let o=0;o<e.args.length;++o){const l=i.members[o],c=e.args[o],u=this.evalExpression(c,t);r.setData(this,u,l.type,l.offset,t)}}else if(i instanceof De){let o=0;if(e.args)for(let l=0;l<e.args.length;++l){const c=e.args[l],u=this.evalExpression(c,t);i.format===null&&(((n=u.typeInfo)===null||n===void 0?void 0:n.name)==="x32"?i.format=this.getTypeInfo("i32"):i.format=u.typeInfo),r.setData(this,u,i.format,o,t),o+=i.stride}}else console.error(`Unknown type "${s}". Line ${e.line}`);return e instanceof Pe?r.getSubData(this,e.postfix,t):r}_evalLiteral(e,t){const n=this.getTypeInfo(e.type),s=n.name;return s==="x32"||s==="u32"||s==="f32"||s==="f16"||s==="i32"||s==="bool"?new m(e.scalarValue,n):s==="vec2"||s==="vec3"||s==="vec4"||s==="vec2f"||s==="vec3f"||s==="vec4f"||s==="vec2h"||s==="vec3h"||s==="vec4h"||s==="vec2i"||s==="vec3i"||s==="vec4i"||s==="vec2u"||s==="vec3u"||s==="vec4u"?this._callConstructorVec(e,t):s==="mat2x2"||s==="mat2x3"||s==="mat2x4"||s==="mat3x2"||s==="mat3x3"||s==="mat3x4"||s==="mat4x2"||s==="mat4x3"||s==="mat4x4"||s==="mat2x2f"||s==="mat2x3f"||s==="mat2x4f"||s==="mat3x2f"||s==="mat3x3f"||s==="mat3x4f"||s==="mat4x2f"||s==="mat4x3f"||s==="mat4x4f"||s==="mat2x2h"||s==="mat2x3h"||s==="mat2x4h"||s==="mat3x2h"||s==="mat3x3h"||s==="mat3x4h"||s==="mat4x2h"||s==="mat4x3h"||s==="mat4x4h"?this._callConstructorMatrix(e,t):e.value}_evalVariable(e,t){const n=t.getVariableValue(e.name);return n===null?n:n.getSubData(this,e.postfix,t)}_maxFormatTypeInfo(e){let t=e[0];if(t.name==="f32")return t;for(let n=1;n<e.length;++n){const s=fe._priority.get(t.name);fe._priority.get(e[n].name)<s&&(t=e[n])}return t.name==="x32"?this.getTypeInfo("i32"):t}_evalUnaryOp(e,t){const n=this.evalExpression(e.right,t);if(e.operator==="&")return new je(n);if(e.operator==="*")return n instanceof je?n.reference.getSubData(this,e.postfix,t):(console.error(`Invalid dereference. Line ${e.line}`),null);const s=n instanceof m?n.value:n instanceof d?Array.from(n.data):null;switch(e.operator){case"+":{if(F(s)){const o=s.map((l,c)=>+l);return new d(o,n.typeInfo)}const i=s,r=this._maxFormatTypeInfo([n.typeInfo,n.typeInfo]);return new m(+i,r)}case"-":{if(F(s)){const o=s.map((l,c)=>-l);return new d(o,n.typeInfo)}const i=s,r=this._maxFormatTypeInfo([n.typeInfo,n.typeInfo]);return new m(-i,r)}case"!":{if(F(s)){const o=s.map((l,c)=>l?0:1);return new d(o,n.typeInfo)}const i=s,r=this._maxFormatTypeInfo([n.typeInfo,n.typeInfo]);return new m(i?0:1,r)}case"~":{if(F(s)){const o=s.map((l,c)=>~l);return new d(o,n.typeInfo)}const i=s,r=this._maxFormatTypeInfo([n.typeInfo,n.typeInfo]);return new m(~i,r)}}return console.error(`Invalid unary operator ${e.operator}. Line ${e.line}`),null}_evalBinaryOp(e,t){const n=this.evalExpression(e.left,t),s=this.evalExpression(e.right,t),i=n instanceof m?n.value:n instanceof d||n instanceof D?Array.from(n.data):null,r=s instanceof m?s.value:s instanceof d||s instanceof D?Array.from(s.data):null;switch(e.operator){case"+":{if(F(i)&&F(r)){const u=i,f=r;if(u.length!==f.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const p=u.map((x,I)=>x+f[I]);return new d(p,n.typeInfo)}if(F(i)){const u=r,f=i.map((p,x)=>p+u);return new d(f,n.typeInfo)}if(F(r)){const u=i,f=r.map((p,x)=>u+p);return new d(f,s.typeInfo)}const o=i,l=r,c=this._maxFormatTypeInfo([n.typeInfo,s.typeInfo]);return new m(o+l,c)}case"-":{if(F(i)&&F(r)){const u=i,f=r;if(u.length!==f.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const p=u.map((x,I)=>x-f[I]);return new d(p,n.typeInfo)}if(F(i)){const u=r,f=i.map((p,x)=>p-u);return new d(f,n.typeInfo)}if(F(r)){const u=i,f=r.map((p,x)=>u-p);return new d(f,s.typeInfo)}const o=i,l=r,c=this._maxFormatTypeInfo([n.typeInfo,s.typeInfo]);return new m(o-l,c)}case"*":{if(F(i)&&F(r)){const u=i,f=r;if(n instanceof D&&s instanceof D){const p=function(E,M,R,T){if(he[M.name]===void 0||he[T.name]===void 0)return null;const B=he[M.name][0],V=he[M.name][1],z=he[T.name][0];if(B!==he[T.name][1])return null;const se=new Array(z*V);for(let ne=0;ne<V;ne++)for(let X=0;X<z;X++){let Ie=0;for(let Te=0;Te<B;Te++)Ie+=E[Te*V+ne]*R[X*B+Te];se[ne*z+X]=Ie}return se}(u,n.typeInfo,f,s.typeInfo);if(p===null)return console.error(`Matrix multiplication failed. Line ${e.line}.`),null;const x=he[s.typeInfo.name][0],I=he[n.typeInfo.name][1],L=this.getTypeInfo(`mat${x}x${I}f`);return new D(p,L)}if(n instanceof D&&s instanceof d){const p=function(x,I,L,E){if(he[I.name]===void 0||tn[E.name]===void 0)return null;const M=he[I.name][0],R=he[I.name][1];if(M!==L.length)return null;const T=new Array(R);for(let B=0;B<R;B++){let V=0;for(let z=0;z<M;z++)V+=x[z*R+B]*L[z];T[B]=V}return T}(u,n.typeInfo,f,s.typeInfo);return p===null?(console.error(`Matrix vector multiplication failed. Line ${e.line}.`),null):new d(p,s.typeInfo)}if(n instanceof d&&s instanceof D){const p=function(x,I,L,E){if(tn[I.name]===void 0||he[E.name]===void 0)return null;const M=he[E.name][0],R=he[E.name][1];if(R!==x.length)return null;const T=[];for(let B=0;B<M;B++){let V=0;for(let z=0;z<R;z++)V+=x[z]*L[z*M+B];T[B]=V}return T}(u,n.typeInfo,f,s.typeInfo);return p===null?(console.error(`Matrix vector multiplication failed. Line ${e.line}.`),null):new d(p,n.typeInfo)}{if(u.length!==f.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const p=u.map((x,I)=>x*f[I]);return new d(p,n.typeInfo)}}if(F(i)){const u=r,f=i.map((p,x)=>p*u);return n instanceof D?new D(f,n.typeInfo):new d(f,n.typeInfo)}if(F(r)){const u=i,f=r.map((p,x)=>u*p);return s instanceof D?new D(f,s.typeInfo):new d(f,s.typeInfo)}const o=i,l=r,c=this._maxFormatTypeInfo([n.typeInfo,s.typeInfo]);return new m(o*l,c)}case"%":{if(F(i)&&F(r)){const u=i,f=r;if(u.length!==f.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const p=u.map((x,I)=>x%f[I]);return new d(p,n.typeInfo)}if(F(i)){const u=r,f=i.map((p,x)=>p%u);return new d(f,n.typeInfo)}if(F(r)){const u=i,f=r.map((p,x)=>u%p);return new d(f,s.typeInfo)}const o=i,l=r,c=this._maxFormatTypeInfo([n.typeInfo,s.typeInfo]);return new m(o%l,c)}case"/":{if(F(i)&&F(r)){const u=i,f=r;if(u.length!==f.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const p=u.map((x,I)=>x/f[I]);return new d(p,n.typeInfo)}if(F(i)){const u=r,f=i.map((p,x)=>p/u);return new d(f,n.typeInfo)}if(F(r)){const u=i,f=r.map((p,x)=>u/p);return new d(f,s.typeInfo)}const o=i,l=r,c=this._maxFormatTypeInfo([n.typeInfo,s.typeInfo]);return new m(o/l,c)}case"&":{if(F(i)&&F(r)){const u=i,f=r;if(u.length!==f.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const p=u.map((x,I)=>x&f[I]);return new d(p,n.typeInfo)}if(F(i)){const u=r,f=i.map((p,x)=>p&u);return new d(f,n.typeInfo)}if(F(r)){const u=i,f=r.map((p,x)=>u&p);return new d(f,s.typeInfo)}const o=i,l=r,c=this._maxFormatTypeInfo([n.typeInfo,s.typeInfo]);return new m(o&l,c)}case"|":{if(F(i)&&F(r)){const u=i,f=r;if(u.length!==f.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const p=u.map((x,I)=>x|f[I]);return new d(p,n.typeInfo)}if(F(i)){const u=r,f=i.map((p,x)=>p|u);return new d(f,n.typeInfo)}if(F(r)){const u=i,f=r.map((p,x)=>u|p);return new d(f,s.typeInfo)}const o=i,l=r,c=this._maxFormatTypeInfo([n.typeInfo,s.typeInfo]);return new m(o|l,c)}case"^":{if(F(i)&&F(r)){const u=i,f=r;if(u.length!==f.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const p=u.map((x,I)=>x^f[I]);return new d(p,n.typeInfo)}if(F(i)){const u=r,f=i.map((p,x)=>p^u);return new d(f,n.typeInfo)}if(F(r)){const u=i,f=r.map((p,x)=>u^p);return new d(f,s.typeInfo)}const o=i,l=r,c=this._maxFormatTypeInfo([n.typeInfo,s.typeInfo]);return new m(o^l,c)}case"<<":{if(F(i)&&F(r)){const u=i,f=r;if(u.length!==f.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const p=u.map((x,I)=>x<<f[I]);return new d(p,n.typeInfo)}if(F(i)){const u=r,f=i.map((p,x)=>p<<u);return new d(f,n.typeInfo)}if(F(r)){const u=i,f=r.map((p,x)=>u<<p);return new d(f,s.typeInfo)}const o=i,l=r,c=this._maxFormatTypeInfo([n.typeInfo,s.typeInfo]);return new m(o<<l,c)}case">>":{if(F(i)&&F(r)){const u=i,f=r;if(u.length!==f.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const p=u.map((x,I)=>x>>f[I]);return new d(p,n.typeInfo)}if(F(i)){const u=r,f=i.map((p,x)=>p>>u);return new d(f,n.typeInfo)}if(F(r)){const u=i,f=r.map((p,x)=>u>>p);return new d(f,s.typeInfo)}const o=i,l=r,c=this._maxFormatTypeInfo([n.typeInfo,s.typeInfo]);return new m(o>>l,c)}case">":if(F(i)&&F(r)){const o=i,l=r;if(o.length!==l.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const c=o.map((u,f)=>u>l[f]?1:0);return new d(c,n.typeInfo)}if(F(i)){const o=r,l=i.map((c,u)=>c>o?1:0);return new d(l,n.typeInfo)}if(F(r)){const o=i,l=r.map((c,u)=>o>c?1:0);return new d(l,s.typeInfo)}return new m(i>r?1:0,this.getTypeInfo("bool"));case"<":if(F(i)&&F(r)){const o=i,l=r;if(o.length!==l.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const c=o.map((u,f)=>u<l[f]?1:0);return new d(c,n.typeInfo)}if(F(i)){const o=r,l=i.map((c,u)=>c<o?1:0);return new d(l,n.typeInfo)}if(F(r)){const o=i,l=r.map((c,u)=>o<c?1:0);return new d(l,s.typeInfo)}return new m(i<r?1:0,this.getTypeInfo("bool"));case"==":if(F(i)&&F(r)){const o=i,l=r;if(o.length!==l.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const c=o.map((u,f)=>u===l[f]?1:0);return new d(c,n.typeInfo)}if(F(i)){const o=r,l=i.map((c,u)=>c==o?1:0);return new d(l,n.typeInfo)}if(F(r)){const o=i,l=r.map((c,u)=>o==c?1:0);return new d(l,s.typeInfo)}return new m(i===r?1:0,this.getTypeInfo("bool"));case"!=":if(F(i)&&F(r)){const o=i,l=r;if(o.length!==l.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const c=o.map((u,f)=>u!==l[f]?1:0);return new d(c,n.typeInfo)}if(F(i)){const o=r,l=i.map((c,u)=>c!==o?1:0);return new d(l,n.typeInfo)}if(F(r)){const o=i,l=r.map((c,u)=>o!==c?1:0);return new d(l,s.typeInfo)}return new m(i!==r?1:0,this.getTypeInfo("bool"));case">=":if(F(i)&&F(r)){const o=i,l=r;if(o.length!==l.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const c=o.map((u,f)=>u>=l[f]?1:0);return new d(c,n.typeInfo)}if(F(i)){const o=r,l=i.map((c,u)=>c>=o?1:0);return new d(l,n.typeInfo)}if(F(r)){const o=i,l=r.map((c,u)=>o>=c?1:0);return new d(l,s.typeInfo)}return new m(i>=r?1:0,this.getTypeInfo("bool"));case"<=":if(F(i)&&F(r)){const o=i,l=r;if(o.length!==l.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const c=o.map((u,f)=>u<=l[f]?1:0);return new d(c,n.typeInfo)}if(F(i)){const o=r,l=i.map((c,u)=>c<=o?1:0);return new d(l,n.typeInfo)}if(F(r)){const o=i,l=r.map((c,u)=>o<=c?1:0);return new d(l,s.typeInfo)}return new m(i<=r?1:0,this.getTypeInfo("bool"));case"&&":if(F(i)&&F(r)){const o=i,l=r;if(o.length!==l.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const c=o.map((u,f)=>u&&l[f]?1:0);return new d(c,n.typeInfo)}if(F(i)){const o=r,l=i.map((c,u)=>c&&o?1:0);return new d(l,n.typeInfo)}if(F(r)){const o=i,l=r.map((c,u)=>o&&c?1:0);return new d(l,s.typeInfo)}return new m(i&&r?1:0,this.getTypeInfo("bool"));case"||":if(F(i)&&F(r)){const o=i,l=r;if(o.length!==l.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const c=o.map((u,f)=>u||l[f]?1:0);return new d(c,n.typeInfo)}if(F(i)){const o=r,l=i.map((c,u)=>c||o?1:0);return new d(l,n.typeInfo)}if(F(r)){const o=i,l=r.map((c,u)=>o||c?1:0);return new d(l,s.typeInfo)}return new m(i||r?1:0,this.getTypeInfo("bool"))}return console.error(`Unknown operator ${e.operator}. Line ${e.line}`),null}_evalCall(e,t){if(e.cachedReturnValue!==null)return e.cachedReturnValue;const n=t.clone();n.currentFunctionName=e.name;const s=t.getFunction(e.name);if(!s)return e.isBuiltin?this._callBuiltinFunction(e,n):this.getTypeInfo(e.name)?this._evalCreate(e,t):(console.error(`Unknown function "${e.name}". Line ${e.line}`),null);for(let i=0;i<s.node.args.length;++i){const r=s.node.args[i],o=this.evalExpression(e.args[i],n);n.createVariable(r.name,o,r)}return this._execStatements(s.node.body,n)}_callBuiltinFunction(e,t){switch(e.name){case"all":return this.builtins.All(e,t);case"any":return this.builtins.Any(e,t);case"select":return this.builtins.Select(e,t);case"arrayLength":return this.builtins.ArrayLength(e,t);case"abs":return this.builtins.Abs(e,t);case"acos":return this.builtins.Acos(e,t);case"acosh":return this.builtins.Acosh(e,t);case"asin":return this.builtins.Asin(e,t);case"asinh":return this.builtins.Asinh(e,t);case"atan":return this.builtins.Atan(e,t);case"atanh":return this.builtins.Atanh(e,t);case"atan2":return this.builtins.Atan2(e,t);case"ceil":return this.builtins.Ceil(e,t);case"clamp":return this.builtins.Clamp(e,t);case"cos":return this.builtins.Cos(e,t);case"cosh":return this.builtins.Cosh(e,t);case"countLeadingZeros":return this.builtins.CountLeadingZeros(e,t);case"countOneBits":return this.builtins.CountOneBits(e,t);case"countTrailingZeros":return this.builtins.CountTrailingZeros(e,t);case"cross":return this.builtins.Cross(e,t);case"degrees":return this.builtins.Degrees(e,t);case"determinant":return this.builtins.Determinant(e,t);case"distance":return this.builtins.Distance(e,t);case"dot":return this.builtins.Dot(e,t);case"dot4U8Packed":return this.builtins.Dot4U8Packed(e,t);case"dot4I8Packed":return this.builtins.Dot4I8Packed(e,t);case"exp":return this.builtins.Exp(e,t);case"exp2":return this.builtins.Exp2(e,t);case"extractBits":return this.builtins.ExtractBits(e,t);case"faceForward":return this.builtins.FaceForward(e,t);case"firstLeadingBit":return this.builtins.FirstLeadingBit(e,t);case"firstTrailingBit":return this.builtins.FirstTrailingBit(e,t);case"floor":return this.builtins.Floor(e,t);case"fma":return this.builtins.Fma(e,t);case"fract":return this.builtins.Fract(e,t);case"frexp":return this.builtins.Frexp(e,t);case"insertBits":return this.builtins.InsertBits(e,t);case"inverseSqrt":return this.builtins.InverseSqrt(e,t);case"ldexp":return this.builtins.Ldexp(e,t);case"length":return this.builtins.Length(e,t);case"log":return this.builtins.Log(e,t);case"log2":return this.builtins.Log2(e,t);case"max":return this.builtins.Max(e,t);case"min":return this.builtins.Min(e,t);case"mix":return this.builtins.Mix(e,t);case"modf":return this.builtins.Modf(e,t);case"normalize":return this.builtins.Normalize(e,t);case"pow":return this.builtins.Pow(e,t);case"quantizeToF16":return this.builtins.QuantizeToF16(e,t);case"radians":return this.builtins.Radians(e,t);case"reflect":return this.builtins.Reflect(e,t);case"refract":return this.builtins.Refract(e,t);case"reverseBits":return this.builtins.ReverseBits(e,t);case"round":return this.builtins.Round(e,t);case"saturate":return this.builtins.Saturate(e,t);case"sign":return this.builtins.Sign(e,t);case"sin":return this.builtins.Sin(e,t);case"sinh":return this.builtins.Sinh(e,t);case"smoothStep":return this.builtins.SmoothStep(e,t);case"sqrt":return this.builtins.Sqrt(e,t);case"step":return this.builtins.Step(e,t);case"tan":return this.builtins.Tan(e,t);case"tanh":return this.builtins.Tanh(e,t);case"transpose":return this.builtins.Transpose(e,t);case"trunc":return this.builtins.Trunc(e,t);case"dpdx":return this.builtins.Dpdx(e,t);case"dpdxCoarse":return this.builtins.DpdxCoarse(e,t);case"dpdxFine":return this.builtins.DpdxFine(e,t);case"dpdy":return this.builtins.Dpdy(e,t);case"dpdyCoarse":return this.builtins.DpdyCoarse(e,t);case"dpdyFine":return this.builtins.DpdyFine(e,t);case"fwidth":return this.builtins.Fwidth(e,t);case"fwidthCoarse":return this.builtins.FwidthCoarse(e,t);case"fwidthFine":return this.builtins.FwidthFine(e,t);case"textureDimensions":return this.builtins.TextureDimensions(e,t);case"textureGather":return this.builtins.TextureGather(e,t);case"textureGatherCompare":return this.builtins.TextureGatherCompare(e,t);case"textureLoad":return this.builtins.TextureLoad(e,t);case"textureNumLayers":return this.builtins.TextureNumLayers(e,t);case"textureNumLevels":return this.builtins.TextureNumLevels(e,t);case"textureNumSamples":return this.builtins.TextureNumSamples(e,t);case"textureSample":return this.builtins.TextureSample(e,t);case"textureSampleBias":return this.builtins.TextureSampleBias(e,t);case"textureSampleCompare":return this.builtins.TextureSampleCompare(e,t);case"textureSampleCompareLevel":return this.builtins.TextureSampleCompareLevel(e,t);case"textureSampleGrad":return this.builtins.TextureSampleGrad(e,t);case"textureSampleLevel":return this.builtins.TextureSampleLevel(e,t);case"textureSampleBaseClampToEdge":return this.builtins.TextureSampleBaseClampToEdge(e,t);case"textureStore":return this.builtins.TextureStore(e,t);case"atomicLoad":return this.builtins.AtomicLoad(e,t);case"atomicStore":return this.builtins.AtomicStore(e,t);case"atomicAdd":return this.builtins.AtomicAdd(e,t);case"atomicSub":return this.builtins.AtomicSub(e,t);case"atomicMax":return this.builtins.AtomicMax(e,t);case"atomicMin":return this.builtins.AtomicMin(e,t);case"atomicAnd":return this.builtins.AtomicAnd(e,t);case"atomicOr":return this.builtins.AtomicOr(e,t);case"atomicXor":return this.builtins.AtomicXor(e,t);case"atomicExchange":return this.builtins.AtomicExchange(e,t);case"atomicCompareExchangeWeak":return this.builtins.AtomicCompareExchangeWeak(e,t);case"pack4x8snorm":return this.builtins.Pack4x8snorm(e,t);case"pack4x8unorm":return this.builtins.Pack4x8unorm(e,t);case"pack4xI8":return this.builtins.Pack4xI8(e,t);case"pack4xU8":return this.builtins.Pack4xU8(e,t);case"pack4x8Clamp":return this.builtins.Pack4x8Clamp(e,t);case"pack4xU8Clamp":return this.builtins.Pack4xU8Clamp(e,t);case"pack2x16snorm":return this.builtins.Pack2x16snorm(e,t);case"pack2x16unorm":return this.builtins.Pack2x16unorm(e,t);case"pack2x16float":return this.builtins.Pack2x16float(e,t);case"unpack4x8snorm":return this.builtins.Unpack4x8snorm(e,t);case"unpack4x8unorm":return this.builtins.Unpack4x8unorm(e,t);case"unpack4xI8":return this.builtins.Unpack4xI8(e,t);case"unpack4xU8":return this.builtins.Unpack4xU8(e,t);case"unpack2x16snorm":return this.builtins.Unpack2x16snorm(e,t);case"unpack2x16unorm":return this.builtins.Unpack2x16unorm(e,t);case"unpack2x16float":return this.builtins.Unpack2x16float(e,t);case"storageBarrier":return this.builtins.StorageBarrier(e,t);case"textureBarrier":return this.builtins.TextureBarrier(e,t);case"workgroupBarrier":return this.builtins.WorkgroupBarrier(e,t);case"workgroupUniformLoad":return this.builtins.WorkgroupUniformLoad(e,t);case"subgroupAdd":return this.builtins.SubgroupAdd(e,t);case"subgroupExclusiveAdd":return this.builtins.SubgroupExclusiveAdd(e,t);case"subgroupInclusiveAdd":return this.builtins.SubgroupInclusiveAdd(e,t);case"subgroupAll":return this.builtins.SubgroupAll(e,t);case"subgroupAnd":return this.builtins.SubgroupAnd(e,t);case"subgroupAny":return this.builtins.SubgroupAny(e,t);case"subgroupBallot":return this.builtins.SubgroupBallot(e,t);case"subgroupBroadcast":return this.builtins.SubgroupBroadcast(e,t);case"subgroupBroadcastFirst":return this.builtins.SubgroupBroadcastFirst(e,t);case"subgroupElect":return this.builtins.SubgroupElect(e,t);case"subgroupMax":return this.builtins.SubgroupMax(e,t);case"subgroupMin":return this.builtins.SubgroupMin(e,t);case"subgroupMul":return this.builtins.SubgroupMul(e,t);case"subgroupExclusiveMul":return this.builtins.SubgroupExclusiveMul(e,t);case"subgroupInclusiveMul":return this.builtins.SubgroupInclusiveMul(e,t);case"subgroupOr":return this.builtins.SubgroupOr(e,t);case"subgroupShuffle":return this.builtins.SubgroupShuffle(e,t);case"subgroupShuffleDown":return this.builtins.SubgroupShuffleDown(e,t);case"subgroupShuffleUp":return this.builtins.SubgroupShuffleUp(e,t);case"subgroupShuffleXor":return this.builtins.SubgroupShuffleXor(e,t);case"subgroupXor":return this.builtins.SubgroupXor(e,t);case"quadBroadcast":return this.builtins.QuadBroadcast(e,t);case"quadSwapDiagonal":return this.builtins.QuadSwapDiagonal(e,t);case"quadSwapX":return this.builtins.QuadSwapX(e,t);case"quadSwapY":return this.builtins.QuadSwapY(e,t)}const n=t.getFunction(e.name);if(n){const s=t.clone();for(let i=0;i<n.node.args.length;++i){const r=n.node.args[i],o=this.evalExpression(e.args[i],s);s.setVariable(r.name,o,r)}return this._execStatements(n.node.body,s)}return null}_callConstructorValue(e,t){if(!e.args||e.args.length===0)return new m(0,this.getTypeInfo(e.type));const n=this.evalExpression(e.args[0],t);return n.typeInfo=this.getTypeInfo(e.type),n.getSubData(this,e.postfix,t).clone()}_callConstructorVec(e,t){const n=this.getTypeInfo(e.type),s=e.type.getTypeName(),i=tn[s];if(i===void 0)return console.error(`Invalid vec constructor ${s}. Line ${e.line}`),null;const r=[];if(e instanceof oe)if(e.isVector){const o=e.vectorValue;for(const l of o)r.push(l)}else r.push(e.scalarValue);else if(e.args)for(const o of e.args){const l=this.evalExpression(o,t);if(l instanceof d){const c=l.data;for(let u=0;u<c.length;++u){let f=c[u];r.push(f)}}else if(l instanceof m){let c=l.value;r.push(c)}}if(e.type instanceof b&&e.type.format===null&&(e.type.format=b.f32),r.length===0){const o=new Array(i).fill(0);return new d(o,n).getSubData(this,e.postfix,t)}if(r.length===1)for(;r.length<i;)r.push(r[0]);return r.length<i?(console.error(`Invalid vec constructor. Line ${e.line}`),null):new d(r.length>i?r.slice(0,i):r,n).getSubData(this,e.postfix,t)}_callConstructorMatrix(e,t){const n=this.getTypeInfo(e.type),s=e.type.getTypeName(),i=he[s];if(i===void 0)return console.error(`Invalid matrix constructor ${s}. Line ${e.line}`),null;const r=[];if(e instanceof oe)if(e.isVector){const o=e.vectorValue;for(const l of o)r.push(l)}else r.push(e.scalarValue);else if(e.args)for(const o of e.args){const l=this.evalExpression(o,t);l instanceof d?r.push(...l.data):l instanceof m?r.push(l.value):l instanceof D&&r.push(...l.data)}if(n instanceof We&&n.format===null&&(n.format=this.getTypeInfo("f32")),r.length===0){const o=new Array(i[2]).fill(0);return new D(o,n).getSubData(this,e.postfix,t)}return r.length!==i[2]?(console.error(`Invalid matrix constructor. Line ${e.line}`),null):new D(r,n).getSubData(this,e.postfix,t)}}fe._breakObj=new _e(new ye("BREAK",null),null),fe._continueObj=new _e(new ye("CONTINUE",null),null),fe._priority=new Map([["f32",0],["f16",1],["u32",2],["i32",3],["x32",3]]);class _o{constructor(){this.constants=new Map,this.aliases=new Map,this.structs=new Map}}class xo{constructor(){this._tokens=[],this._current=0,this._currentLine=1,this._deferArrayCountEval=[],this._currentLoop=[],this._context=new _o,this._exec=new fe,this._forwardTypeCount=0}parse(e){this._initialize(e),this._deferArrayCountEval.length=0;const t=[];for(;!this._isAtEnd();){const n=this._global_decl_or_directive();if(!n)break;t.push(n)}if(this._deferArrayCountEval.length>0){for(const n of this._deferArrayCountEval){const s=n.arrayType,i=n.countNode;if(i instanceof me){const r=i.name,o=this._context.constants.get(r);if(o)try{const l=o.constEvaluate(this._exec);s.count=l}catch{}}}this._deferArrayCountEval.length=0}if(this._forwardTypeCount>0)for(const n of t)n.search(s=>{s instanceof os||s instanceof en?s.type=this._forwardType(s.type):s instanceof lt?s.format=this._forwardType(s.format):s instanceof Oe||s instanceof at||s instanceof Tt?s.type=this._forwardType(s.type):s instanceof ut?s.returnType=this._forwardType(s.returnType):s instanceof rs&&(s.type=this._forwardType(s.type))});return t}_forwardType(e){if(e instanceof is){const t=this._getType(e.name);if(t)return t}else e instanceof en?e.type=this._forwardType(e.type):e instanceof lt&&(e.format=this._forwardType(e.format));return e}_initialize(e){if(e)if(typeof e=="string"){const t=new ao(e);this._tokens=t.scanTokens()}else this._tokens=e;else this._tokens=[];this._current=0}_updateNode(e,t){return e.line=t??this._currentLine,e}_error(e,t){return{token:e,message:t,toString:()=>`${t}`}}_isAtEnd(){return this._current>=this._tokens.length||this._peek().type==h.eof}_match(e){if(e instanceof _)return!!this._check(e)&&(this._advance(),!0);for(let t=0,n=e.length;t<n;++t){const s=e[t];if(this._check(s))return this._advance(),!0}return!1}_consume(e,t){if(this._check(e))return this._advance();throw this._error(this._peek(),`${t}. Line:${this._currentLine}`)}_check(e){if(this._isAtEnd())return!1;const t=this._peek();if(e instanceof Array){const n=t.type;let s=!1;for(const i of e){if(n===i)return!0;i===h.tokens.name&&(s=!0)}if(s){const i=h.tokens.name.rule.exec(t.lexeme);if(i&&i.index==0&&i[0]==t.lexeme)return!0}return!1}if(t.type===e)return!0;if(e===h.tokens.name){const n=h.tokens.name.rule.exec(t.lexeme);return n&&n.index==0&&n[0]==t.lexeme}return!1}_advance(){var e,t;return this._currentLine=(t=(e=this._peek())===null||e===void 0?void 0:e.line)!==null&&t!==void 0?t:-1,this._isAtEnd()||this._current++,this._previous()}_peek(){return this._tokens[this._current]}_previous(){return this._tokens[this._current-1]}_global_decl_or_directive(){for(;this._match(h.tokens.semicolon)&&!this._isAtEnd(););if(this._match(h.keywords.alias)){const t=this._type_alias();return this._consume(h.tokens.semicolon,"Expected ';'"),this._exec.reflection.updateAST([t]),t}if(this._match(h.keywords.diagnostic)){const t=this._diagnostic();return this._consume(h.tokens.semicolon,"Expected ';'"),this._exec.reflection.updateAST([t]),t}if(this._match(h.keywords.requires)){const t=this._requires_directive();return this._consume(h.tokens.semicolon,"Expected ';'"),this._exec.reflection.updateAST([t]),t}if(this._match(h.keywords.enable)){const t=this._enable_directive();return this._consume(h.tokens.semicolon,"Expected ';'"),this._exec.reflection.updateAST([t]),t}const e=this._attribute();if(this._check(h.keywords.var)){const t=this._global_variable_decl();return t!=null&&(t.attributes=e),this._consume(h.tokens.semicolon,"Expected ';'."),this._exec.reflection.updateAST([t]),t}if(this._check(h.keywords.override)){const t=this._override_variable_decl();return t!=null&&(t.attributes=e),this._consume(h.tokens.semicolon,"Expected ';'."),this._exec.reflection.updateAST([t]),t}if(this._check(h.keywords.let)){const t=this._global_let_decl();return t!=null&&(t.attributes=e),this._consume(h.tokens.semicolon,"Expected ';'."),this._exec.reflection.updateAST([t]),t}if(this._check(h.keywords.const)){const t=this._global_const_decl();return t!=null&&(t.attributes=e),this._consume(h.tokens.semicolon,"Expected ';'."),this._exec.reflection.updateAST([t]),t}if(this._check(h.keywords.struct)){const t=this._struct_decl();return t!=null&&(t.attributes=e),this._exec.reflection.updateAST([t]),t}if(this._check(h.keywords.fn)){const t=this._function_decl();return t!=null&&(t.attributes=e),this._exec.reflection.updateAST([t]),t}return null}_function_decl(){if(!this._match(h.keywords.fn))return null;const e=this._currentLine,t=this._consume(h.tokens.ident,"Expected function name.").toString();this._consume(h.tokens.paren_left,"Expected '(' for function arguments.");const n=[];if(!this._check(h.tokens.paren_right))do{if(this._check(h.tokens.paren_right))break;const o=this._attribute(),l=this._consume(h.tokens.name,"Expected argument name.").toString();this._consume(h.tokens.colon,"Expected ':' for argument type.");const c=this._attribute(),u=this._type_decl();u!=null&&(u.attributes=c,n.push(this._updateNode(new rs(l,u,o))))}while(this._match(h.tokens.comma));this._consume(h.tokens.paren_right,"Expected ')' after function arguments.");let s=null;if(this._match(h.tokens.arrow)){const o=this._attribute();s=this._type_decl(),s!=null&&(s.attributes=o)}const i=this._compound_statement(),r=this._currentLine;return this._updateNode(new ut(t,n,s,i,e,r),e)}_compound_statement(){const e=[];for(this._consume(h.tokens.brace_left,"Expected '{' for block.");!this._check(h.tokens.brace_right);){const t=this._statement();t!==null&&e.push(t)}return this._consume(h.tokens.brace_right,"Expected '}' for block."),e}_statement(){for(;this._match(h.tokens.semicolon)&&!this._isAtEnd(););if(this._check(h.tokens.attr)&&this._attribute(),this._check(h.keywords.if))return this._if_statement();if(this._check(h.keywords.switch))return this._switch_statement();if(this._check(h.keywords.loop))return this._loop_statement();if(this._check(h.keywords.for))return this._for_statement();if(this._check(h.keywords.while))return this._while_statement();if(this._check(h.keywords.continuing))return this._continuing_statement();if(this._check(h.keywords.static_assert))return this._static_assert_statement();if(this._check(h.tokens.brace_left))return this._compound_statement();let e=null;if(this._check(h.keywords.return))e=this._return_statement();else if(this._check([h.keywords.var,h.keywords.let,h.keywords.const]))e=this._variable_statement();else if(this._match(h.keywords.discard))e=this._updateNode(new io);else if(this._match(h.keywords.break)){const t=this._updateNode(new gi);if(this._currentLoop.length>0){const n=this._currentLoop[this._currentLoop.length-1];t.loopId=n.id}e=t,this._check(h.keywords.if)&&(this._advance(),t.condition=this._optional_paren_expression())}else if(this._match(h.keywords.continue)){const t=this._updateNode(new mi);if(!(this._currentLoop.length>0))throw this._error(this._peek(),`Continue statement must be inside a loop. Line: ${t.line}`);{const n=this._currentLoop[this._currentLoop.length-1];t.loopId=n.id}e=t}else e=this._increment_decrement_statement()||this._func_call_statement()||this._assignment_statement();return e!=null&&this._consume(h.tokens.semicolon,"Expected ';' after statement."),e}_static_assert_statement(){if(!this._match(h.keywords.static_assert))return null;const e=this._currentLine,t=this._optional_paren_expression();return this._updateNode(new to(t),e)}_while_statement(){if(!this._match(h.keywords.while))return null;const e=this._updateNode(new oi(null,null));return this._currentLoop.push(e),e.condition=this._optional_paren_expression(),this._check(h.tokens.attr)&&this._attribute(),e.body=this._compound_statement(),this._currentLoop.pop(),e}_continuing_statement(){const e=this._currentLoop.length>0?this._currentLoop[this._currentLoop.length-1].id:-1;if(!this._match(h.keywords.continuing))return null;const t=this._currentLine,n=this._compound_statement();return this._updateNode(new yn(n,e),t)}_for_statement(){if(!this._match(h.keywords.for))return null;this._consume(h.tokens.paren_left,"Expected '('.");const e=this._updateNode(new ai(null,null,null,null));return this._currentLoop.push(e),e.init=this._check(h.tokens.semicolon)?null:this._for_init(),this._consume(h.tokens.semicolon,"Expected ';'."),e.condition=this._check(h.tokens.semicolon)?null:this._short_circuit_or_expression(),this._consume(h.tokens.semicolon,"Expected ';'."),e.increment=this._check(h.tokens.paren_right)?null:this._for_increment(),this._consume(h.tokens.paren_right,"Expected ')'."),this._check(h.tokens.attr)&&this._attribute(),e.body=this._compound_statement(),this._currentLoop.pop(),e}_for_init(){return this._variable_statement()||this._func_call_statement()||this._assignment_statement()}_for_increment(){return this._func_call_statement()||this._increment_decrement_statement()||this._assignment_statement()}_variable_statement(){if(this._check(h.keywords.var)){const e=this._variable_decl();if(e===null)throw this._error(this._peek(),"Variable declaration expected.");let t=null;return this._match(h.tokens.equal)&&(t=this._short_circuit_or_expression()),this._updateNode(new Oe(e.name,e.type,e.storage,e.access,t),e.line)}if(this._match(h.keywords.let)){const e=this._currentLine,t=this._consume(h.tokens.name,"Expected name for let.").toString();let n=null;if(this._match(h.tokens.colon)){const i=this._attribute();n=this._type_decl(),n!=null&&(n.attributes=i)}this._consume(h.tokens.equal,"Expected '=' for let.");const s=this._short_circuit_or_expression();return this._updateNode(new at(t,n,null,null,s),e)}if(this._match(h.keywords.const)){const e=this._currentLine,t=this._consume(h.tokens.name,"Expected name for const.").toString();let n=null;if(this._match(h.tokens.colon)){const i=this._attribute();n=this._type_decl(),n!=null&&(n.attributes=i)}this._consume(h.tokens.equal,"Expected '=' for const.");const s=this._short_circuit_or_expression();return n===null&&s instanceof oe&&(n=s.type),this._updateNode(new Tt(t,n,null,null,s),e)}return null}_increment_decrement_statement(){const e=this._current,t=this._unary_expression();if(t==null)return null;if(!this._check(h.increment_operators))return this._current=e,null;const n=this._consume(h.increment_operators,"Expected increment operator");return this._updateNode(new li(n.type===h.tokens.plus_plus?He.increment:He.decrement,t))}_assignment_statement(){let e=null;const t=this._currentLine;if(this._check(h.tokens.brace_right))return null;let n=this._match(h.tokens.underscore);if(n||(e=this._unary_expression()),!n&&e==null)return null;const s=this._consume(h.assignment_operators,"Expected assignment operator."),i=this._short_circuit_or_expression();return this._updateNode(new ci(it.parse(s.lexeme),e,i),t)}_func_call_statement(){if(!this._check(h.tokens.ident))return null;const e=this._currentLine,t=this._current,n=this._consume(h.tokens.ident,"Expected function name."),s=this._argument_expression_list();return s===null?(this._current=t,null):this._updateNode(new Mn(n.lexeme,s),e)}_loop_statement(){if(!this._match(h.keywords.loop))return null;this._check(h.tokens.attr)&&this._attribute(),this._consume(h.tokens.brace_left,"Expected '{' for loop.");const e=this._updateNode(new ui([],null));this._currentLoop.push(e);let t=this._statement();for(;t!==null;){if(Array.isArray(t))for(let n of t)e.body.push(n);else e.body.push(t);if(t instanceof yn){e.continuing=t;break}t=this._statement()}return this._currentLoop.pop(),this._consume(h.tokens.brace_right,"Expected '}' for loop."),e}_switch_statement(){if(!this._match(h.keywords.switch))return null;const e=this._updateNode(new fi(null,[]));if(this._currentLoop.push(e),e.condition=this._optional_paren_expression(),this._check(h.tokens.attr)&&this._attribute(),this._consume(h.tokens.brace_left,"Expected '{' for switch."),e.cases=this._switch_body(),e.cases==null||e.cases.length==0)throw this._error(this._previous(),"Expected 'case' or 'default'.");return this._consume(h.tokens.brace_right,"Expected '}' for switch."),this._currentLoop.pop(),e}_switch_body(){const e=[];let t=!1;for(;this._check([h.keywords.default,h.keywords.case]);){if(this._match(h.keywords.case)){const n=this._case_selectors();for(const i of n)if(i instanceof Pt){if(t)throw this._error(this._previous(),"Multiple default cases in switch statement.");t=!0;break}this._match(h.tokens.colon),this._check(h.tokens.attr)&&this._attribute(),this._consume(h.tokens.brace_left,"Exected '{' for switch case.");const s=this._case_body();this._consume(h.tokens.brace_right,"Exected '}' for switch case."),e.push(this._updateNode(new bi(n,s)))}if(this._match(h.keywords.default)){if(t)throw this._error(this._previous(),"Multiple default cases in switch statement.");this._match(h.tokens.colon),this._check(h.tokens.attr)&&this._attribute(),this._consume(h.tokens.brace_left,"Exected '{' for switch default.");const n=this._case_body();this._consume(h.tokens.brace_right,"Exected '}' for switch default."),e.push(this._updateNode(new wi(n)))}}return e}_case_selectors(){const e=[];for(this._match(h.keywords.default)?e.push(this._updateNode(new Pt)):e.push(this._shift_expression());this._match(h.tokens.comma);)this._match(h.keywords.default)?e.push(this._updateNode(new Pt)):e.push(this._shift_expression());return e}_case_body(){if(this._match(h.keywords.fallthrough))return this._consume(h.tokens.semicolon,"Expected ';'"),[];let e=this._statement();if(e==null)return[];e instanceof Array||(e=[e]);const t=this._case_body();return t.length==0?e:[...e,t[0]]}_if_statement(){if(!this._match(h.keywords.if))return null;const e=this._currentLine,t=this._optional_paren_expression();this._check(h.tokens.attr)&&this._attribute();const n=this._compound_statement();let s=[];this._match_elseif()&&(this._check(h.tokens.attr)&&this._attribute(),s=this._elseif_statement(s));let i=null;return this._match(h.keywords.else)&&(this._check(h.tokens.attr)&&this._attribute(),i=this._compound_statement()),this._updateNode(new hi(t,n,s,i),e)}_match_elseif(){return this._tokens[this._current].type===h.keywords.else&&this._tokens[this._current+1].type===h.keywords.if&&(this._advance(),this._advance(),!0)}_elseif_statement(e=[]){const t=this._optional_paren_expression(),n=this._compound_statement();return e.push(this._updateNode(new ro(t,n))),this._match_elseif()&&(this._check(h.tokens.attr)&&this._attribute(),this._elseif_statement(e)),e}_return_statement(){if(!this._match(h.keywords.return))return null;const e=this._short_circuit_or_expression();return this._updateNode(new di(e))}_short_circuit_or_expression(){let e=this._short_circuit_and_expr();for(;this._match(h.tokens.or_or);)e=this._updateNode(new be(this._previous().toString(),e,this._short_circuit_and_expr()));return e}_short_circuit_and_expr(){let e=this._inclusive_or_expression();for(;this._match(h.tokens.and_and);)e=this._updateNode(new be(this._previous().toString(),e,this._inclusive_or_expression()));return e}_inclusive_or_expression(){let e=this._exclusive_or_expression();for(;this._match(h.tokens.or);)e=this._updateNode(new be(this._previous().toString(),e,this._exclusive_or_expression()));return e}_exclusive_or_expression(){let e=this._and_expression();for(;this._match(h.tokens.xor);)e=this._updateNode(new be(this._previous().toString(),e,this._and_expression()));return e}_and_expression(){let e=this._equality_expression();for(;this._match(h.tokens.and);)e=this._updateNode(new be(this._previous().toString(),e,this._equality_expression()));return e}_equality_expression(){const e=this._relational_expression();return this._match([h.tokens.equal_equal,h.tokens.not_equal])?this._updateNode(new be(this._previous().toString(),e,this._relational_expression())):e}_relational_expression(){let e=this._shift_expression();for(;this._match([h.tokens.less_than,h.tokens.greater_than,h.tokens.less_than_equal,h.tokens.greater_than_equal]);)e=this._updateNode(new be(this._previous().toString(),e,this._shift_expression()));return e}_shift_expression(){let e=this._additive_expression();for(;this._match([h.tokens.shift_left,h.tokens.shift_right]);)e=this._updateNode(new be(this._previous().toString(),e,this._additive_expression()));return e}_additive_expression(){let e=this._multiplicative_expression();for(;this._match([h.tokens.plus,h.tokens.minus]);)e=this._updateNode(new be(this._previous().toString(),e,this._multiplicative_expression()));return e}_multiplicative_expression(){let e=this._unary_expression();for(;this._match([h.tokens.star,h.tokens.forward_slash,h.tokens.modulo]);)e=this._updateNode(new be(this._previous().toString(),e,this._unary_expression()));return e}_unary_expression(){return this._match([h.tokens.minus,h.tokens.bang,h.tokens.tilde,h.tokens.star,h.tokens.and])?this._updateNode(new re(this._previous().toString(),this._unary_expression())):this._singular_expression()}_singular_expression(){const e=this._primary_expression(),t=this._postfix_expression();return t&&(e.postfix=t),e}_postfix_expression(){if(this._match(h.tokens.bracket_left)){const e=this._short_circuit_or_expression();this._consume(h.tokens.bracket_right,"Expected ']'.");const t=this._updateNode(new Ke(e)),n=this._postfix_expression();return n&&(t.postfix=n),t}if(this._match(h.tokens.period)){const e=this._consume(h.tokens.name,"Expected member name."),t=this._postfix_expression(),n=this._updateNode(new Ge(e.lexeme));return t&&(n.postfix=t),n}return null}_getStruct(e){return this._context.aliases.has(e)?this._context.aliases.get(e).type:this._context.structs.has(e)?this._context.structs.get(e):null}_getType(e){const t=this._getStruct(e);if(t!==null)return t;switch(e){case"void":return P.void;case"bool":return P.bool;case"i32":return P.i32;case"u32":return P.u32;case"f32":return P.f32;case"f16":return P.f16;case"vec2f":return b.vec2f;case"vec3f":return b.vec3f;case"vec4f":return b.vec4f;case"vec2i":return b.vec2i;case"vec3i":return b.vec3i;case"vec4i":return b.vec4i;case"vec2u":return b.vec2u;case"vec3u":return b.vec3u;case"vec4u":return b.vec4u;case"vec2h":return b.vec2h;case"vec3h":return b.vec3h;case"vec4h":return b.vec4h;case"mat2x2f":return b.mat2x2f;case"mat2x3f":return b.mat2x3f;case"mat2x4f":return b.mat2x4f;case"mat3x2f":return b.mat3x2f;case"mat3x3f":return b.mat3x3f;case"mat3x4f":return b.mat3x4f;case"mat4x2f":return b.mat4x2f;case"mat4x3f":return b.mat4x3f;case"mat4x4f":return b.mat4x4f;case"mat2x2h":return b.mat2x2h;case"mat2x3h":return b.mat2x3h;case"mat2x4h":return b.mat2x4h;case"mat3x2h":return b.mat3x2h;case"mat3x3h":return b.mat3x3h;case"mat3x4h":return b.mat3x4h;case"mat4x2h":return b.mat4x2h;case"mat4x3h":return b.mat4x3h;case"mat4x4h":return b.mat4x4h;case"mat2x2i":return b.mat2x2i;case"mat2x3i":return b.mat2x3i;case"mat2x4i":return b.mat2x4i;case"mat3x2i":return b.mat3x2i;case"mat3x3i":return b.mat3x3i;case"mat3x4i":return b.mat3x4i;case"mat4x2i":return b.mat4x2i;case"mat4x3i":return b.mat4x3i;case"mat4x4i":return b.mat4x4i;case"mat2x2u":return b.mat2x2u;case"mat2x3u":return b.mat2x3u;case"mat2x4u":return b.mat2x4u;case"mat3x2u":return b.mat3x2u;case"mat3x3u":return b.mat3x3u;case"mat3x4u":return b.mat3x4u;case"mat4x2u":return b.mat4x2u;case"mat4x3u":return b.mat4x3u;case"mat4x4u":return b.mat4x4u}return null}_validateTypeRange(e,t){if(t.name==="i32"){if(e<-2147483648||e>2147483647)throw this._error(this._previous(),`Value out of range for i32: ${e}. Line: ${this._currentLine}.`)}else if(t.name==="u32"&&(e<0||e>4294967295))throw this._error(this._previous(),`Value out of range for u32: ${e}. Line: ${this._currentLine}.`)}_primary_expression(){if(this._match(h.tokens.ident)){const n=this._previous().toString();if(this._check(h.tokens.paren_left)){const s=this._argument_expression_list(),i=this._getType(n);return i!==null?this._updateNode(new Pe(i,s)):this._updateNode(new Fn(n,s))}if(this._context.constants.has(n)){const s=this._context.constants.get(n);return this._updateNode(new yi(n,s.value))}return this._updateNode(new me(n))}if(this._match(h.tokens.int_literal)){const n=this._previous().toString();let s=n.endsWith("i")||n.endsWith("i")?P.i32:n.endsWith("u")||n.endsWith("U")?P.u32:P.x32;const i=parseInt(n);return this._validateTypeRange(i,s),this._updateNode(new oe(new m(i,this._exec.getTypeInfo(s)),s))}if(this._match(h.tokens.uint_literal)){const n=parseInt(this._previous().toString());return this._validateTypeRange(n,P.u32),this._updateNode(new oe(new m(n,this._exec.getTypeInfo(P.u32)),P.u32))}if(this._match([h.tokens.decimal_float_literal,h.tokens.hex_float_literal])){let n=this._previous().toString(),s=n.endsWith("h");s&&(n=n.substring(0,n.length-1));const i=parseFloat(n);this._validateTypeRange(i,s?P.f16:P.f32);const r=s?P.f16:P.f32;return this._updateNode(new oe(new m(i,this._exec.getTypeInfo(r)),r))}if(this._match([h.keywords.true,h.keywords.false])){let n=this._previous().toString()===h.keywords.true.rule;return this._updateNode(new oe(new m(n?1:0,this._exec.getTypeInfo(P.bool)),P.bool))}if(this._check(h.tokens.paren_left))return this._paren_expression();if(this._match(h.keywords.bitcast)){this._consume(h.tokens.less_than,"Expected '<'.");const n=this._type_decl();this._consume(h.tokens.greater_than,"Expected '>'.");const s=this._paren_expression();return this._updateNode(new _i(n,s))}const e=this._type_decl(),t=this._argument_expression_list();return this._updateNode(new Pe(e,t))}_argument_expression_list(){if(!this._match(h.tokens.paren_left))return null;const e=[];do{if(this._check(h.tokens.paren_right))break;const t=this._short_circuit_or_expression();e.push(t)}while(this._match(h.tokens.comma));return this._consume(h.tokens.paren_right,"Expected ')' for agument list"),e}_optional_paren_expression(){this._match(h.tokens.paren_left);const e=this._short_circuit_or_expression();return this._match(h.tokens.paren_right),e}_paren_expression(){this._consume(h.tokens.paren_left,"Expected '('.");const e=this._short_circuit_or_expression();return this._consume(h.tokens.paren_right,"Expected ')'."),e}_struct_decl(){if(!this._match(h.keywords.struct))return null;const e=this._currentLine,t=this._consume(h.tokens.ident,"Expected name for struct.").toString();this._consume(h.tokens.brace_left,"Expected '{' for struct body.");const n=[];for(;!this._check(h.tokens.brace_right);){const r=this._attribute(),o=this._consume(h.tokens.name,"Expected variable name.").toString();this._consume(h.tokens.colon,"Expected ':' for struct member type.");const l=this._attribute(),c=this._type_decl();c!=null&&(c.attributes=l),this._check(h.tokens.brace_right)?this._match(h.tokens.comma):this._consume(h.tokens.comma,"Expected ',' for struct member."),n.push(this._updateNode(new os(o,c,r)))}this._consume(h.tokens.brace_right,"Expected '}' after struct body.");const s=this._currentLine,i=this._updateNode(new Se(t,n,e,s),e);return this._context.structs.set(t,i),i}_global_variable_decl(){const e=this._variable_decl();if(!e)return null;if(this._match(h.tokens.equal)){const t=this._const_expression();e.value=t}if(e.type!==null&&e.value instanceof oe){if(e.value.type.name!=="x32"&&e.type.getTypeName()!==e.value.type.getTypeName())throw this._error(this._peek(),`Invalid cast from ${e.value.type.name} to ${e.type.name}. Line:${this._currentLine}`);e.value.isScalar&&this._validateTypeRange(e.value.scalarValue,e.type),e.value.type=e.type}else e.type===null&&e.value instanceof oe&&(e.type=e.value.type.name==="x32"?P.i32:e.value.type,e.value.isScalar&&this._validateTypeRange(e.value.scalarValue,e.type));return e}_override_variable_decl(){const e=this._override_decl();return e&&this._match(h.tokens.equal)&&(e.value=this._const_expression()),e}_global_const_decl(){var e;if(!this._match(h.keywords.const))return null;const t=this._consume(h.tokens.name,"Expected variable name"),n=this._currentLine;let s=null;if(this._match(h.tokens.colon)){const l=this._attribute();s=this._type_decl(),s!=null&&(s.attributes=l)}let i=null;this._consume(h.tokens.equal,"const declarations require an assignment");const r=this._short_circuit_or_expression();try{let l=[P.f32],c=r.constEvaluate(this._exec,l);c instanceof m&&this._validateTypeRange(c.value,l[0]),l[0]instanceof b&&l[0].format===null&&c.typeInfo instanceof We&&c.typeInfo.format!==null&&(c.typeInfo.format.name==="f16"?l[0].format=P.f16:c.typeInfo.format.name==="f32"?l[0].format=P.f32:c.typeInfo.format.name==="i32"?l[0].format=P.i32:c.typeInfo.format.name==="u32"?l[0].format=P.u32:c.typeInfo.format.name==="bool"?l[0].format=P.bool:console.error(`TODO: impelement template format type ${c.typeInfo.format.name}`)),i=this._updateNode(new oe(c,l[0])),this._exec.context.setVariable(t.toString(),c)}catch{i=r}if(s!==null&&i instanceof oe){if(i.type.name!=="x32"&&s.getTypeName()!==i.type.getTypeName())throw this._error(this._peek(),`Invalid cast from ${i.type.name} to ${s.name}. Line:${this._currentLine}`);i.type=s,i.isScalar&&this._validateTypeRange(i.scalarValue,i.type)}else s===null&&i instanceof oe&&(s=(e=i?.type)!==null&&e!==void 0?e:P.f32,s===P.x32&&(s=P.i32));const o=this._updateNode(new Tt(t.toString(),s,"","",i),n);return this._context.constants.set(o.name,o),o}_global_let_decl(){if(!this._match(h.keywords.let))return null;const e=this._currentLine,t=this._consume(h.tokens.name,"Expected variable name");let n=null;if(this._match(h.tokens.colon)){const i=this._attribute();n=this._type_decl(),n!=null&&(n.attributes=i)}let s=null;if(this._match(h.tokens.equal)&&(s=this._const_expression()),n!==null&&s instanceof oe){if(s.type.name!=="x32"&&n.getTypeName()!==s.type.getTypeName())throw this._error(this._peek(),`Invalid cast from ${s.type.name} to ${n.name}. Line:${this._currentLine}`);s.type=n}else n===null&&s instanceof oe&&(n=s.type.name==="x32"?P.i32:s.type);return s instanceof oe&&s.isScalar&&this._validateTypeRange(s.scalarValue,n),this._updateNode(new at(t.toString(),n,"","",s),e)}_const_expression(){return this._short_circuit_or_expression()}_variable_decl(){if(!this._match(h.keywords.var))return null;const e=this._currentLine;let t="",n="";this._match(h.tokens.less_than)&&(t=this._consume(h.storage_class,"Expected storage_class.").toString(),this._match(h.tokens.comma)&&(n=this._consume(h.access_mode,"Expected access_mode.").toString()),this._consume(h.tokens.greater_than,"Expected '>'."));const s=this._consume(h.tokens.name,"Expected variable name");let i=null;if(this._match(h.tokens.colon)){const r=this._attribute();i=this._type_decl(),i!=null&&(i.attributes=r)}return this._updateNode(new Oe(s.toString(),i,t,n,null),e)}_override_decl(){if(!this._match(h.keywords.override))return null;const e=this._consume(h.tokens.name,"Expected variable name");let t=null;if(this._match(h.tokens.colon)){const n=this._attribute();t=this._type_decl(),t!=null&&(t.attributes=n)}return this._updateNode(new On(e.toString(),t,null))}_diagnostic(){this._consume(h.tokens.paren_left,"Expected '('");const e=this._consume(h.tokens.ident,"Expected severity control name.");this._consume(h.tokens.comma,"Expected ','");let t=this._consume(h.tokens.ident,"Expected diagnostic rule name.").toString();return this._match(h.tokens.period)&&(t+=`.${this._consume(h.tokens.ident,"Expected diagnostic message.").toString()}`),this._consume(h.tokens.paren_right,"Expected ')'"),this._updateNode(new pi(e.toString(),t))}_enable_directive(){const e=this._consume(h.tokens.ident,"identity expected.");return this._updateNode(new no(e.toString()))}_requires_directive(){const e=[this._consume(h.tokens.ident,"identity expected.").toString()];for(;this._match(h.tokens.comma);){const t=this._consume(h.tokens.ident,"identity expected.");e.push(t.toString())}return this._updateNode(new so(e))}_type_alias(){const e=this._consume(h.tokens.ident,"identity expected.");this._consume(h.tokens.equal,"Expected '=' for type alias.");let t=this._type_decl();if(t===null)throw this._error(this._peek(),"Expected Type for Alias.");this._context.aliases.has(t.name)&&(t=this._context.aliases.get(t.name).type);const n=this._updateNode(new Bn(e.toString(),t));return this._context.aliases.set(n.name,n),n}_type_decl(){if(this._check([h.tokens.ident,...h.texel_format,h.keywords.bool,h.keywords.f32,h.keywords.i32,h.keywords.u32])){const n=this._advance().toString();if(this._context.structs.has(n))return this._context.structs.get(n);if(this._context.aliases.has(n))return this._context.aliases.get(n).type;if(!this._getType(n)){const s=this._updateNode(new is(n));return this._forwardTypeCount++,s}return this._updateNode(new P(n))}let e=this._texture_sampler_types();if(e)return e;if(this._check(h.template_types)){let n=this._advance().toString(),s=null,i=null;return this._match(h.tokens.less_than)&&(s=this._type_decl(),i=null,this._match(h.tokens.comma)&&(i=this._consume(h.access_mode,"Expected access_mode for pointer").toString()),this._consume(h.tokens.greater_than,"Expected '>' for type.")),this._updateNode(new b(n,s,i))}if(this._match(h.keywords.ptr)){let n=this._previous().toString();this._consume(h.tokens.less_than,"Expected '<' for pointer.");const s=this._consume(h.storage_class,"Expected storage_class for pointer");this._consume(h.tokens.comma,"Expected ',' for pointer.");const i=this._type_decl();let r=null;return this._match(h.tokens.comma)&&(r=this._consume(h.access_mode,"Expected access_mode for pointer").toString()),this._consume(h.tokens.greater_than,"Expected '>' for pointer."),this._updateNode(new en(n,s.toString(),i,r))}const t=this._attribute();if(this._match(h.keywords.array)){let n=null,s=-1;const i=this._previous();let r=null;if(this._match(h.tokens.less_than)){n=this._type_decl(),this._context.aliases.has(n.name)&&(n=this._context.aliases.get(n.name).type);let l="";if(this._match(h.tokens.comma)){r=this._shift_expression();try{l=r.constEvaluate(this._exec).toString(),r=null}catch{l="1"}}this._consume(h.tokens.greater_than,"Expected '>' for array."),s=l?parseInt(l):0}const o=this._updateNode(new lt(i.toString(),t,n,s));return r&&this._deferArrayCountEval.push({arrayType:o,countNode:r}),o}return null}_texture_sampler_types(){if(this._match(h.sampler_type))return this._updateNode(new rt(this._previous().toString(),null,null));if(this._match(h.depth_texture_type))return this._updateNode(new rt(this._previous().toString(),null,null));if(this._match(h.sampled_texture_type)||this._match(h.multisampled_texture_type)){const e=this._previous();this._consume(h.tokens.less_than,"Expected '<' for sampler type.");const t=this._type_decl();return this._consume(h.tokens.greater_than,"Expected '>' for sampler type."),this._updateNode(new rt(e.toString(),t,null))}if(this._match(h.storage_texture_type)){const e=this._previous();this._consume(h.tokens.less_than,"Expected '<' for sampler type.");const t=this._consume(h.texel_format,"Invalid texel format.").toString();this._consume(h.tokens.comma,"Expected ',' after texel format.");const n=this._consume(h.access_mode,"Expected access mode for storage texture type.").toString();return this._consume(h.tokens.greater_than,"Expected '>' for sampler type."),this._updateNode(new rt(e.toString(),t,n))}return null}_attribute(){let e=[];for(;this._match(h.tokens.attr);){const t=this._consume(h.attribute_name,"Expected attribute name"),n=this._updateNode(new ki(t.toString(),null));if(this._match(h.tokens.paren_left)){if(n.value=this._consume(h.literal_or_ident,"Expected attribute value").toString(),this._check(h.tokens.comma)){this._advance();do{const s=this._consume(h.literal_or_ident,"Expected attribute value").toString();n.value instanceof Array||(n.value=[n.value]),n.value.push(s)}while(this._match(h.tokens.comma))}this._consume(h.tokens.paren_right,"Expected ')'")}e.push(n)}return e.length==0?null:e}}class vo extends Ae{constructor(e){super(),e&&this.update(e)}update(e){const t=new xo().parse(e);this.updateAST(t)}}function bo(a){const e={attributes:[],bindings:[]};let t;try{t=wo(a)}catch(i){return Z.error(i.message)(),e}for(const i of t.uniforms){const r=[];for(const o of i.type?.members||[])r.push({name:o.name,type:cs(o.type)});e.bindings.push({type:"uniform",name:i.name,group:i.group,location:i.binding,members:r})}for(const i of t.textures)e.bindings.push({type:"texture",name:i.name,group:i.group,location:i.binding});for(const i of t.samplers)e.bindings.push({type:"sampler",name:i.name,group:i.group,location:i.binding});const n=t.entry.vertex[0],s=n?.inputs.length||0;for(let i=0;i<s;i++){const r=n.inputs[i];if(r.locationType==="location"){const o=cs(r.type);e.attributes.push({name:r.name,location:Number(r.location),type:o})}}return e}function cs(a){return a.format?`${a.name}<${a.format.name}>`:a.name}function wo(a){try{return new vo(a)}catch(e){if(e instanceof Error)throw e;let t="WGSL parse error";throw typeof e=="object"&&e?.message&&(t+=`: ${e.message} `),typeof e=="object"&&e?.token&&(t+=e.token.line||""),new Error(t,{cause:e})}}function Ii(a,e=[],t=0){const n=Math.fround(a),s=a-n;return e[t]=n,e[t+1]=s,e}function ko(a){return a-Math.fround(a)}function Io(a){const e=new Float32Array(32);for(let t=0;t<4;++t)for(let n=0;n<4;++n){const s=t*4+n;Ii(a[n*4+t],e,s*2)}return e}const To=`
uniform fp64arithmeticUniforms {
  uniform float ONE;
} fp64;

/*
About LUMA_FP64_CODE_ELIMINATION_WORKAROUND

The purpose of this workaround is to prevent shader compilers from
optimizing away necessary arithmetic operations by swapping their sequences
or transform the equation to some 'equivalent' form.

The method is to multiply an artifical variable, ONE, which will be known to
the compiler to be 1 only at runtime. The whole expression is then represented
as a polynomial with respective to ONE. In the coefficients of all terms, only one a
and one b should appear

err = (a + b) * ONE^6 - a * ONE^5 - (a + b) * ONE^4 + a * ONE^3 - b - (a + b) * ONE^2 + a * ONE
*/

// Divide float number to high and low floats to extend fraction bits
vec2 split(float a) {
  const float SPLIT = 4097.0;
  float t = a * SPLIT;
#if defined(LUMA_FP64_CODE_ELIMINATION_WORKAROUND)
  float a_hi = t * fp64.ONE - (t - a);
  float a_lo = a * fp64.ONE - a_hi;
#else
  float a_hi = t - (t - a);
  float a_lo = a - a_hi;
#endif
  return vec2(a_hi, a_lo);
}

// Divide float number again when high float uses too many fraction bits
vec2 split2(vec2 a) {
  vec2 b = split(a.x);
  b.y += a.y;
  return b;
}

// Special sum operation when a > b
vec2 quickTwoSum(float a, float b) {
#if defined(LUMA_FP64_CODE_ELIMINATION_WORKAROUND)
  float sum = (a + b) * fp64.ONE;
  float err = b - (sum - a) * fp64.ONE;
#else
  float sum = a + b;
  float err = b - (sum - a);
#endif
  return vec2(sum, err);
}

// General sum operation
vec2 twoSum(float a, float b) {
  float s = (a + b);
#if defined(LUMA_FP64_CODE_ELIMINATION_WORKAROUND)
  float v = (s * fp64.ONE - a) * fp64.ONE;
  float err = (a - (s - v) * fp64.ONE) * fp64.ONE * fp64.ONE * fp64.ONE + (b - v);
#else
  float v = s - a;
  float err = (a - (s - v)) + (b - v);
#endif
  return vec2(s, err);
}

vec2 twoSub(float a, float b) {
  float s = (a - b);
#if defined(LUMA_FP64_CODE_ELIMINATION_WORKAROUND)
  float v = (s * fp64.ONE - a) * fp64.ONE;
  float err = (a - (s - v) * fp64.ONE) * fp64.ONE * fp64.ONE * fp64.ONE - (b + v);
#else
  float v = s - a;
  float err = (a - (s - v)) - (b + v);
#endif
  return vec2(s, err);
}

vec2 twoSqr(float a) {
  float prod = a * a;
  vec2 a_fp64 = split(a);
#if defined(LUMA_FP64_CODE_ELIMINATION_WORKAROUND)
  float err = ((a_fp64.x * a_fp64.x - prod) * fp64.ONE + 2.0 * a_fp64.x *
    a_fp64.y * fp64.ONE * fp64.ONE) + a_fp64.y * a_fp64.y * fp64.ONE * fp64.ONE * fp64.ONE;
#else
  float err = ((a_fp64.x * a_fp64.x - prod) + 2.0 * a_fp64.x * a_fp64.y) + a_fp64.y * a_fp64.y;
#endif
  return vec2(prod, err);
}

vec2 twoProd(float a, float b) {
  float prod = a * b;
  vec2 a_fp64 = split(a);
  vec2 b_fp64 = split(b);
  float err = ((a_fp64.x * b_fp64.x - prod) + a_fp64.x * b_fp64.y +
    a_fp64.y * b_fp64.x) + a_fp64.y * b_fp64.y;
  return vec2(prod, err);
}

vec2 sum_fp64(vec2 a, vec2 b) {
  vec2 s, t;
  s = twoSum(a.x, b.x);
  t = twoSum(a.y, b.y);
  s.y += t.x;
  s = quickTwoSum(s.x, s.y);
  s.y += t.y;
  s = quickTwoSum(s.x, s.y);
  return s;
}

vec2 sub_fp64(vec2 a, vec2 b) {
  vec2 s, t;
  s = twoSub(a.x, b.x);
  t = twoSub(a.y, b.y);
  s.y += t.x;
  s = quickTwoSum(s.x, s.y);
  s.y += t.y;
  s = quickTwoSum(s.x, s.y);
  return s;
}

vec2 mul_fp64(vec2 a, vec2 b) {
  vec2 prod = twoProd(a.x, b.x);
  // y component is for the error
  prod.y += a.x * b.y;
#if defined(LUMA_FP64_HIGH_BITS_OVERFLOW_WORKAROUND)
  prod = split2(prod);
#endif
  prod = quickTwoSum(prod.x, prod.y);
  prod.y += a.y * b.x;
#if defined(LUMA_FP64_HIGH_BITS_OVERFLOW_WORKAROUND)
  prod = split2(prod);
#endif
  prod = quickTwoSum(prod.x, prod.y);
  return prod;
}

vec2 div_fp64(vec2 a, vec2 b) {
  float xn = 1.0 / b.x;
#if defined(LUMA_FP64_HIGH_BITS_OVERFLOW_WORKAROUND)
  vec2 yn = mul_fp64(a, vec2(xn, 0));
#else
  vec2 yn = a * xn;
#endif
  float diff = (sub_fp64(a, mul_fp64(b, yn))).x;
  vec2 prod = twoProd(xn, diff);
  return sum_fp64(yn, prod);
}

vec2 sqrt_fp64(vec2 a) {
  if (a.x == 0.0 && a.y == 0.0) return vec2(0.0, 0.0);
  if (a.x < 0.0) return vec2(0.0 / 0.0, 0.0 / 0.0);

  float x = 1.0 / sqrt(a.x);
  float yn = a.x * x;
#if defined(LUMA_FP64_CODE_ELIMINATION_WORKAROUND)
  vec2 yn_sqr = twoSqr(yn) * fp64.ONE;
#else
  vec2 yn_sqr = twoSqr(yn);
#endif
  float diff = sub_fp64(a, yn_sqr).x;
  vec2 prod = twoProd(x * 0.5, diff);
#if defined(LUMA_FP64_HIGH_BITS_OVERFLOW_WORKAROUND)
  return sum_fp64(split(yn), prod);
#else
  return sum_fp64(vec2(yn, 0.0), prod);
#endif
}
`,Po={ONE:1},Ao={name:"fp64arithmetic",vs:To,defaultUniforms:Po,uniformTypes:{ONE:"f32"},fp64ify:Ii,fp64LowPart:ko,fp64ifyMatrix4:Io},Co=[0,1,1,1],Lo=`uniform pickingUniforms {
  float isActive;
  float isAttribute;
  float isHighlightActive;
  float useFloatColors;
  vec3 highlightedObjectColor;
  vec4 highlightColor;
} picking;

out vec4 picking_vRGBcolor_Avalid;

// Normalize unsigned byte color to 0-1 range
vec3 picking_normalizeColor(vec3 color) {
  return picking.useFloatColors > 0.5 ? color : color / 255.0;
}

// Normalize unsigned byte color to 0-1 range
vec4 picking_normalizeColor(vec4 color) {
  return picking.useFloatColors > 0.5 ? color : color / 255.0;
}

bool picking_isColorZero(vec3 color) {
  return dot(color, vec3(1.0)) < 0.00001;
}

bool picking_isColorValid(vec3 color) {
  return dot(color, vec3(1.0)) > 0.00001;
}

// Check if this vertex is highlighted 
bool isVertexHighlighted(vec3 vertexColor) {
  vec3 highlightedObjectColor = picking_normalizeColor(picking.highlightedObjectColor);
  return
    bool(picking.isHighlightActive) && picking_isColorZero(abs(vertexColor - highlightedObjectColor));
}

// Set the current picking color
void picking_setPickingColor(vec3 pickingColor) {
  pickingColor = picking_normalizeColor(pickingColor);

  if (bool(picking.isActive)) {
    // Use alpha as the validity flag. If pickingColor is [0, 0, 0] fragment is non-pickable
    picking_vRGBcolor_Avalid.a = float(picking_isColorValid(pickingColor));

    if (!bool(picking.isAttribute)) {
      // Stores the picking color so that the fragment shader can render it during picking
      picking_vRGBcolor_Avalid.rgb = pickingColor;
    }
  } else {
    // Do the comparison with selected item color in vertex shader as it should mean fewer compares
    picking_vRGBcolor_Avalid.a = float(isVertexHighlighted(pickingColor));
  }
}

void picking_setPickingAttribute(float value) {
  if (bool(picking.isAttribute)) {
    picking_vRGBcolor_Avalid.r = value;
  }
}

void picking_setPickingAttribute(vec2 value) {
  if (bool(picking.isAttribute)) {
    picking_vRGBcolor_Avalid.rg = value;
  }
}

void picking_setPickingAttribute(vec3 value) {
  if (bool(picking.isAttribute)) {
    picking_vRGBcolor_Avalid.rgb = value;
  }
}
`,So=`uniform pickingUniforms {
  float isActive;
  float isAttribute;
  float isHighlightActive;
  float useFloatColors;
  vec3 highlightedObjectColor;
  vec4 highlightColor;
} picking;

in vec4 picking_vRGBcolor_Avalid;

/*
 * Returns highlight color if this item is selected.
 */
vec4 picking_filterHighlightColor(vec4 color) {
  // If we are still picking, we don't highlight
  if (picking.isActive > 0.5) {
    return color;
  }

  bool selected = bool(picking_vRGBcolor_Avalid.a);

  if (selected) {
    // Blend in highlight color based on its alpha value
    float highLightAlpha = picking.highlightColor.a;
    float blendedAlpha = highLightAlpha + color.a * (1.0 - highLightAlpha);
    float highLightRatio = highLightAlpha / blendedAlpha;

    vec3 blendedRGB = mix(color.rgb, picking.highlightColor.rgb, highLightRatio);
    return vec4(blendedRGB, blendedAlpha);
  } else {
    return color;
  }
}

/*
 * Returns picking color if picking enabled else unmodified argument.
 */
vec4 picking_filterPickingColor(vec4 color) {
  if (bool(picking.isActive)) {
    if (picking_vRGBcolor_Avalid.a == 0.0) {
      discard;
    }
    return picking_vRGBcolor_Avalid;
  }
  return color;
}

/*
 * Returns picking color if picking is enabled if not
 * highlight color if this item is selected, otherwise unmodified argument.
 */
vec4 picking_filterColor(vec4 color) {
  vec4 highlightColor = picking_filterHighlightColor(color);
  return picking_filterPickingColor(highlightColor);
}
`,us={props:{},uniforms:{},name:"picking",uniformTypes:{isActive:"f32",isAttribute:"f32",isHighlightActive:"f32",useFloatColors:"f32",highlightedObjectColor:"vec3<f32>",highlightColor:"vec4<f32>"},defaultUniforms:{isActive:!1,isAttribute:!1,isHighlightActive:!1,useFloatColors:!0,highlightedObjectColor:[0,0,0],highlightColor:Co},vs:Lo,fs:So,getUniforms:Eo};function Eo(a={},e){const t={};if(a.highlightedObjectColor!==void 0)if(a.highlightedObjectColor===null)t.isHighlightActive=!1;else{t.isHighlightActive=!0;const n=a.highlightedObjectColor.slice(0,3);t.highlightedObjectColor=n}if(a.highlightColor){const n=Array.from(a.highlightColor,s=>s/255);Number.isFinite(n[3])||(n[3]=1),t.highlightColor=n}return a.isActive!==void 0&&(t.isActive=!!a.isActive,t.isAttribute=!!a.isAttribute),a.useFloatColors!==void 0&&(t.useFloatColors=!!a.useFloatColors),t}const fs=`precision highp int;

// #if (defined(SHADER_TYPE_FRAGMENT) && defined(LIGHTING_FRAGMENT)) || (defined(SHADER_TYPE_VERTEX) && defined(LIGHTING_VERTEX))
struct AmbientLight {
  vec3 color;
};

struct PointLight {
  vec3 color;
  vec3 position;
  vec3 attenuation; // 2nd order x:Constant-y:Linear-z:Exponential
};

struct DirectionalLight {
  vec3 color;
  vec3 direction;
};

uniform lightingUniforms {
  int enabled;
  int lightType;

  int directionalLightCount;
  int pointLightCount;

  vec3 ambientColor;

  vec3 lightColor0;
  vec3 lightPosition0;
  vec3 lightDirection0;
  vec3 lightAttenuation0;

  vec3 lightColor1;
  vec3 lightPosition1;
  vec3 lightDirection1;
  vec3 lightAttenuation1;

  vec3 lightColor2;
  vec3 lightPosition2;
  vec3 lightDirection2;
  vec3 lightAttenuation2;
} lighting;

PointLight lighting_getPointLight(int index) {
  switch (index) {
    case 0:
      return PointLight(lighting.lightColor0, lighting.lightPosition0, lighting.lightAttenuation0);
    case 1:
      return PointLight(lighting.lightColor1, lighting.lightPosition1, lighting.lightAttenuation1);
    case 2:
    default:  
      return PointLight(lighting.lightColor2, lighting.lightPosition2, lighting.lightAttenuation2);
  }
}

DirectionalLight lighting_getDirectionalLight(int index) {
  switch (index) {
    case 0:
      return DirectionalLight(lighting.lightColor0, lighting.lightDirection0);
    case 1:
      return DirectionalLight(lighting.lightColor1, lighting.lightDirection1);
    case 2:
    default:   
      return DirectionalLight(lighting.lightColor2, lighting.lightDirection2);
  }
} 

float getPointLightAttenuation(PointLight pointLight, float distance) {
  return pointLight.attenuation.x
       + pointLight.attenuation.y * distance
       + pointLight.attenuation.z * distance * distance;
}

// #endif
`,Oo=`// #if (defined(SHADER_TYPE_FRAGMENT) && defined(LIGHTING_FRAGMENT)) || (defined(SHADER_TYPE_VERTEX) && defined(LIGHTING_VERTEX))
struct AmbientLight {
  color: vec3<f32>,
};

struct PointLight {
  color: vec3<f32>,
  position: vec3<f32>,
  attenuation: vec3<f32>, // 2nd order x:Constant-y:Linear-z:Exponential
};

struct DirectionalLight {
  color: vec3<f32>,
  direction: vec3<f32>,
};

struct lightingUniforms {
  enabled: i32,
  pointLightCount: i32,
  directionalLightCount: i32,

  ambientColor: vec3<f32>,

  // TODO - support multiple lights by uncommenting arrays below
  lightType: i32,
  lightColor: vec3<f32>,
  lightDirection: vec3<f32>,
  lightPosition: vec3<f32>,
  lightAttenuation: vec3<f32>,

  // AmbientLight ambientLight;
  // PointLight pointLight[MAX_LIGHTS];
  // DirectionalLight directionalLight[MAX_LIGHTS];
};

// Binding 0:1 is reserved for lighting (Note: could go into separate bind group as it is stable across draw calls)
@binding(1) @group(0) var<uniform> lighting : lightingUniforms;

fn lighting_getPointLight(index: i32) -> PointLight {
  return PointLight(lighting.lightColor, lighting.lightPosition, lighting.lightAttenuation);
}

fn lighting_getDirectionalLight(index: i32) -> DirectionalLight {
  return DirectionalLight(lighting.lightColor, lighting.lightDirection);
} 

fn getPointLightAttenuation(pointLight: PointLight, distance: f32) -> f32 {
  return pointLight.attenuation.x
       + pointLight.attenuation.y * distance
       + pointLight.attenuation.z * distance * distance;
}
`,Ti=3,Mo=255;var ft;(function(a){a[a.POINT=0]="POINT",a[a.DIRECTIONAL=1]="DIRECTIONAL"})(ft||(ft={}));const At={props:{},uniforms:{},name:"lighting",defines:{MAX_LIGHTS:Ti},uniformTypes:{enabled:"i32",lightType:"i32",directionalLightCount:"i32",pointLightCount:"i32",ambientLightColor:"vec3<f32>",lightColor0:"vec3<f32>",lightPosition0:"vec3<f32>",lightDirection0:"vec3<f32>",lightAttenuation0:"vec3<f32>",lightColor1:"vec3<f32>",lightPosition1:"vec3<f32>",lightDirection1:"vec3<f32>",lightAttenuation1:"vec3<f32>",lightColor2:"vec3<f32>",lightPosition2:"vec3<f32>",lightDirection2:"vec3<f32>",lightAttenuation2:"vec3<f32>"},defaultUniforms:{enabled:1,lightType:ft.POINT,directionalLightCount:0,pointLightCount:0,ambientLightColor:[.1,.1,.1],lightColor0:[1,1,1],lightPosition0:[1,1,2],lightDirection0:[1,1,1],lightAttenuation0:[1,0,0],lightColor1:[1,1,1],lightPosition1:[1,1,2],lightDirection1:[1,1,1],lightAttenuation1:[1,0,0],lightColor2:[1,1,1],lightPosition2:[1,1,2],lightDirection2:[1,1,1],lightAttenuation2:[1,0,0]},source:Oo,vs:fs,fs,getUniforms:Bo};function Bo(a,e={}){if(a=a&&{...a},!a)return{...At.defaultUniforms};a.lights&&(a={...a,...No(a.lights),lights:void 0});const{ambientLight:t,pointLights:n,directionalLights:s}=a||{};if(!(t||n&&n.length>0||s&&s.length>0))return{...At.defaultUniforms,enabled:0};const r={...At.defaultUniforms,...e,...Fo({ambientLight:t,pointLights:n,directionalLights:s})};return a.enabled!==void 0&&(r.enabled=a.enabled?1:0),r}function Fo({ambientLight:a,pointLights:e=[],directionalLights:t=[]}){const n={};n.ambientLightColor=nn(a);let s=0;for(const i of e){n.lightType=ft.POINT;const r=s;n[`lightColor${r}`]=nn(i),n[`lightPosition${r}`]=i.position,n[`lightAttenuation${r}`]=i.attenuation||[1,0,0],s++}for(const i of t){n.lightType=ft.DIRECTIONAL;const r=s;n[`lightColor${r}`]=nn(i),n[`lightDirection${r}`]=i.direction,s++}return s>Ti&&Z.warn("MAX_LIGHTS exceeded")(),n.directionalLightCount=t.length,n.pointLightCount=e.length,n}function No(a){const e={pointLights:[],directionalLights:[]};for(const t of a||[])switch(t.type){case"ambient":e.ambientLight=t;break;case"directional":e.directionalLights?.push(t);break;case"point":e.pointLights?.push(t);break}return e}function nn(a={}){const{color:e=[0,0,0],intensity:t=1}=a;return e.map(n=>n*t/Mo)}const Ro=`uniform phongMaterialUniforms {
  uniform float ambient;
  uniform float diffuse;
  uniform float shininess;
  uniform vec3  specularColor;
} material;
`,Do=`uniform phongMaterialUniforms {
  uniform float ambient;
  uniform float diffuse;
  uniform float shininess;
  uniform vec3  specularColor;
} material;

vec3 lighting_getLightColor(vec3 surfaceColor, vec3 light_direction, vec3 view_direction, vec3 normal_worldspace, vec3 color) {
  vec3 halfway_direction = normalize(light_direction + view_direction);
  float lambertian = dot(light_direction, normal_worldspace);
  float specular = 0.0;
  if (lambertian > 0.0) {
    float specular_angle = max(dot(normal_worldspace, halfway_direction), 0.0);
    specular = pow(specular_angle, material.shininess);
  }
  lambertian = max(lambertian, 0.0);
  return (lambertian * material.diffuse * surfaceColor + specular * material.specularColor) * color;
}

vec3 lighting_getLightColor(vec3 surfaceColor, vec3 cameraPosition, vec3 position_worldspace, vec3 normal_worldspace) {
  vec3 lightColor = surfaceColor;

  if (lighting.enabled == 0) {
    return lightColor;
  }

  vec3 view_direction = normalize(cameraPosition - position_worldspace);
  lightColor = material.ambient * surfaceColor * lighting.ambientColor;

  for (int i = 0; i < lighting.pointLightCount; i++) {
    PointLight pointLight = lighting_getPointLight(i);
    vec3 light_position_worldspace = pointLight.position;
    vec3 light_direction = normalize(light_position_worldspace - position_worldspace);
    float light_attenuation = getPointLightAttenuation(pointLight, distance(light_position_worldspace, position_worldspace));
    lightColor += lighting_getLightColor(surfaceColor, light_direction, view_direction, normal_worldspace, pointLight.color / light_attenuation);
  }

  int totalLights = min(MAX_LIGHTS, lighting.pointLightCount + lighting.directionalLightCount);
  for (int i = lighting.pointLightCount; i < totalLights; i++) {
    DirectionalLight directionalLight = lighting_getDirectionalLight(i);
    lightColor += lighting_getLightColor(surfaceColor, -directionalLight.direction, view_direction, normal_worldspace, directionalLight.color);
  }
  
  return lightColor;
}
`,Uo=`struct phongMaterialUniforms {
  ambient: f32,
  diffuse: f32,
  shininess: f32,
  specularColor: vec3<f32>,
};

@binding(2) @group(0) var<uniform> phongMaterial : phongMaterialUniforms;

fn lighting_getLightColor(surfaceColor: vec3<f32>, light_direction: vec3<f32>, view_direction: vec3<f32>, normal_worldspace: vec3<f32>, color: vec3<f32>) -> vec3<f32> {
  let halfway_direction: vec3<f32> = normalize(light_direction + view_direction);
  var lambertian: f32 = dot(light_direction, normal_worldspace);
  var specular: f32 = 0.0;
  if (lambertian > 0.0) {
    let specular_angle = max(dot(normal_worldspace, halfway_direction), 0.0);
    specular = pow(specular_angle, phongMaterial.shininess);
  }
  lambertian = max(lambertian, 0.0);
  return (lambertian * phongMaterial.diffuse * surfaceColor + specular * phongMaterial.specularColor) * color;
}

fn lighting_getLightColor2(surfaceColor: vec3<f32>, cameraPosition: vec3<f32>, position_worldspace: vec3<f32>, normal_worldspace: vec3<f32>) -> vec3<f32> {
  var lightColor: vec3<f32> = surfaceColor;

  if (lighting.enabled == 0) {
    return lightColor;
  }

  let view_direction: vec3<f32> = normalize(cameraPosition - position_worldspace);
  lightColor = phongMaterial.ambient * surfaceColor * lighting.ambientColor;

  if (lighting.lightType == 0) {
    let pointLight: PointLight  = lighting_getPointLight(0);
    let light_position_worldspace: vec3<f32> = pointLight.position;
    let light_direction: vec3<f32> = normalize(light_position_worldspace - position_worldspace);
    lightColor += lighting_getLightColor(surfaceColor, light_direction, view_direction, normal_worldspace, pointLight.color);
  } else if (lighting.lightType == 1) {
    var directionalLight: DirectionalLight = lighting_getDirectionalLight(0);
    lightColor += lighting_getLightColor(surfaceColor, -directionalLight.direction, view_direction, normal_worldspace, directionalLight.color);
  }
  
  return lightColor;
  /*
  for (int i = 0; i < MAX_LIGHTS; i++) {
    if (i >= lighting.pointLightCount) {
      break;
    }
    PointLight pointLight = lighting.pointLight[i];
    vec3 light_position_worldspace = pointLight.position;
    vec3 light_direction = normalize(light_position_worldspace - position_worldspace);
    lightColor += lighting_getLightColor(surfaceColor, light_direction, view_direction, normal_worldspace, pointLight.color);
  }

  for (int i = 0; i < MAX_LIGHTS; i++) {
    if (i >= lighting.directionalLightCount) {
      break;
    }
    DirectionalLight directionalLight = lighting.directionalLight[i];
    lightColor += lighting_getLightColor(surfaceColor, -directionalLight.direction, view_direction, normal_worldspace, directionalLight.color);
  }
  */
}

fn lighting_getSpecularLightColor(cameraPosition: vec3<f32>, position_worldspace: vec3<f32>, normal_worldspace: vec3<f32>) -> vec3<f32>{
  var lightColor = vec3<f32>(0, 0, 0);
  let surfaceColor = vec3<f32>(0, 0, 0);

  if (lighting.enabled == 0) {
    let view_direction = normalize(cameraPosition - position_worldspace);

    switch (lighting.lightType) {
      case 0, default: {
        let pointLight: PointLight = lighting_getPointLight(0);
        let light_position_worldspace: vec3<f32> = pointLight.position;
        let light_direction: vec3<f32> = normalize(light_position_worldspace - position_worldspace);
        lightColor += lighting_getLightColor(surfaceColor, light_direction, view_direction, normal_worldspace, pointLight.color);
      }
      case 1: {
        let directionalLight: DirectionalLight = lighting_getDirectionalLight(0);
        lightColor += lighting_getLightColor(surfaceColor, -directionalLight.direction, view_direction, normal_worldspace, directionalLight.color);
      }
    }
  }
  return lightColor;
}
`,Pi={props:{},name:"gouraudMaterial",vs:Do.replace("phongMaterial","gouraudMaterial"),fs:Ro.replace("phongMaterial","gouraudMaterial"),source:Uo.replaceAll("phongMaterial","gouraudMaterial"),defines:{LIGHTING_VERTEX:1},dependencies:[At],uniformTypes:{ambient:"f32",diffuse:"f32",shininess:"f32",specularColor:"vec3<f32>"},defaultUniforms:{ambient:.35,diffuse:.6,shininess:32,specularColor:[.15,.15,.15]},getUniforms(a){const e={...a};return e.specularColor&&(e.specularColor=e.specularColor.map(t=>t/255)),{...Pi.defaultUniforms,...e}}},$o=`// Define a structure to hold both the clip-space position and the common position.
struct ProjectResult {
  clipPosition: vec4<f32>,
  commonPosition: vec4<f32>,
};

// This function mimics the GLSL version with the 'out' parameter by returning both values.
fn project_position_to_clipspace_and_commonspace(
    position: vec3<f32>,
    position64Low: vec3<f32>,
    offset: vec3<f32>
) -> ProjectResult {
  // Compute the projected position.
  let projectedPosition: vec3<f32> = project_position_vec3_f64(position, position64Low);

  // Start with the provided offset.
  var finalOffset: vec3<f32> = offset;

  // Get whether a rotation is needed and the rotation matrix.
  let rotationResult = project_needs_rotation(projectedPosition);

  // If rotation is needed, update the offset.
  if (rotationResult.needsRotation) {
    finalOffset = rotationResult.transform * offset;
  }

  // Compute the common position.
  let commonPosition: vec4<f32> = vec4<f32>(projectedPosition + finalOffset, 1.0);

  // Convert to clip-space.
  let clipPosition: vec4<f32> = project_common_position_to_clipspace(commonPosition);

  return ProjectResult(clipPosition, commonPosition);
}

// A convenience overload that returns only the clip-space position.
fn project_position_to_clipspace(
    position: vec3<f32>,
    position64Low: vec3<f32>,
    offset: vec3<f32>
) -> vec4<f32> {
  return project_position_to_clipspace_and_commonspace(position, position64Low, offset).clipPosition;
}
`,zo=`vec4 project_position_to_clipspace(
  vec3 position, vec3 position64Low, vec3 offset, out vec4 commonPosition
) {
  vec3 projectedPosition = project_position(position, position64Low);
  mat3 rotation;
  if (project_needs_rotation(projectedPosition, rotation)) {
    // offset is specified as ENU
    // when in globe projection, rotate offset so that the ground alighs with the surface of the globe
    offset = rotation * offset;
  }
  commonPosition = vec4(projectedPosition + offset, 1.0);
  return project_common_position_to_clipspace(commonPosition);
}

vec4 project_position_to_clipspace(
  vec3 position, vec3 position64Low, vec3 offset
) {
  vec4 commonPosition;
  return project_position_to_clipspace(position, position64Low, offset, commonPosition);
}
`,pt={name:"project32",dependencies:[ar],source:$o,vs:zo},gt={...us,defaultUniforms:{...us.defaultUniforms,useFloatColors:!1},inject:{"vs:DECKGL_FILTER_GL_POSITION":`
    // for picking depth values
    picking_setPickingAttribute(position.z / position.w);
  `,"vs:DECKGL_FILTER_COLOR":`
  picking_setPickingColor(geometry.pickingColor);
  `,"fs:DECKGL_FILTER_COLOR":{order:99,injection:`
  // use highlight color if this fragment belongs to the selected object.
  color = picking_filterHighlightColor(color);

  // use picking color if rendering to picking FBO.
  color = picking_filterPickingColor(color);
    `}}},hs=[0,0,0];function sn(a,e,t=!1){const n=e.projectPosition(a);if(t&&e instanceof hr){const[s,i,r=0]=a,o=e.getDistanceScales([s,i]);n[2]=r*o.unitsPerMeter[2]}return n}function Vo(a){const{viewport:e,modelMatrix:t,coordinateOrigin:n}=a;let{coordinateSystem:s,fromCoordinateSystem:i,fromCoordinateOrigin:r}=a;return s===pe.DEFAULT&&(s=e.isGeospatial?pe.LNGLAT:pe.CARTESIAN),i===void 0&&(i=s),r===void 0&&(r=n),{viewport:e,coordinateSystem:s,coordinateOrigin:n,modelMatrix:t,fromCoordinateSystem:i,fromCoordinateOrigin:r}}function Ai(a,{viewport:e,modelMatrix:t,coordinateSystem:n,coordinateOrigin:s,offsetMode:i}){let[r,o,l=0]=a;switch(t&&([r,o,l]=lr([],[r,o,l,1],t)),n){case pe.LNGLAT:return sn([r,o,l],e,i);case pe.LNGLAT_OFFSETS:return sn([r+s[0],o+s[1],l+(s[2]||0)],e,i);case pe.METER_OFFSETS:return sn(cr(s,[r,o,l]),e,i);case pe.CARTESIAN:default:return e.isGeospatial?[r+s[0],o+s[1],l+s[2]]:e.projectPosition([r,o,l])}}function Wo(a,e){const{viewport:t,coordinateSystem:n,coordinateOrigin:s,modelMatrix:i,fromCoordinateSystem:r,fromCoordinateOrigin:o}=Vo(e),{autoOffset:l=!0}=e,{geospatialOrigin:c=hs,shaderCoordinateOrigin:u=hs,offsetMode:f=!1}=l?ur(t,n,s):{},p=Ai(a,{viewport:t,modelMatrix:i,coordinateSystem:r,coordinateOrigin:o,offsetMode:f});if(f){const x=t.projectPosition(c||u);fr(p,p,x)}return p}const rn={};function Ht(a="id"){rn[a]=rn[a]||1;const e=rn[a]++;return`${a}-${e}`}class ds{id;userData={};topology;bufferLayout=[];vertexCount;indices;attributes;constructor(e){if(this.id=e.id||Ht("geometry"),this.topology=e.topology,this.indices=e.indices||null,this.attributes=e.attributes,this.vertexCount=e.vertexCount,this.bufferLayout=e.bufferLayout||[],this.indices&&!(this.indices.usage&de.INDEX))throw new Error("Index buffer must have INDEX usage")}destroy(){this.indices?.destroy();for(const e of Object.values(this.attributes))e.destroy()}getVertexCount(){return this.vertexCount}getAttributes(){return this.attributes}getIndexes(){return this.indices||null}_calculateVertexCount(e){return e.byteLength/12}}function Go(a,e){if(e instanceof ds)return e;const t=jo(a,e),{attributes:n,bufferLayout:s}=Ho(a,e);return new ds({topology:e.topology||"triangle-list",bufferLayout:s,vertexCount:e.vertexCount,indices:t,attributes:n})}function jo(a,e){if(!e.indices)return;const t=e.indices.value;return a.createBuffer({usage:de.INDEX,data:t})}function Ho(a,e){const t=[],n={};for(const[i,r]of Object.entries(e.attributes)){let o=i;switch(i){case"POSITION":o="positions";break;case"NORMAL":o="normals";break;case"TEXCOORD_0":o="texCoords";break;case"COLOR_0":o="colors";break}if(r){n[o]=a.createBuffer({data:r.value,id:`${i}-buffer`});const{value:l,size:c,normalized:u}=r;t.push({name:o,format:Gr(l,c,u)})}}const s=e._calculateVertexCount(e.attributes,e.indices);return{attributes:n,bufferLayout:t,vertexCount:s}}class Un{static defaultProps={...gn.defaultProps};static getDefaultPipelineFactory(e){return e._lumaData.defaultPipelineFactory=e._lumaData.defaultPipelineFactory||new Un(e),e._lumaData.defaultPipelineFactory}device;destroyPolicy;_hashCounter=0;_hashes={};_renderPipelineCache={};_computePipelineCache={};constructor(e){this.device=e,this.destroyPolicy=e.props._factoryDestroyPolicy}createRenderPipeline(e){const t={...gn.defaultProps,...e},n=this._hashRenderPipeline(t);if(!this._renderPipelineCache[n]){const s=this.device.createRenderPipeline({...t,id:t.id?`${t.id}-cached`:void 0});s.hash=n,this._renderPipelineCache[n]={pipeline:s,useCount:0}}return this._renderPipelineCache[n].useCount++,this._renderPipelineCache[n].pipeline}createComputePipeline(e){const t={...Ft.defaultProps,...e},n=this._hashComputePipeline(t);if(!this._computePipelineCache[n]){const s=this.device.createComputePipeline({...t,id:t.id?`${t.id}-cached`:void 0});s.hash=n,this._computePipelineCache[n]={pipeline:s,useCount:0}}return this._computePipelineCache[n].useCount++,this._computePipelineCache[n].pipeline}release(e){const t=e.hash,n=e instanceof Ft?this._computePipelineCache:this._renderPipelineCache;n[t].useCount--,n[t].useCount===0&&this.destroyPolicy==="unused"&&(n[t].pipeline.destroy(),delete n[t])}_hashComputePipeline(e){return`${this._getHash(e.shader.source)}`}_hashRenderPipeline(e){const t=e.vs?this._getHash(e.vs.source):0,n=e.fs?this._getHash(e.fs.source):0,s="-",i=this._getHash(JSON.stringify(e.bufferLayout));switch(this.device.type){case"webgl":return`${t}/${n}V${s}BL${i}`;default:const r=this._getHash(JSON.stringify(e.parameters));return`${t}/${n}V${s}T${e.topology}P${r}BL${i}`}}_getHash(e){return this._hashes[e]===void 0&&(this._hashes[e]=this._hashCounter++),this._hashes[e]}}class $n{static defaultProps={...dr.defaultProps};static getDefaultShaderFactory(e){return e._lumaData.defaultShaderFactory||=new $n(e),e._lumaData.defaultShaderFactory}device;destroyPolicy;_cache={};constructor(e){this.device=e,this.destroyPolicy=e.props._factoryDestroyPolicy}createShader(e){const t=this._hashShader(e);let n=this._cache[t];if(!n){const s=this.device.createShader({...e,id:e.id?`${e.id}-cached`:void 0});this._cache[t]=n={shader:s,useCount:0}}return n.useCount++,n.shader}release(e){const t=this._hashShader(e),n=this._cache[t];n&&(n.useCount--,n.useCount===0&&this.destroyPolicy==="unused"&&(delete this._cache[t],n.shader.destroy()))}_hashShader(e){return`${e.stage}:${e.source}`}}function qo(a,e){const t={},n="Values";if(a.attributes.length===0&&!a.varyings?.length)return{"No attributes or varyings":{[n]:"N/A"}};for(const s of a.attributes)if(s){const i=`${s.location} ${s.name}: ${s.type}`;t[`in ${i}`]={[n]:s.stepMode||"vertex"}}for(const s of a.varyings||[]){const i=`${s.location} ${s.name}`;t[`out ${i}`]={[n]:JSON.stringify(s)}}return t}let le=null,on=null;function Yo(a,{id:e,minimap:t,opaque:n,top:s="0",left:i="0",rgbaScale:r=1}){le||(le=document.createElement("canvas"),le.id=e,le.title=e,le.style.zIndex="100",le.style.position="absolute",le.style.top=s,le.style.left=i,le.style.border="blue 5px solid",le.style.transform="scaleY(-1)",document.body.appendChild(le),on=le.getContext("2d")),(le.width!==a.width||le.height!==a.height)&&(le.width=a.width/2,le.height=a.height/2,le.style.width="400px",le.style.height="400px");const o=a.device.readPixelsToArrayWebGL(a),l=on?.createImageData(a.width,a.height);if(l){for(let u=0;u<o.length;u+=4)l.data[0+u+0]=o[u+0]*r,l.data[0+u+1]=o[u+1]*r,l.data[0+u+2]=o[u+2]*r,l.data[0+u+3]=n?255:o[u+3]*r;on?.putImageData(l,0,0)}}function xn(a,e,t){if(a===e)return!0;if(!t||!a||!e)return!1;if(Array.isArray(a)){if(!Array.isArray(e)||a.length!==e.length)return!1;for(let n=0;n<a.length;n++)if(!xn(a[n],e[n],t-1))return!1;return!0}if(Array.isArray(e))return!1;if(typeof a=="object"&&typeof e=="object"){const n=Object.keys(a),s=Object.keys(e);if(n.length!==s.length)return!1;for(const i of n)if(!e.hasOwnProperty(i)||!xn(a[i],e[i],t-1))return!1;return!0}return!1}function Ko(a){return pr(a)||typeof a=="number"||typeof a=="boolean"}function Ci(a){const e={bindings:{},uniforms:{}};return Object.keys(a).forEach(t=>{const n=a[t];Ko(n)?e.uniforms[t]=n:e.bindings[t]=n}),e}class Zo{options={disableWarnings:!1};modules;moduleUniforms;moduleBindings;constructor(e,t){Object.assign(this.options,t);const n=gr(Object.values(e).filter(s=>s.dependencies));for(const s of n)e[s.name]=s;Z.log(1,"Creating ShaderInputs with modules",Object.keys(e))(),this.modules=e,this.moduleUniforms={},this.moduleBindings={};for(const[s,i]of Object.entries(e))this._addModule(i),i.name&&s!==i.name&&!this.options.disableWarnings&&Z.warn(`Module name: ${s} vs ${i.name}`)()}destroy(){}setProps(e){for(const t of Object.keys(e)){const n=t,s=e[n]||{},i=this.modules[n];if(!i){this.options.disableWarnings||Z.warn(`Module ${t} not found`)();continue}const r=this.moduleUniforms[n],o=this.moduleBindings[n],l=i.getUniforms?.(s,r)||s,{uniforms:c,bindings:u}=Ci(l);this.moduleUniforms[n]={...r,...c},this.moduleBindings[n]={...o,...u}}}getModules(){return Object.values(this.modules)}getUniformValues(){return this.moduleUniforms}getBindingValues(){const e={};for(const t of Object.values(this.moduleBindings))Object.assign(e,t);return e}getDebugTable(){const e={};for(const[t,n]of Object.entries(this.moduleUniforms))for(const[s,i]of Object.entries(n))e[`${t}.${s}`]={type:this.modules[t].uniformTypes?.[s],value:String(i)};return e}_addModule(e){const t=e.name;this.moduleUniforms[t]=e.defaultUniforms||{},this.moduleBindings[t]={}}}let Xo="";async function Jo(a,e){const t=new Image;return t.crossOrigin="anonymous",t.src=a.startsWith("http")?a:Xo+a,await t.decode(),e?await createImageBitmap(t,e):await createImageBitmap(t)}class an{device;id;texture;sampler;view;ready;isReady=!1;destroyed=!1;resolveReady=()=>{};rejectReady=()=>{};get[Symbol.toStringTag](){return"AsyncTexture"}toString(){return`AsyncTexture:"${this.id}"(${this.isReady?"ready":"loading"})`}constructor(e,t){this.device=e,this.id=t.id||Ht("async-texture"),typeof t?.data=="string"&&t.dimension==="2d"&&(t={...t,data:Jo(t.data)}),this.ready=new Promise((n,s)=>{this.resolveReady=()=>{this.isReady=!0,n()},this.rejectReady=s}),this.initAsync(t)}async initAsync(e){const t=e.data;let n;try{n=await Li(t)}catch(i){this.rejectReady(i)}if(this.destroyed)return;const s={...e,data:n};this.texture=this.device.createTexture(s),this.sampler=this.texture.sampler,this.view=this.texture.view,this.isReady=!0,this.resolveReady()}destroy(){this.texture&&(this.texture.destroy(),this.texture=null),this.destroyed=!0}resize(e){if(!this.isReady)throw new Error("Cannot resize texture before it is ready");if(e.width===this.texture.width&&e.height===this.texture.height)return!1;if(this.texture){const t=this.texture;this.texture=t.clone(e),t.destroy()}return!0}}async function Li(a){if(a=await a,Array.isArray(a))return await Promise.all(a.map(Li));if(a&&typeof a=="object"&&a.constructor===Object){const e=a,t=await Promise.all(Object.values(e)),n=Object.keys(e),s={};for(let i=0;i<n.length;i++)s[n[i]]=t[i];return s}return a}const $e=2,Qo=1e4;class ke{static defaultProps={...gn.defaultProps,source:void 0,vs:null,fs:null,id:"unnamed",handle:void 0,userData:{},defines:{},modules:[],moduleSettings:void 0,geometry:null,indexBuffer:null,attributes:{},constantAttributes:{},varyings:[],isInstanced:void 0,instanceCount:0,vertexCount:0,shaderInputs:void 0,pipelineFactory:void 0,shaderFactory:void 0,transformFeedback:void 0,shaderAssembler:mr.getDefaultShaderAssembler(),debugShaders:void 0,disableWarnings:void 0};device;id;source;vs;fs;pipelineFactory;shaderFactory;userData={};parameters;topology;bufferLayout;isInstanced=void 0;instanceCount=0;vertexCount;indexBuffer=null;bufferAttributes={};constantAttributes={};bindings={};uniforms={};vertexArray;transformFeedback=null;pipeline;shaderInputs;_uniformStore;_attributeInfos={};_gpuGeometry=null;_getModuleUniforms;props;_pipelineNeedsUpdate="newly created";_needsRedraw="initializing";_destroyed=!1;_lastDrawTimestamp=-1;get[Symbol.toStringTag](){return"Model"}toString(){return`Model(${this.id})`}constructor(e,t){this.props={...ke.defaultProps,...t},t=this.props,this.id=t.id||Ht("model"),this.device=e,Object.assign(this.userData,t.userData);const n=Object.fromEntries(this.props.modules?.map(l=>[l.name,l])||[]),s=t.shaderInputs||new Zo(n,{disableWarnings:this.props.disableWarnings});this.setShaderInputs(s);const i=ta(e),r=(this.props.modules?.length>0?this.props.modules:this.shaderInputs?.getModules())||[];if(this.device.type==="webgpu"&&this.props.source){const{source:l,getUniforms:c}=this.props.shaderAssembler.assembleWGSLShader({platformInfo:i,...this.props,modules:r});this.source=l,this._getModuleUniforms=c,this.props.shaderLayout||=bo(this.source)}else{const{vs:l,fs:c,getUniforms:u}=this.props.shaderAssembler.assembleGLSLShaderPair({platformInfo:i,...this.props,modules:r});this.vs=l,this.fs=c,this._getModuleUniforms=u}this.vertexCount=this.props.vertexCount,this.instanceCount=this.props.instanceCount,this.topology=this.props.topology,this.bufferLayout=this.props.bufferLayout,this.parameters=this.props.parameters,t.geometry&&this.setGeometry(t.geometry),this.pipelineFactory=t.pipelineFactory||Un.getDefaultPipelineFactory(this.device),this.shaderFactory=t.shaderFactory||$n.getDefaultShaderFactory(this.device),this.pipeline=this._updatePipeline(),this.vertexArray=e.createVertexArray({renderPipeline:this.pipeline}),this._gpuGeometry&&this._setGeometryAttributes(this._gpuGeometry),"isInstanced"in t&&(this.isInstanced=t.isInstanced),t.instanceCount&&this.setInstanceCount(t.instanceCount),t.vertexCount&&this.setVertexCount(t.vertexCount),t.indexBuffer&&this.setIndexBuffer(t.indexBuffer),t.attributes&&this.setAttributes(t.attributes),t.constantAttributes&&this.setConstantAttributes(t.constantAttributes),t.bindings&&this.setBindings(t.bindings),t.uniforms&&this.setUniformsWebGL(t.uniforms),t.moduleSettings&&this.updateModuleSettingsWebGL(t.moduleSettings),t.transformFeedback&&(this.transformFeedback=t.transformFeedback),Object.seal(this)}destroy(){this._destroyed||(this.pipelineFactory.release(this.pipeline),this.shaderFactory.release(this.pipeline.vs),this.pipeline.fs&&this.shaderFactory.release(this.pipeline.fs),this._uniformStore.destroy(),this._gpuGeometry?.destroy(),this._destroyed=!0)}needsRedraw(){this._getBindingsUpdateTimestamp()>this._lastDrawTimestamp&&this.setNeedsRedraw("contents of bound textures or buffers updated");const e=this._needsRedraw;return this._needsRedraw=!1,e}setNeedsRedraw(e){this._needsRedraw||=e}predraw(){this.updateShaderInputs(),this.pipeline=this._updatePipeline()}draw(e){const t=this._areBindingsLoading();if(t)return Z.info($e,`>>> DRAWING ABORTED ${this.id}: ${t} not loaded`)(),!1;try{e.pushDebugGroup(`${this}.predraw(${e})`),this.predraw()}finally{e.popDebugGroup()}let n;try{e.pushDebugGroup(`${this}.draw(${e})`),this._logDrawCallStart(),this.pipeline=this._updatePipeline();const s=this._getBindings();this.pipeline.setBindings(s,{disableWarnings:this.props.disableWarnings}),vn(this.uniforms)||this.pipeline.setUniformsWebGL(this.uniforms);const{indexBuffer:i}=this.vertexArray,r=i?i.byteLength/(i.indexType==="uint32"?4:2):void 0;n=this.pipeline.draw({renderPass:e,vertexArray:this.vertexArray,isInstanced:this.isInstanced,vertexCount:this.vertexCount,instanceCount:this.instanceCount,indexCount:r,transformFeedback:this.transformFeedback||void 0,parameters:this.parameters,topology:this.topology})}finally{e.popDebugGroup(),this._logDrawCallEnd()}return this._logFramebuffer(e),n?(this._lastDrawTimestamp=this.device.timestamp,this._needsRedraw=!1):this._needsRedraw="waiting for resource initialization",n}setGeometry(e){this._gpuGeometry?.destroy();const t=e&&Go(this.device,e);if(t){this.setTopology(t.topology||"triangle-list");const n=new Jt(this.bufferLayout);this.bufferLayout=n.mergeBufferLayouts(t.bufferLayout,this.bufferLayout),this.vertexArray&&this._setGeometryAttributes(t)}this._gpuGeometry=t}setTopology(e){e!==this.topology&&(this.topology=e,this._setPipelineNeedsUpdate("topology"))}setBufferLayout(e){const t=new Jt(this.bufferLayout);this.bufferLayout=this._gpuGeometry?t.mergeBufferLayouts(e,this._gpuGeometry.bufferLayout):e,this._setPipelineNeedsUpdate("bufferLayout"),this.pipeline=this._updatePipeline(),this.vertexArray=this.device.createVertexArray({renderPipeline:this.pipeline}),this._gpuGeometry&&this._setGeometryAttributes(this._gpuGeometry)}setParameters(e){xn(e,this.parameters,2)||(this.parameters=e,this._setPipelineNeedsUpdate("parameters"))}setInstanceCount(e){this.instanceCount=e,this.isInstanced===void 0&&e>0&&(this.isInstanced=!0),this.setNeedsRedraw("instanceCount")}setVertexCount(e){this.vertexCount=e,this.setNeedsRedraw("vertexCount")}setShaderInputs(e){this.shaderInputs=e,this._uniformStore=new Wr(this.shaderInputs.modules);for(const[t,n]of Object.entries(this.shaderInputs.modules))if(ea(n)){const s=this._uniformStore.getManagedUniformBuffer(this.device,t);this.bindings[`${t}Uniforms`]=s}this.setNeedsRedraw("shaderInputs")}updateShaderInputs(){this._uniformStore.setUniforms(this.shaderInputs.getUniformValues()),this.setBindings(this.shaderInputs.getBindingValues()),this.setNeedsRedraw("shaderInputs")}setBindings(e){Object.assign(this.bindings,e),this.setNeedsRedraw("bindings")}setTransformFeedback(e){this.transformFeedback=e,this.setNeedsRedraw("transformFeedback")}setIndexBuffer(e){this.vertexArray.setIndexBuffer(e),this.setNeedsRedraw("indexBuffer")}setAttributes(e,t){const n=t?.disableWarnings??this.props.disableWarnings;e.indices&&Z.warn(`Model:${this.id} setAttributes() - indexBuffer should be set using setIndexBuffer()`)(),this.bufferLayout=jr(this.pipeline.shaderLayout,this.bufferLayout);const s=new Jt(this.bufferLayout);for(const[i,r]of Object.entries(e)){const o=s.getBufferLayout(i);if(!o){n||Z.warn(`Model(${this.id}): Missing layout for buffer "${i}".`)();continue}const l=s.getAttributeNamesForBuffer(o);let c=!1;for(const u of l){const f=this._attributeInfos[u];if(f){const p=this.device.type==="webgpu"?s.getBufferIndex(f.bufferName):f.location;this.vertexArray.setBuffer(p,r),c=!0}}!c&&!n&&Z.warn(`Model(${this.id}): Ignoring buffer "${r.id}" for unknown attribute "${i}"`)()}this.setNeedsRedraw("attributes")}setConstantAttributes(e,t){for(const[n,s]of Object.entries(e)){const i=this._attributeInfos[n];i?this.vertexArray.setConstantWebGL(i.location,s):(t?.disableWarnings??this.props.disableWarnings)||Z.warn(`Model "${this.id}: Ignoring constant supplied for unknown attribute "${n}"`)()}this.setNeedsRedraw("constants")}setUniforms(e){this.setUniformsWebGL(e)}setUniformsWebGL(e){vn(e)||(this.pipeline.setUniformsWebGL(e),Object.assign(this.uniforms,e)),this.setNeedsRedraw("uniforms")}updateModuleSettingsWebGL(e){const{bindings:t,uniforms:n}=Ci(this._getModuleUniforms(e));Object.assign(this.bindings,t),Object.assign(this.uniforms,n),this.setNeedsRedraw("moduleSettings")}_areBindingsLoading(){for(const e of Object.values(this.bindings))if(e instanceof an&&!e.isReady)return e.id;return!1}_getBindings(){const e={};for(const[t,n]of Object.entries(this.bindings))n instanceof an?n.isReady&&(e[t]=n.texture):e[t]=n;return e}_getBindingsUpdateTimestamp(){let e=0;for(const t of Object.values(this.bindings))t instanceof yr?e=Math.max(e,t.texture.updateTimestamp):t instanceof de||t instanceof Ln?e=Math.max(e,t.updateTimestamp):t instanceof an?e=t.texture?Math.max(e,t.texture.updateTimestamp):1/0:t instanceof _r||(e=Math.max(e,t.buffer.updateTimestamp));return e}_setGeometryAttributes(e){const t={...e.attributes};for(const[n]of Object.entries(t))!this.pipeline.shaderLayout.attributes.find(s=>s.name===n)&&n!=="positions"&&delete t[n];this.vertexCount=e.vertexCount,this.setIndexBuffer(e.indices||null),this.setAttributes(e.attributes,{disableWarnings:!0}),this.setAttributes(t,{disableWarnings:this.props.disableWarnings}),this.setNeedsRedraw("geometry attributes")}_setPipelineNeedsUpdate(e){this._pipelineNeedsUpdate||=e,this.setNeedsRedraw(e)}_updatePipeline(){if(this._pipelineNeedsUpdate){let e=null,t=null;this.pipeline&&(Z.log(1,`Model ${this.id}: Recreating pipeline because "${this._pipelineNeedsUpdate}".`)(),e=this.pipeline.vs,t=this.pipeline.fs),this._pipelineNeedsUpdate=!1;const n=this.shaderFactory.createShader({id:`${this.id}-vertex`,stage:"vertex",source:this.source||this.vs,debugShaders:this.props.debugShaders});let s=null;this.source?s=n:this.fs&&(s=this.shaderFactory.createShader({id:`${this.id}-fragment`,stage:"fragment",source:this.source||this.fs,debugShaders:this.props.debugShaders})),this.pipeline=this.pipelineFactory.createRenderPipeline({...this.props,bufferLayout:this.bufferLayout,topology:this.topology,parameters:this.parameters,bindings:this._getBindings(),vs:n,fs:s}),this._attributeInfos=xr(this.pipeline.shaderLayout,this.bufferLayout),e&&this.shaderFactory.release(e),t&&this.shaderFactory.release(t)}return this.pipeline}_lastLogTime=0;_logOpen=!1;_logDrawCallStart(){const e=Z.level>3?0:Qo;Z.level<2||Date.now()-this._lastLogTime<e||(this._lastLogTime=Date.now(),this._logOpen=!0,Z.group($e,`>>> DRAWING MODEL ${this.id}`,{collapsed:Z.level<=2})())}_logDrawCallEnd(){if(this._logOpen){const e=qo(this.pipeline.shaderLayout,this.id);Z.table($e,e)();const t=this.shaderInputs.getDebugTable();for(const[s,i]of Object.entries(this.uniforms))t[s]={value:i};Z.table($e,t)();const n=this._getAttributeDebugTable();Z.table($e,this._attributeInfos)(),Z.table($e,n)(),Z.groupEnd($e)(),this._logOpen=!1}}_drawCount=0;_logFramebuffer(e){const t=this.device.props.debugFramebuffers;if(this._drawCount++,!t)return;const n=e.props.framebuffer;n&&Yo(n,{id:n.id,minimap:!0})}_getAttributeDebugTable(){const e={};for(const[t,n]of Object.entries(this._attributeInfos)){const s=this.vertexArray.attributes[n.location];e[n.location]={name:t,type:n.shaderType,values:s?this._getBufferOrConstantValues(s,n.bufferDataType):"null"}}if(this.vertexArray.indexBuffer){const{indexBuffer:t}=this.vertexArray,n=t.indexType==="uint32"?new Uint32Array(t.debugData):new Uint16Array(t.debugData);e.indices={name:"indices",type:t.indexType,values:n.toString()}}return e}_getBufferOrConstantValues(e,t){const n=ni(t);return(e instanceof de?new n(e.debugData):e).toString()}}function ea(a){return!!(a.uniformTypes&&!vn(a.uniformTypes))}function ta(a){return{type:a.type,shaderLanguage:a.info.shadingLanguage,shaderLanguageVersion:a.info.shadingLanguageVersion,gpu:a.info.gpu,features:a.features}}function vn(a){for(const e in a)return!1;return!0}class Ze{device;model;transformFeedback;static defaultProps={...ke.defaultProps,outputs:void 0,feedbackBuffers:void 0};static isSupported(e){return e?.info?.type==="webgl"}constructor(e,t=Ze.defaultProps){if(!Ze.isSupported(e))throw new Error("BufferTransform not yet implemented on WebGPU");this.device=e,this.model=new ke(this.device,{id:t.id||"buffer-transform-model",fs:t.fs||Or(),topology:t.topology||"point-list",varyings:t.outputs||t.varyings,...t}),this.transformFeedback=this.device.createTransformFeedback({layout:this.model.pipeline.shaderLayout,buffers:t.feedbackBuffers}),this.model.setTransformFeedback(this.transformFeedback),Object.seal(this)}destroy(){this.model&&this.model.destroy()}delete(){this.destroy()}run(e){e?.inputBuffers&&this.model.setAttributes(e.inputBuffers),e?.outputBuffers&&this.transformFeedback.setBuffers(e.outputBuffers);const t=this.device.beginRenderPass(e);this.model.draw(t),t.end()}getBuffer(e){return this.transformFeedback.getBuffer(e)}readAsync(e){const t=this.getBuffer(e);if(!t)throw new Error("BufferTransform#getBuffer");if(t instanceof de)return t.readAsync();const{buffer:n,byteOffset:s=0,byteLength:i=n.byteLength}=t;return n.readAsync(s,i)}}class Xe{id;topology;vertexCount;indices;attributes;userData={};constructor(e){const{attributes:t={},indices:n=null,vertexCount:s=null}=e;this.id=e.id||Ht("geometry"),this.topology=e.topology,n&&(this.indices=ArrayBuffer.isView(n)?{value:n,size:1}:n),this.attributes={};for(const[i,r]of Object.entries(t)){const o=ArrayBuffer.isView(r)?{value:r}:r;if(!ArrayBuffer.isView(o.value))throw new Error(`${this._print(i)}: must be typed array or object with value as typed array`);if((i==="POSITION"||i==="positions")&&!o.size&&(o.size=3),i==="indices"){if(this.indices)throw new Error("Multiple indices detected");this.indices=o}else this.attributes[i]=o}this.indices&&this.indices.isIndexed!==void 0&&(this.indices=Object.assign({},this.indices),delete this.indices.isIndexed),this.vertexCount=s||this._calculateVertexCount(this.attributes,this.indices)}getVertexCount(){return this.vertexCount}getAttributes(){return this.indices?{indices:this.indices,...this.attributes}:this.attributes}_print(e){return`Geometry ${this.id} attribute ${e}`}_setAttributes(e,t){return this}_calculateVertexCount(e,t){if(t)return t.value.length;let n=1/0;for(const s of Object.values(e)){const{value:i,size:r,constant:o}=s;!o&&i&&r!==void 0&&r>=1&&(n=Math.min(n,i.length/r))}return n}}function na(a){switch(a){case"float64":return Float64Array;case"uint8":case"unorm8":return Uint8ClampedArray;default:return ni(a)}}const sa=ti;function vt(a,e,t){const n=t==="webgpu"&&e.type==="uint8"?"unorm8":e.type;return{attribute:a,format:e.size>1?`${n}x${e.size}`:e.type,byteOffset:e.offset||0}}function ze(a){return a.stride||a.size*a.bytesPerElement}function ia(a,e){return a.type===e.type&&a.size===e.size&&ze(a)===ze(e)&&(a.offset||0)===(e.offset||0)}function bn(a,e){e.offset&&ae.removed("shaderAttribute.offset","vertexOffset, elementOffset")();const t=ze(a),n=e.vertexOffset!==void 0?e.vertexOffset:a.vertexOffset||0,s=e.elementOffset||0,i=n*t+s*a.bytesPerElement+(a.offset||0);return{...e,offset:i,stride:t}}function ra(a,e){const t=bn(a,e);return{high:t,low:{...t,offset:t.offset+a.size*4}}}class oa{constructor(e,t,n){this._buffer=null,this.device=e,this.id=t.id||"",this.size=t.size||1;const s=t.logicalType||t.type,i=s==="float64";let{defaultValue:r}=t;r=Number.isFinite(r)?[r]:r||new Array(this.size).fill(0);let o;i?o="float32":!s&&t.isIndexed?o="uint32":o=s||"float32";let l=na(s||o);this.doublePrecision=i,i&&t.fp64===!1&&(l=Float32Array),this.value=null,this.settings={...t,defaultType:l,defaultValue:r,logicalType:s,type:o,normalized:o.includes("norm"),size:this.size,bytesPerElement:l.BYTES_PER_ELEMENT},this.state={...n,externalBuffer:null,bufferAccessor:this.settings,allocatedValue:null,numInstances:0,bounds:null,constant:!1}}get isConstant(){return this.state.constant}get buffer(){return this._buffer}get byteOffset(){const e=this.getAccessor();return e.vertexOffset?e.vertexOffset*ze(e):0}get numInstances(){return this.state.numInstances}set numInstances(e){this.state.numInstances=e}delete(){this._buffer&&(this._buffer.delete(),this._buffer=null),Mt.release(this.state.allocatedValue)}getBuffer(){return this.state.constant?null:this.state.externalBuffer||this._buffer}getValue(e=this.id,t=null){const n={};if(this.state.constant){const s=this.value;if(t){const i=bn(this.getAccessor(),t),r=i.offset/s.BYTES_PER_ELEMENT,o=i.size||this.size;n[e]=s.subarray(r,r+o)}else n[e]=s}else n[e]=this.getBuffer();return this.doublePrecision&&(this.value instanceof Float64Array?n[`${e}64Low`]=n[e]:n[`${e}64Low`]=new Float32Array(this.size)),n}_getBufferLayout(e=this.id,t=null){const n=this.getAccessor(),s=[],i={name:this.id,byteStride:ze(n),attributes:s};if(this.doublePrecision){const r=ra(n,t||{});s.push(vt(e,{...n,...r.high},this.device.type),vt(`${e}64Low`,{...n,...r.low},this.device.type))}else if(t){const r=bn(n,t);s.push(vt(e,{...n,...r},this.device.type))}else s.push(vt(e,n,this.device.type));return i}setAccessor(e){this.state.bufferAccessor=e}getAccessor(){return this.state.bufferAccessor}getBounds(){if(this.state.bounds)return this.state.bounds;let e=null;if(this.state.constant&&this.value){const t=Array.from(this.value);e=[t,t]}else{const{value:t,numInstances:n,size:s}=this,i=n*s;if(t&&i&&t.length>=i){const r=new Array(s).fill(1/0),o=new Array(s).fill(-1/0);for(let l=0;l<i;)for(let c=0;c<s;c++){const u=t[l++];u<r[c]&&(r[c]=u),u>o[c]&&(o[c]=u)}e=[r,o]}}return this.state.bounds=e,e}setData(e){const{state:t}=this;let n;ArrayBuffer.isView(e)?n={value:e}:e instanceof de?n={buffer:e}:n=e;const s={...this.settings,...n};if(ArrayBuffer.isView(n.value)){if(!n.type)if(this.doublePrecision&&n.value instanceof Float64Array)s.type="float32";else{const r=sa(n.value);s.type=s.normalized?r.replace("int","norm"):r}s.bytesPerElement=n.value.BYTES_PER_ELEMENT,s.stride=ze(s)}if(t.bounds=null,n.constant){let i=n.value;if(i=this._normalizeValue(i,[],0),this.settings.normalized&&(i=this.normalizeConstant(i)),!(!t.constant||!this._areValuesEqual(i,this.value)))return!1;t.externalBuffer=null,t.constant=!0,this.value=ArrayBuffer.isView(i)?i:new Float32Array(i)}else if(n.buffer){const i=n.buffer;t.externalBuffer=i,t.constant=!1,this.value=n.value||null}else if(n.value){this._checkExternalBuffer(n);let i=n.value;t.externalBuffer=null,t.constant=!1,this.value=i;let{buffer:r}=this;const o=ze(s),l=(s.vertexOffset||0)*o;if(this.doublePrecision&&i instanceof Float64Array&&(i=Zt(i,s)),this.settings.isIndexed){const u=this.settings.defaultType;i.constructor!==u&&(i=new u(i))}const c=i.byteLength+l+o*2;(!r||r.byteLength<c)&&(r=this._createBuffer(c)),r.write(i,l)}return this.setAccessor(s),!0}updateSubBuffer(e={}){this.state.bounds=null;const t=this.value,{startOffset:n=0,endOffset:s}=e;this.buffer.write(this.doublePrecision&&t instanceof Float64Array?Zt(t,{size:this.size,startIndex:n,endIndex:s}):t.subarray(n,s),n*t.BYTES_PER_ELEMENT+this.byteOffset)}allocate(e,t=!1){const{state:n}=this,s=n.allocatedValue,i=Mt.allocate(s,e+1,{size:this.size,type:this.settings.defaultType,copy:t});this.value=i;const{byteOffset:r}=this;let{buffer:o}=this;return(!o||o.byteLength<i.byteLength+r)&&(o=this._createBuffer(i.byteLength+r),t&&s&&o.write(s instanceof Float64Array?Zt(s,this):s,r)),n.allocatedValue=i,n.constant=!1,n.externalBuffer=null,this.setAccessor(this.settings),!0}_checkExternalBuffer(e){const{value:t}=e;if(!ArrayBuffer.isView(t))throw new Error(`Attribute ${this.id} value is not TypedArray`);const n=this.settings.defaultType;let s=!1;if(this.doublePrecision&&(s=t.BYTES_PER_ELEMENT<4),s)throw new Error(`Attribute ${this.id} does not support ${t.constructor.name}`);!(t instanceof n)&&this.settings.normalized&&!("normalized"in e)&&ae.warn(`Attribute ${this.id} is normalized`)()}normalizeConstant(e){switch(this.settings.type){case"snorm8":return new Float32Array(e).map(t=>(t+128)/255*2-1);case"snorm16":return new Float32Array(e).map(t=>(t+32768)/65535*2-1);case"unorm8":return new Float32Array(e).map(t=>t/255);case"unorm16":return new Float32Array(e).map(t=>t/65535);default:return e}}_normalizeValue(e,t,n){const{defaultValue:s,size:i}=this.settings;if(Number.isFinite(e))return t[n]=e,t;if(!e){let r=i;for(;--r>=0;)t[n+r]=s[r];return t}switch(i){case 4:t[n+3]=Number.isFinite(e[3])?e[3]:s[3];case 3:t[n+2]=Number.isFinite(e[2])?e[2]:s[2];case 2:t[n+1]=Number.isFinite(e[1])?e[1]:s[1];case 1:t[n+0]=Number.isFinite(e[0])?e[0]:s[0];break;default:let r=i;for(;--r>=0;)t[n+r]=Number.isFinite(e[r])?e[r]:s[r]}return t}_areValuesEqual(e,t){if(!e||!t)return!1;const{size:n}=this;for(let s=0;s<n;s++)if(e[s]!==t[s])return!1;return!0}_createBuffer(e){this._buffer&&this._buffer.destroy();const{isIndexed:t,type:n}=this.settings;return this._buffer=this.device.createBuffer({...this._buffer?.props,id:this.id,usage:(t?de.INDEX:de.VERTEX)|de.COPY_DST,indexType:t?n:void 0,byteLength:e}),this._buffer}}const ps=[],gs=[];function qt(a,e=0,t=1/0){let n=ps;const s={index:-1,data:a,target:[]};return a?typeof a[Symbol.iterator]=="function"?n=a:a.length>0&&(gs.length=a.length,n=gs):n=ps,(e>0||Number.isFinite(t))&&(n=(Array.isArray(n)?n:Array.from(n)).slice(e,t),s.index=e-1),{iterable:n,objectInfo:s}}function Si(a){return a&&a[Symbol.asyncIterator]}function Ei(a,e){const{size:t,stride:n,offset:s,startIndices:i,nested:r}=e,o=a.BYTES_PER_ELEMENT,l=n?n/o:t,c=s?s/o:0,u=Math.floor((a.length-c)/l);return(f,{index:p,target:x})=>{if(!i){const M=p*l+c;for(let R=0;R<t;R++)x[R]=a[M+R];return x}const I=i[p],L=i[p+1]||u;let E;if(r){E=new Array(L-I);for(let M=I;M<L;M++){const R=M*l+c;x=new Array(t);for(let T=0;T<t;T++)x[T]=a[R+T];E[M-I]=x}}else if(l===t)E=a.subarray(I*t+c,L*t+c);else{E=new a.constructor((L-I)*t);let M=0;for(let R=I;R<L;R++){const T=R*l+c;for(let B=0;B<t;B++)E[M++]=a[T+B]}}return E}}const aa=[],Ct=[[0,1/0]];function la(a,e){if(a===Ct||(e[0]<0&&(e[0]=0),e[0]>=e[1]))return a;const t=[],n=a.length;let s=0;for(let i=0;i<n;i++){const r=a[i];r[1]<e[0]?(t.push(r),s=i+1):r[0]>e[1]?t.push(r):e=[Math.min(r[0],e[0]),Math.max(r[1],e[1])]}return t.splice(s,0,e),t}const ca={interpolation:{duration:0,easing:a=>a},spring:{stiffness:.05,damping:.5}};function Oi(a,e){if(!a)return null;Number.isFinite(a)&&(a={type:"interpolation",duration:a});const t=a.type||"interpolation";return{...ca[t],...e,...a,type:t}}class Mi extends oa{constructor(e,t){super(e,t,{startIndices:null,lastExternalBuffer:null,binaryValue:null,binaryAccessor:null,needsUpdate:!0,needsRedraw:!1,layoutChanged:!1,updateRanges:Ct}),this.constant=!1,this.settings.update=t.update||(t.accessor?this._autoUpdater:void 0),Object.seal(this.settings),Object.seal(this.state),this._validateAttributeUpdaters()}get startIndices(){return this.state.startIndices}set startIndices(e){this.state.startIndices=e}needsUpdate(){return this.state.needsUpdate}needsRedraw({clearChangedFlags:e=!1}={}){const t=this.state.needsRedraw;return this.state.needsRedraw=t&&!e,t}layoutChanged(){return this.state.layoutChanged}setAccessor(e){var t;(t=this.state).layoutChanged||(t.layoutChanged=!ia(e,this.getAccessor())),super.setAccessor(e)}getUpdateTriggers(){const{accessor:e}=this.settings;return[this.id].concat(typeof e!="function"&&e||[])}supportsTransition(){return!!this.settings.transition}getTransitionSetting(e){if(!e||!this.supportsTransition())return null;const{accessor:t}=this.settings,n=this.settings.transition,s=Array.isArray(t)?e[t.find(i=>e[i])]:e[t];return Oi(s,n)}setNeedsUpdate(e=this.id,t){if(this.state.needsUpdate=this.state.needsUpdate||e,this.setNeedsRedraw(e),t){const{startRow:n=0,endRow:s=1/0}=t;this.state.updateRanges=la(this.state.updateRanges,[n,s])}else this.state.updateRanges=Ct}clearNeedsUpdate(){this.state.needsUpdate=!1,this.state.updateRanges=aa}setNeedsRedraw(e=this.id){this.state.needsRedraw=this.state.needsRedraw||e}allocate(e){const{state:t,settings:n}=this;return n.noAlloc?!1:n.update?(super.allocate(e,t.updateRanges!==Ct),!0):!1}updateBuffer({numInstances:e,data:t,props:n,context:s}){if(!this.needsUpdate())return!1;const{state:{updateRanges:i},settings:{update:r,noAlloc:o}}=this;let l=!0;if(r){for(const[c,u]of i)r.call(s,this,{data:t,startRow:c,endRow:u,props:n,numInstances:e});if(this.value)if(this.constant||!this.buffer||this.buffer.byteLength<this.value.byteLength+this.byteOffset)this.setData({value:this.value,constant:this.constant}),this.constant=!1;else for(const[c,u]of i){const f=Number.isFinite(c)?this.getVertexOffset(c):0,p=Number.isFinite(u)?this.getVertexOffset(u):o||!Number.isFinite(e)?this.value.length:e*this.size;super.updateSubBuffer({startOffset:f,endOffset:p})}this._checkAttributeArray()}else l=!1;return this.clearNeedsUpdate(),this.setNeedsRedraw(),l}setConstantValue(e){return this.device.type==="webgpu"||e===void 0||typeof e=="function"?!1:(this.setData({constant:!0,value:e})&&this.setNeedsRedraw(),this.clearNeedsUpdate(),!0)}setExternalBuffer(e){const{state:t}=this;return e?(this.clearNeedsUpdate(),t.lastExternalBuffer===e||(t.lastExternalBuffer=e,this.setNeedsRedraw(),this.setData(e)),!0):(t.lastExternalBuffer=null,!1)}setBinaryValue(e,t=null){const{state:n,settings:s}=this;if(!e)return n.binaryValue=null,n.binaryAccessor=null,!1;if(s.noAlloc)return!1;if(n.binaryValue===e)return this.clearNeedsUpdate(),!0;if(n.binaryValue=e,this.setNeedsRedraw(),s.transform||t!==this.startIndices){ArrayBuffer.isView(e)&&(e={value:e});const r=e;Le(ArrayBuffer.isView(r.value),`invalid ${s.accessor}`);const o=!!r.size&&r.size!==this.size;return n.binaryAccessor=Ei(r.value,{size:r.size||this.size,stride:r.stride,offset:r.offset,startIndices:t,nested:o}),!1}return this.clearNeedsUpdate(),this.setData(e),!0}getVertexOffset(e){const{startIndices:t}=this;return(t?e<t.length?t[e]:this.numInstances:e)*this.size}getValue(){const e=this.settings.shaderAttributes,t=super.getValue();if(!e)return t;for(const n in e)Object.assign(t,super.getValue(n,e[n]));return t}getBufferLayout(e){this.state.layoutChanged=!1;const t=this.settings.shaderAttributes,n=super._getBufferLayout(),{stepMode:s}=this.settings;if(s==="dynamic"?n.stepMode=e?e.isInstanced?"instance":"vertex":"instance":n.stepMode=s??"vertex",!t)return n;for(const i in t){const r=super._getBufferLayout(i,t[i]);n.attributes.push(...r.attributes)}return n}_autoUpdater(e,{data:t,startRow:n,endRow:s,props:i,numInstances:r}){if(e.constant&&this.context.device.type!=="webgpu")return;const{settings:o,state:l,value:c,size:u,startIndices:f}=e,{accessor:p,transform:x}=o;let I=l.binaryAccessor||(typeof p=="function"?p:i[p]);typeof I!="function"&&(I=()=>I),Le(typeof I=="function",`accessor "${p}" is not a function`);let L=e.getVertexOffset(n);const{iterable:E,objectInfo:M}=qt(t,n,s);for(const R of E){M.index++;let T=I(R,M);if(x&&(T=x.call(this,T)),f){const B=(M.index<f.length-1?f[M.index+1]:r)-f[M.index];if(T&&Array.isArray(T[0])){let V=L;for(const z of T)e._normalizeValue(z,c,V),V+=u}else T&&T.length>u?c.set(T,L):(e._normalizeValue(T,M.target,0),vr({target:c,source:M.target,start:L,count:B}));L+=B*u}else e._normalizeValue(T,c,L),L+=u}}_validateAttributeUpdaters(){const{settings:e}=this;if(!(e.noAlloc||typeof e.update=="function"))throw new Error(`Attribute ${this.id} missing update or accessor`)}_checkAttributeArray(){const{value:e}=this,t=Math.min(4,this.size);if(e&&e.length>=t){let n=!0;switch(t){case 4:n=n&&Number.isFinite(e[3]);case 3:n=n&&Number.isFinite(e[2]);case 2:n=n&&Number.isFinite(e[1]);case 1:n=n&&Number.isFinite(e[0]);break;default:n=!1}if(!n)throw new Error(`Illegal attribute generated for ${this.id}`)}}}function ln(a){const{source:e,target:t,start:n=0,size:s,getData:i}=a,r=a.end||t.length,o=e.length,l=r-n;if(o>l){t.set(e.subarray(0,l),n);return}if(t.set(e,n),!i)return;let c=o;for(;c<l;){const u=i(c,e);for(let f=0;f<s;f++)t[n+c]=u[f]||0,c++}}function ua({source:a,target:e,size:t,getData:n,sourceStartIndices:s,targetStartIndices:i}){if(!s||!i)return ln({source:a,target:e,size:t,getData:n}),e;let r=0,o=0;const l=n&&((u,f)=>n(u+o,f)),c=Math.min(s.length,i.length);for(let u=1;u<c;u++){const f=s[u]*t,p=i[u]*t;ln({source:a.subarray(r,f),target:e,start:o,end:p,size:t,getData:l}),r=f,o=p}return o<e.length&&ln({source:[],target:e,start:o,size:t,getData:l}),e}function fa(a){const{device:e,settings:t,value:n}=a,s=new Mi(e,t);return s.setData({value:n instanceof Float64Array?new Float64Array(0):new Float32Array(0),normalized:t.normalized}),s}function Bi(a){switch(a){case 1:return"float";case 2:return"vec2";case 3:return"vec3";case 4:return"vec4";default:throw new Error(`No defined attribute type for size "${a}"`)}}function Fi(a){switch(a){case 1:return"float32";case 2:return"float32x2";case 3:return"float32x3";case 4:return"float32x4";default:throw new Error("invalid type size")}}function Ni(a){a.push(a.shift())}function ha(a,e){const{doublePrecision:t,settings:n,value:s,size:i}=a,r=t&&s instanceof Float64Array?2:1;let o=0;const{shaderAttributes:l}=a.settings;if(l)for(const c of Object.values(l))o=Math.max(o,c.vertexOffset??0);return(n.noAlloc?s.length:(e+o)*i)*r}function Ri({device:a,source:e,target:t}){return(!t||t.byteLength<e.byteLength)&&(t?.destroy(),t=a.createBuffer({byteLength:e.byteLength,usage:e.usage})),t}function Di({device:a,buffer:e,attribute:t,fromLength:n,toLength:s,fromStartIndices:i,getData:r=o=>o}){const o=t.doublePrecision&&t.value instanceof Float64Array?2:1,l=t.size*o,c=t.byteOffset,u=t.settings.bytesPerElement<4?c/t.settings.bytesPerElement*4:c,f=t.startIndices,p=i&&f,x=t.isConstant;if(!p&&e&&n>=s)return e;const I=t.value instanceof Float64Array?Float32Array:t.value.constructor,L=x?t.value:new I(t.getBuffer().readSyncWebGL(c,s*I.BYTES_PER_ELEMENT).buffer);if(t.settings.normalized&&!x){const T=r;r=(B,V)=>t.normalizeConstant(T(B,V))}const E=x?(T,B)=>r(L,B):(T,B)=>r(L.subarray(T+c,T+c+l),B),M=e?new Float32Array(e.readSyncWebGL(u,n*4).buffer):new Float32Array(0),R=new Float32Array(s);return ua({source:M,target:R,sourceStartIndices:i,targetStartIndices:f,size:l,getData:E}),(!e||e.byteLength<R.byteLength+u)&&(e?.destroy(),e=a.createBuffer({byteLength:R.byteLength+u,usage:35050})),e.write(R,u),e}class Ui{constructor({device:e,attribute:t,timeline:n}){this.buffers=[],this.currentLength=0,this.device=e,this.transition=new Sn(n),this.attribute=t,this.attributeInTransition=fa(t),this.currentStartIndices=t.startIndices}get inProgress(){return this.transition.inProgress}start(e,t,n=1/0){this.settings=e,this.currentStartIndices=this.attribute.startIndices,this.currentLength=ha(this.attribute,t),this.transition.start({...e,duration:n})}update(){const e=this.transition.update();return e&&this.onUpdate(),e}setBuffer(e){this.attributeInTransition.setData({buffer:e,normalized:this.attribute.settings.normalized,value:this.attributeInTransition.value})}cancel(){this.transition.cancel()}delete(){this.cancel();for(const e of this.buffers)e.destroy();this.buffers.length=0}}class da extends Ui{constructor({device:e,attribute:t,timeline:n}){super({device:e,attribute:t,timeline:n}),this.type="interpolation",this.transform=ya(e,t)}start(e,t){const n=this.currentLength,s=this.currentStartIndices;if(super.start(e,t,e.duration),e.duration<=0){this.transition.cancel();return}const{buffers:i,attribute:r}=this;Ni(i),i[0]=Di({device:this.device,buffer:i[0],attribute:r,fromLength:n,toLength:this.currentLength,fromStartIndices:s,getData:e.enter}),i[1]=Ri({device:this.device,source:i[0],target:i[1]}),this.setBuffer(i[1]);const{transform:o}=this,l=o.model;let c=Math.floor(this.currentLength/r.size);$i(r)&&(c/=2),l.setVertexCount(c),r.isConstant?(l.setAttributes({aFrom:i[0]}),l.setConstantAttributes({aTo:r.value})):l.setAttributes({aFrom:i[0],aTo:r.getBuffer()}),o.transformFeedback.setBuffers({vCurrent:i[1]})}onUpdate(){const{duration:e,easing:t}=this.settings,{time:n}=this.transition;let s=n/e;t&&(s=t(s));const{model:i}=this.transform,r={time:s};i.shaderInputs.setProps({interpolation:r}),this.transform.run({discard:!0})}delete(){super.delete(),this.transform.destroy()}}const pa=`uniform interpolationUniforms {
  float time;
} interpolation;
`,ms={name:"interpolation",vs:pa,uniformTypes:{time:"f32"}},ga=`#version 300 es
#define SHADER_NAME interpolation-transition-vertex-shader

in ATTRIBUTE_TYPE aFrom;
in ATTRIBUTE_TYPE aTo;
out ATTRIBUTE_TYPE vCurrent;

void main(void) {
  vCurrent = mix(aFrom, aTo, interpolation.time);
  gl_Position = vec4(0.0);
}
`,ma=`#version 300 es
#define SHADER_NAME interpolation-transition-vertex-shader

in ATTRIBUTE_TYPE aFrom;
in ATTRIBUTE_TYPE aFrom64Low;
in ATTRIBUTE_TYPE aTo;
in ATTRIBUTE_TYPE aTo64Low;
out ATTRIBUTE_TYPE vCurrent;
out ATTRIBUTE_TYPE vCurrent64Low;

vec2 mix_fp64(vec2 a, vec2 b, float x) {
  vec2 range = sub_fp64(b, a);
  return sum_fp64(a, mul_fp64(range, vec2(x, 0.0)));
}

void main(void) {
  for (int i=0; i<ATTRIBUTE_SIZE; i++) {
    vec2 value = mix_fp64(vec2(aFrom[i], aFrom64Low[i]), vec2(aTo[i], aTo64Low[i]), interpolation.time);
    vCurrent[i] = value.x;
    vCurrent64Low[i] = value.y;
  }
  gl_Position = vec4(0.0);
}
`;function $i(a){return a.doublePrecision&&a.value instanceof Float64Array}function ya(a,e){const t=e.size,n=Bi(t),s=Fi(t),i=e.getBufferLayout();return $i(e)?new Ze(a,{vs:ma,bufferLayout:[{name:"aFrom",byteStride:8*t,attributes:[{attribute:"aFrom",format:s,byteOffset:0},{attribute:"aFrom64Low",format:s,byteOffset:4*t}]},{name:"aTo",byteStride:8*t,attributes:[{attribute:"aTo",format:s,byteOffset:0},{attribute:"aTo64Low",format:s,byteOffset:4*t}]}],modules:[Ao,ms],defines:{ATTRIBUTE_TYPE:n,ATTRIBUTE_SIZE:t},moduleSettings:{},varyings:["vCurrent","vCurrent64Low"],bufferMode:35980,disableWarnings:!0}):new Ze(a,{vs:ga,bufferLayout:[{name:"aFrom",format:s},{name:"aTo",format:i.attributes[0].format}],modules:[ms],defines:{ATTRIBUTE_TYPE:n},varyings:["vCurrent"],disableWarnings:!0})}class _a extends Ui{constructor({device:e,attribute:t,timeline:n}){super({device:e,attribute:t,timeline:n}),this.type="spring",this.texture=Ia(e),this.framebuffer=Ta(e,this.texture),this.transform=ka(e,t)}start(e,t){const n=this.currentLength,s=this.currentStartIndices;super.start(e,t);const{buffers:i,attribute:r}=this;for(let l=0;l<2;l++)i[l]=Di({device:this.device,buffer:i[l],attribute:r,fromLength:n,toLength:this.currentLength,fromStartIndices:s,getData:e.enter});i[2]=Ri({device:this.device,source:i[0],target:i[2]}),this.setBuffer(i[1]);const{model:o}=this.transform;o.setVertexCount(Math.floor(this.currentLength/r.size)),r.isConstant?o.setConstantAttributes({aTo:r.value}):o.setAttributes({aTo:r.getBuffer()})}onUpdate(){const{buffers:e,transform:t,framebuffer:n,transition:s}=this,i=this.settings;t.model.setAttributes({aPrev:e[0],aCur:e[1]}),t.transformFeedback.setBuffers({vNext:e[2]});const r={stiffness:i.stiffness,damping:i.damping};t.model.shaderInputs.setProps({spring:r}),t.run({framebuffer:n,discard:!1,parameters:{viewport:[0,0,1,1]},clearColor:[0,0,0,0]}),Ni(e),this.setBuffer(e[1]),this.device.readPixelsToArrayWebGL(n)[0]>0||s.end()}delete(){super.delete(),this.transform.destroy(),this.texture.destroy(),this.framebuffer.destroy()}}const xa=`uniform springUniforms {
  float damping;
  float stiffness;
} spring;
`,va={name:"spring",vs:xa,uniformTypes:{damping:"f32",stiffness:"f32"}},ba=`#version 300 es
#define SHADER_NAME spring-transition-vertex-shader

#define EPSILON 0.00001

in ATTRIBUTE_TYPE aPrev;
in ATTRIBUTE_TYPE aCur;
in ATTRIBUTE_TYPE aTo;
out ATTRIBUTE_TYPE vNext;
out float vIsTransitioningFlag;

ATTRIBUTE_TYPE getNextValue(ATTRIBUTE_TYPE cur, ATTRIBUTE_TYPE prev, ATTRIBUTE_TYPE dest) {
  ATTRIBUTE_TYPE velocity = cur - prev;
  ATTRIBUTE_TYPE delta = dest - cur;
  ATTRIBUTE_TYPE force = delta * spring.stiffness;
  ATTRIBUTE_TYPE resistance = velocity * spring.damping;
  return force - resistance + velocity + cur;
}

void main(void) {
  bool isTransitioning = length(aCur - aPrev) > EPSILON || length(aTo - aCur) > EPSILON;
  vIsTransitioningFlag = isTransitioning ? 1.0 : 0.0;

  vNext = getNextValue(aCur, aPrev, aTo);
  gl_Position = vec4(0, 0, 0, 1);
  gl_PointSize = 100.0;
}
`,wa=`#version 300 es
#define SHADER_NAME spring-transition-is-transitioning-fragment-shader

in float vIsTransitioningFlag;

out vec4 fragColor;

void main(void) {
  if (vIsTransitioningFlag == 0.0) {
    discard;
  }
  fragColor = vec4(1.0);
}`;function ka(a,e){const t=Bi(e.size),n=Fi(e.size);return new Ze(a,{vs:ba,fs:wa,bufferLayout:[{name:"aPrev",format:n},{name:"aCur",format:n},{name:"aTo",format:e.getBufferLayout().attributes[0].format}],varyings:["vNext"],modules:[va],defines:{ATTRIBUTE_TYPE:t},parameters:{depthCompare:"always",blendColorOperation:"max",blendColorSrcFactor:"one",blendColorDstFactor:"one",blendAlphaOperation:"max",blendAlphaSrcFactor:"one",blendAlphaDstFactor:"one"}})}function Ia(a){return a.createTexture({data:new Uint8Array(4),format:"rgba8unorm",mipmaps:!1,width:1,height:1})}function Ta(a,e){return a.createFramebuffer({id:"spring-transition-is-transitioning-framebuffer",width:1,height:1,colorAttachments:[e]})}const Pa={interpolation:da,spring:_a};class Aa{constructor(e,{id:t,timeline:n}){if(!e)throw new Error("AttributeTransitionManager is constructed without device");this.id=t,this.device=e,this.timeline=n,this.transitions={},this.needsRedraw=!1,this.numInstances=1}finalize(){for(const e in this.transitions)this._removeTransition(e)}update({attributes:e,transitions:t,numInstances:n}){this.numInstances=n||1;for(const s in e){const i=e[s],r=i.getTransitionSetting(t);r&&this._updateAttribute(s,i,r)}for(const s in this.transitions){const i=e[s];(!i||!i.getTransitionSetting(t))&&this._removeTransition(s)}}hasAttribute(e){const t=this.transitions[e];return t&&t.inProgress}getAttributes(){const e={};for(const t in this.transitions){const n=this.transitions[t];n.inProgress&&(e[t]=n.attributeInTransition)}return e}run(){if(this.numInstances===0)return!1;for(const t in this.transitions)this.transitions[t].update()&&(this.needsRedraw=!0);const e=this.needsRedraw;return this.needsRedraw=!1,e}_removeTransition(e){this.transitions[e].delete(),delete this.transitions[e]}_updateAttribute(e,t,n){const s=this.transitions[e];let i=!s||s.type!==n.type;if(i){s&&this._removeTransition(e);const r=Pa[n.type];r?this.transitions[e]=new r({attribute:t,timeline:this.timeline,device:this.device}):(ae.error(`unsupported transition type '${n.type}'`)(),i=!1)}(i||t.needsRedraw())&&(this.needsRedraw=!0,this.transitions[e].start(n,this.numInstances))}}const ys="attributeManager.invalidate",Ca="attributeManager.updateStart",La="attributeManager.updateEnd",Sa="attribute.updateStart",Ea="attribute.allocate",Oa="attribute.updateEnd";class Ma{constructor(e,{id:t="attribute-manager",stats:n,timeline:s}={}){this.mergeBoundsMemoized=ei(br),this.id=t,this.device=e,this.attributes={},this.updateTriggers={},this.needsRedraw=!0,this.userData={},this.stats=n,this.attributeTransitionManager=new Aa(e,{id:`${t}-transitions`,timeline:s}),Object.seal(this)}finalize(){for(const e in this.attributes)this.attributes[e].delete();this.attributeTransitionManager.finalize()}getNeedsRedraw(e={clearRedrawFlags:!1}){const t=this.needsRedraw;return this.needsRedraw=this.needsRedraw&&!e.clearRedrawFlags,t&&this.id}setNeedsRedraw(){this.needsRedraw=!0}add(e){this._add(e)}addInstanced(e){this._add(e,{stepMode:"instance"})}remove(e){for(const t of e)this.attributes[t]!==void 0&&(this.attributes[t].delete(),delete this.attributes[t])}invalidate(e,t){const n=this._invalidateTrigger(e,t);ge(ys,this,e,n)}invalidateAll(e){for(const t in this.attributes)this.attributes[t].setNeedsUpdate(t,e);ge(ys,this,"all")}update({data:e,numInstances:t,startIndices:n=null,transitions:s,props:i={},buffers:r={},context:o={}}){let l=!1;ge(Ca,this),this.stats&&this.stats.get("Update Attributes").timeStart();for(const c in this.attributes){const u=this.attributes[c],f=u.settings.accessor;u.startIndices=n,u.numInstances=t,i[c]&&ae.removed(`props.${c}`,`data.attributes.${c}`)(),u.setExternalBuffer(r[c])||u.setBinaryValue(typeof f=="string"?r[f]:void 0,e.startIndices)||typeof f=="string"&&!r[f]&&u.setConstantValue(i[f])||u.needsUpdate()&&(l=!0,this._updateAttribute({attribute:u,numInstances:t,data:e,props:i,context:o})),this.needsRedraw=this.needsRedraw||u.needsRedraw()}l&&ge(La,this,t),this.stats&&this.stats.get("Update Attributes").timeEnd(),this.attributeTransitionManager.update({attributes:this.attributes,numInstances:t,transitions:s})}updateTransition(){const{attributeTransitionManager:e}=this,t=e.run();return this.needsRedraw=this.needsRedraw||t,t}getAttributes(){return{...this.attributes,...this.attributeTransitionManager.getAttributes()}}getBounds(e){const t=e.map(n=>this.attributes[n]?.getBounds());return this.mergeBoundsMemoized(t)}getChangedAttributes(e={clearChangedFlags:!1}){const{attributes:t,attributeTransitionManager:n}=this,s={...n.getAttributes()};for(const i in t){const r=t[i];r.needsRedraw(e)&&!n.hasAttribute(i)&&(s[i]=r)}return s}getBufferLayouts(e){return Object.values(this.getAttributes()).map(t=>t.getBufferLayout(e))}_add(e,t){for(const n in e){const s=e[n],i={...s,id:n,size:s.isIndexed&&1||s.size||1,...t};this.attributes[n]=new Mi(this.device,i)}this._mapUpdateTriggersToAttributes()}_mapUpdateTriggersToAttributes(){const e={};for(const t in this.attributes)this.attributes[t].getUpdateTriggers().forEach(s=>{e[s]||(e[s]=[]),e[s].push(t)});this.updateTriggers=e}_invalidateTrigger(e,t){const{attributes:n,updateTriggers:s}=this,i=s[e];return i&&i.forEach(r=>{const o=n[r];o&&o.setNeedsUpdate(o.id,t)}),i}_updateAttribute(e){const{attribute:t,numInstances:n}=e;if(ge(Sa,t),t.constant){t.setConstantValue(t.value);return}t.allocate(n)&&ge(Ea,t,n),t.updateBuffer(e)&&(this.needsRedraw=!0,ge(Oa,t,n))}}class Ba extends Sn{get value(){return this._value}_onUpdate(){const{time:e,settings:{fromValue:t,toValue:n,duration:s,easing:i}}=this,r=i(e/s);this._value=wr(t,n,r)}}const _s=1e-5;function xs(a,e,t,n,s){const i=e-a,o=(t-e)*s,l=-i*n;return o+l+i+e}function Fa(a,e,t,n,s){if(Array.isArray(t)){const i=[];for(let r=0;r<t.length;r++)i[r]=xs(a[r],e[r],t[r],n,s);return i}return xs(a,e,t,n,s)}function vs(a,e){if(Array.isArray(a)){let t=0;for(let n=0;n<a.length;n++){const s=a[n]-e[n];t+=s*s}return Math.sqrt(t)}return Math.abs(a-e)}class Na extends Sn{get value(){return this._currValue}_onUpdate(){const{fromValue:e,toValue:t,damping:n,stiffness:s}=this.settings,{_prevValue:i=e,_currValue:r=e}=this;let o=Fa(i,r,t,n,s);const l=vs(o,t),c=vs(o,r);l<_s&&c<_s&&(o=t,this.end()),this._prevValue=r,this._currValue=o}}const Ra={interpolation:Ba,spring:Na};class Da{constructor(e){this.transitions=new Map,this.timeline=e}get active(){return this.transitions.size>0}add(e,t,n,s){const{transitions:i}=this;if(i.has(e)){const l=i.get(e),{value:c=l.settings.fromValue}=l;t=c,this.remove(e)}if(s=Oi(s),!s)return;const r=Ra[s.type];if(!r){ae.error(`unsupported transition type '${s.type}'`)();return}const o=new r(this.timeline);o.start({...s,fromValue:t,toValue:n}),i.set(e,o)}remove(e){const{transitions:t}=this;t.has(e)&&(t.get(e).cancel(),t.delete(e))}update(){const e={};for(const[t,n]of this.transitions)n.update(),e[t]=n.value,n.inProgress||this.remove(t);return e}clear(){for(const e of this.transitions.keys())this.remove(e)}}function Ua(a){const e=a[Re];for(const t in e){const n=e[t],{validate:s}=n;if(s&&!s(a[t],n))throw new Error(`Invalid prop ${t}: ${a[t]}`)}}function $a(a,e){const t=zi({newProps:a,oldProps:e,propTypes:a[Re],ignoreProps:{data:null,updateTriggers:null,extensions:null,transitions:null}}),n=Va(a,e);let s=!1;return n||(s=Wa(a,e)),{dataChanged:n,propsChanged:t,updateTriggersChanged:s,extensionsChanged:Ga(a,e),transitionsChanged:za(a,e)}}function za(a,e){if(!a.transitions)return!1;const t={},n=a[Re];let s=!1;for(const i in a.transitions){const r=n[i],o=r&&r.type;(o==="number"||o==="color"||o==="array")&&wn(a[i],e[i],r)&&(t[i]=!0,s=!0)}return s?t:!1}function zi({newProps:a,oldProps:e,ignoreProps:t={},propTypes:n={},triggerName:s="props"}){if(e===a)return!1;if(typeof a!="object"||a===null)return`${s} changed shallowly`;if(typeof e!="object"||e===null)return`${s} changed shallowly`;for(const i of Object.keys(a))if(!(i in t)){if(!(i in e))return`${s}.${i} added`;const r=wn(a[i],e[i],n[i]);if(r)return`${s}.${i} ${r}`}for(const i of Object.keys(e))if(!(i in t)){if(!(i in a))return`${s}.${i} dropped`;if(!Object.hasOwnProperty.call(a,i)){const r=wn(a[i],e[i],n[i]);if(r)return`${s}.${i} ${r}`}}return!1}function wn(a,e,t){let n=t&&t.equal;return n&&!n(a,e,t)||!n&&(n=a&&e&&a.equals,n&&!n.call(a,e))?"changed deeply":!n&&e!==a?"changed shallowly":null}function Va(a,e){if(e===null)return"oldProps is null, initial diff";let t=!1;const{dataComparator:n,_dataDiff:s}=a;return n?n(a.data,e.data)||(t="Data comparator detected a change"):a.data!==e.data&&(t="A new data container was supplied"),t&&s&&(t=s(a.data,e.data)||t),t}function Wa(a,e){if(e===null)return{all:!0};if("all"in a.updateTriggers&&bs(a,e,"all"))return{all:!0};const t={};let n=!1;for(const s in a.updateTriggers)s!=="all"&&bs(a,e,s)&&(t[s]=!0,n=!0);return n?t:!1}function Ga(a,e){if(e===null)return!0;const t=e.extensions,{extensions:n}=a;if(n===t)return!1;if(!t||!n||n.length!==t.length)return!0;for(let s=0;s<n.length;s++)if(!n[s].equals(t[s]))return!0;return!1}function bs(a,e,t){let n=a.updateTriggers[t];n=n??{};let s=e.updateTriggers[t];return s=s??{},zi({oldProps:s,newProps:n,triggerName:t})}const ja="count(): argument not an object",Ha="count(): argument not a container";function qa(a){if(!Ka(a))throw new Error(ja);if(typeof a.count=="function")return a.count();if(Number.isFinite(a.size))return a.size;if(Number.isFinite(a.length))return a.length;if(Ya(a))return Object.keys(a).length;throw new Error(Ha)}function Ya(a){return a!==null&&typeof a=="object"&&a.constructor===Object}function Ka(a){return a!==null&&typeof a=="object"}function ws(a,e){if(!e)return a;const t={...a,...e};if("defines"in e&&(t.defines={...a.defines,...e.defines}),"modules"in e&&(t.modules=(a.modules||[]).concat(e.modules),e.modules.some(n=>n.name==="project64"))){const n=t.modules.findIndex(s=>s.name==="project32");n>=0&&t.modules.splice(n,1)}if("inject"in e)if(!a.inject)t.inject=e.inject;else{const n={...a.inject};for(const s in e.inject)n[s]=(n[s]||"")+e.inject[s];t.inject=n}return t}const Za={minFilter:"linear",mipmapFilter:"linear",magFilter:"linear",addressModeU:"clamp-to-edge",addressModeV:"clamp-to-edge"},kn={};function Xa(a,e,t,n){if(t instanceof Ln)return t;t.constructor&&t.constructor.name!=="Object"&&(t={data:t});let s=null;t.compressed&&(s={minFilter:"linear",mipmapFilter:t.data.length>1?"nearest":"linear"});const i=e.createTexture({...t,sampler:{...Za,...s,...n},mipmaps:!0});return kn[i.id]=a,i}function Ja(a,e){!e||!(e instanceof Ln)||kn[e.id]===a&&(e.delete(),delete kn[e.id])}const Qa={boolean:{validate(a,e){return!0},equal(a,e,t){return!!a==!!e}},number:{validate(a,e){return Number.isFinite(a)&&(!("max"in e)||a<=e.max)&&(!("min"in e)||a>=e.min)}},color:{validate(a,e){return e.optional&&!a||In(a)&&(a.length===3||a.length===4)},equal(a,e,t){return mt(a,e,1)}},accessor:{validate(a,e){const t=Vt(a);return t==="function"||t===Vt(e.value)},equal(a,e,t){return typeof e=="function"?!0:mt(a,e,1)}},array:{validate(a,e){return e.optional&&!a||In(a)},equal(a,e,t){const{compare:n}=t,s=Number.isInteger(n)?n:n?1:0;return n?mt(a,e,s):a===e}},object:{equal(a,e,t){if(t.ignore)return!0;const{compare:n}=t,s=Number.isInteger(n)?n:n?1:0;return n?mt(a,e,s):a===e}},function:{validate(a,e){return e.optional&&!a||typeof a=="function"},equal(a,e,t){return!t.compare&&t.ignore!==!1||a===e}},data:{transform:(a,e,t)=>{if(!a)return a;const{dataTransform:n}=t.props;return n?n(a):typeof a.shape=="string"&&a.shape.endsWith("-table")&&Array.isArray(a.data)?a.data:a}},image:{transform:(a,e,t)=>{const n=t.context;return!n||!n.device?null:Xa(t.id,n.device,a,{...e.parameters,...t.props.textureParameters})},release:(a,e,t)=>{Ja(t.id,a)}}};function el(a){const e={},t={},n={};for(const[s,i]of Object.entries(a)){const r=i?.deprecatedFor;if(r)n[s]=Array.isArray(r)?r:[r];else{const o=tl(s,i);e[s]=o,t[s]=o.value}}return{propTypes:e,defaultProps:t,deprecatedProps:n}}function tl(a,e){switch(Vt(e)){case"object":return nt(a,e);case"array":return nt(a,{type:"array",value:e,compare:!1});case"boolean":return nt(a,{type:"boolean",value:e});case"number":return nt(a,{type:"number",value:e});case"function":return nt(a,{type:"function",value:e,compare:!0});default:return{name:a,type:"unknown",value:e}}}function nt(a,e){return"type"in e?{name:a,...Qa[e.type],...e}:"value"in e?{name:a,type:Vt(e.value),...e}:{name:a,type:"object",value:e}}function In(a){return Array.isArray(a)||ArrayBuffer.isView(a)}function Vt(a){return In(a)?"array":a===null?"null":typeof a}function nl(a,e){let t;for(let i=e.length-1;i>=0;i--){const r=e[i];"extensions"in r&&(t=r.extensions)}const n=Tn(a.constructor,t),s=Object.create(n);s[Bt]=a,s[Ve]={},s[Be]={};for(let i=0;i<e.length;++i){const r=e[i];for(const o in r)s[o]=r[o]}return Object.freeze(s),s}const sl="_mergedDefaultProps";function Tn(a,e){if(!(a instanceof Yt.constructor))return{};let t=sl;if(e)for(const s of e){const i=s.constructor;i&&(t+=`:${i.extensionName||i.name}`)}const n=Vi(a,t);return n||(a[t]=il(a,e||[]))}function il(a,e){if(!a.prototype)return null;const n=Object.getPrototypeOf(a),s=Tn(n),i=Vi(a,"defaultProps")||{},r=el(i),o=Object.assign(Object.create(null),s,r.defaultProps),l=Object.assign(Object.create(null),s?.[Re],r.propTypes),c=Object.assign(Object.create(null),s?.[Xt],r.deprecatedProps);for(const u of e){const f=Tn(u.constructor);f&&(Object.assign(o,f),Object.assign(l,f[Re]),Object.assign(c,f[Xt]))}return rl(o,a),al(o,l),ol(o,c),o[Re]=l,o[Xt]=c,e.length===0&&!zn(a,"_propTypes")&&(a._propTypes=l),o}function rl(a,e){const t=cl(e);Object.defineProperties(a,{id:{writable:!0,value:t}})}function ol(a,e){for(const t in e)Object.defineProperty(a,t,{enumerable:!1,set(n){const s=`${this.id}: ${t}`;for(const i of e[t])zn(this,i)||(this[i]=n);ae.deprecated(s,e[t].join("/"))()}})}function al(a,e){const t={},n={};for(const s in e){const i=e[s],{name:r,value:o}=i;i.async&&(t[r]=o,n[r]=ll(r))}a[qe]=t,a[Ve]={},Object.defineProperties(a,n)}function ll(a){return{enumerable:!0,set(e){typeof e=="string"||e instanceof Promise||Si(e)?this[Ve][a]=e:this[Be][a]=e},get(){if(this[Be]){if(a in this[Be])return this[Be][a]||this[qe][a];if(a in this[Ve]){const e=this[Bt]&&this[Bt].internalState;if(e&&e.hasAsyncProp(a))return e.getAsyncProp(a)||this[qe][a]}}return this[qe][a]}}}function zn(a,e){return Object.prototype.hasOwnProperty.call(a,e)}function Vi(a,e){return zn(a,e)&&a[e]}function cl(a){const e=a.componentName;return e||ae.warn(`${a.name}.componentName not specified`)(),e||a.name}let ul=0;class Yt{constructor(...e){this.props=nl(this,e),this.id=this.props.id,this.count=ul++}clone(e){const{props:t}=this,n={};for(const s in t[qe])s in t[Be]?n[s]=t[Be][s]:s in t[Ve]&&(n[s]=t[Ve][s]);return new this.constructor({...t,...n,...e})}}Yt.componentName="Component";Yt.defaultProps={};const fl=Object.freeze({});class hl{constructor(e){this.component=e,this.asyncProps={},this.onAsyncPropUpdated=()=>{},this.oldProps=null,this.oldAsyncProps=null}finalize(){for(const e in this.asyncProps){const t=this.asyncProps[e];t&&t.type&&t.type.release&&t.type.release(t.resolvedValue,t.type,this.component)}this.asyncProps={},this.component=null,this.resetOldProps()}getOldProps(){return this.oldAsyncProps||this.oldProps||fl}resetOldProps(){this.oldAsyncProps=null,this.oldProps=this.component?this.component.props:null}hasAsyncProp(e){return e in this.asyncProps}getAsyncProp(e){const t=this.asyncProps[e];return t&&t.resolvedValue}isAsyncPropLoading(e){if(e){const t=this.asyncProps[e];return!!(t&&t.pendingLoadCount>0&&t.pendingLoadCount!==t.resolvedLoadCount)}for(const t in this.asyncProps)if(this.isAsyncPropLoading(t))return!0;return!1}reloadAsyncProp(e,t){this._watchPromise(e,Promise.resolve(t))}setAsyncProps(e){this.component=e[Bt]||this.component;const t=e[Be]||{},n=e[Ve]||e,s=e[qe]||{};for(const i in t){const r=t[i];this._createAsyncPropData(i,s[i]),this._updateAsyncProp(i,r),t[i]=this.getAsyncProp(i)}for(const i in n){const r=n[i];this._createAsyncPropData(i,s[i]),this._updateAsyncProp(i,r)}}_fetch(e,t){return null}_onResolve(e,t){}_onError(e,t){}_updateAsyncProp(e,t){if(this._didAsyncInputValueChange(e,t)){if(typeof t=="string"&&(t=this._fetch(e,t)),t instanceof Promise){this._watchPromise(e,t);return}if(Si(t)){this._resolveAsyncIterable(e,t);return}this._setPropValue(e,t)}}_freezeAsyncOldProps(){if(!this.oldAsyncProps&&this.oldProps){this.oldAsyncProps=Object.create(this.oldProps);for(const e in this.asyncProps)Object.defineProperty(this.oldAsyncProps,e,{enumerable:!0,value:this.oldProps[e]})}}_didAsyncInputValueChange(e,t){const n=this.asyncProps[e];return t===n.resolvedValue||t===n.lastValue?!1:(n.lastValue=t,!0)}_setPropValue(e,t){this._freezeAsyncOldProps();const n=this.asyncProps[e];n&&(t=this._postProcessValue(n,t),n.resolvedValue=t,n.pendingLoadCount++,n.resolvedLoadCount=n.pendingLoadCount)}_setAsyncPropValue(e,t,n){const s=this.asyncProps[e];s&&n>=s.resolvedLoadCount&&t!==void 0&&(this._freezeAsyncOldProps(),s.resolvedValue=t,s.resolvedLoadCount=n,this.onAsyncPropUpdated(e,t))}_watchPromise(e,t){const n=this.asyncProps[e];if(n){n.pendingLoadCount++;const s=n.pendingLoadCount;t.then(i=>{this.component&&(i=this._postProcessValue(n,i),this._setAsyncPropValue(e,i,s),this._onResolve(e,i))}).catch(i=>{this._onError(e,i)})}}async _resolveAsyncIterable(e,t){if(e!=="data"){this._setPropValue(e,t);return}const n=this.asyncProps[e];if(!n)return;n.pendingLoadCount++;const s=n.pendingLoadCount;let i=[],r=0;for await(const o of t){if(!this.component)return;const{dataTransform:l}=this.component.props;l?i=l(o,i):i=i.concat(o),Object.defineProperty(i,"__diff",{enumerable:!1,value:[{startRow:r,endRow:i.length}]}),r=i.length,this._setAsyncPropValue(e,i,s)}this._onResolve(e,i)}_postProcessValue(e,t){const n=e.type;return n&&this.component&&(n.release&&n.release(e.resolvedValue,n,this.component),n.transform)?n.transform(t,n,this.component):t}_createAsyncPropData(e,t){if(!this.asyncProps[e]){const s=this.component&&this.component.props[Re];this.asyncProps[e]={type:s&&s[e],lastValue:null,resolvedValue:t,pendingLoadCount:0,resolvedLoadCount:0}}}}class dl extends hl{constructor({attributeManager:e,layer:t}){super(t),this.attributeManager=e,this.needsRedraw=!0,this.needsUpdate=!0,this.subLayers=null,this.usesPickingColorCache=!1}get layer(){return this.component}_fetch(e,t){const n=this.layer,s=n?.props.fetch;return s?s(t,{propName:e,layer:n}):super._fetch(e,t)}_onResolve(e,t){const n=this.layer;if(n){const s=n.props.onDataLoad;e==="data"&&s&&s(t,{propName:e,layer:n})}}_onError(e,t){const n=this.layer;n&&n.raiseError(t,`loading ${e} of ${this.layer}`)}}const pl="layer.changeFlag",gl="layer.initialize",ml="layer.update",yl="layer.finalize",_l="layer.matched",ks=2**24-1,xl=Object.freeze([]),vl=ei(({oldViewport:a,viewport:e})=>a.equals(e));let ve=new Uint8ClampedArray(0);const bl={data:{type:"data",value:xl,async:!0},dataComparator:{type:"function",value:null,optional:!0},_dataDiff:{type:"function",value:a=>a&&a.__diff,optional:!0},dataTransform:{type:"function",value:null,optional:!0},onDataLoad:{type:"function",value:null,optional:!0},onError:{type:"function",value:null,optional:!0},fetch:{type:"function",value:(a,{propName:e,layer:t,loaders:n,loadOptions:s,signal:i})=>{const{resourceManager:r}=t.context;s=s||t.getLoadOptions(),n=n||t.props.loaders,i&&(s={...s,fetch:{...s?.fetch,signal:i}});let o=r.contains(a);return!o&&!s&&(r.add({resourceId:a,data:mn(a,n),persistent:!1}),o=!0),o?r.subscribe({resourceId:a,onChange:l=>t.internalState?.reloadAsyncProp(e,l),consumerId:t.id,requestId:e}):mn(a,n,s)}},updateTriggers:{},visible:!0,pickable:!1,opacity:{type:"number",min:0,max:1,value:1},operation:"draw",onHover:{type:"function",value:null,optional:!0},onClick:{type:"function",value:null,optional:!0},onDragStart:{type:"function",value:null,optional:!0},onDrag:{type:"function",value:null,optional:!0},onDragEnd:{type:"function",value:null,optional:!0},coordinateSystem:pe.DEFAULT,coordinateOrigin:{type:"array",value:[0,0,0],compare:!0},modelMatrix:{type:"array",value:null,compare:!0,optional:!0},wrapLongitude:!1,positionFormat:"XYZ",colorFormat:"RGBA",parameters:{type:"object",value:{},optional:!0,compare:2},loadOptions:{type:"object",value:null,optional:!0,ignore:!0},transitions:null,extensions:[],loaders:{type:"array",value:[],optional:!0,ignore:!0},getPolygonOffset:{type:"function",value:({layerIndex:a})=>[0,-a*100]},highlightedObjectIndex:null,autoHighlight:!1,highlightColor:{type:"accessor",value:[0,0,128,128]}};class Ue extends Yt{constructor(){super(...arguments),this.internalState=null,this.lifecycle=kr.NO_STATE,this.parent=null}static get componentName(){return Object.prototype.hasOwnProperty.call(this,"layerName")?this.layerName:""}get root(){let e=this;for(;e.parent;)e=e.parent;return e}toString(){return`${this.constructor.layerName||this.constructor.name}({id: '${this.props.id}'})`}project(e){Le(this.internalState);const t=this.internalState.viewport||this.context.viewport,n=Ai(e,{viewport:t,modelMatrix:this.props.modelMatrix,coordinateOrigin:this.props.coordinateOrigin,coordinateSystem:this.props.coordinateSystem}),[s,i,r]=Ir(n,t.pixelProjectionMatrix);return e.length===2?[s,i]:[s,i,r]}unproject(e){return Le(this.internalState),(this.internalState.viewport||this.context.viewport).unproject(e)}projectPosition(e,t){Le(this.internalState);const n=this.internalState.viewport||this.context.viewport;return Wo(e,{viewport:n,modelMatrix:this.props.modelMatrix,coordinateOrigin:this.props.coordinateOrigin,coordinateSystem:this.props.coordinateSystem,...t})}get isComposite(){return!1}get isDrawable(){return!0}setState(e){this.setChangeFlags({stateChanged:!0}),Object.assign(this.state,e),this.setNeedsRedraw()}setNeedsRedraw(){this.internalState&&(this.internalState.needsRedraw=!0)}setNeedsUpdate(){this.internalState&&(this.context.layerManager.setNeedsUpdate(String(this)),this.internalState.needsUpdate=!0)}get isLoaded(){return this.internalState?!this.internalState.isAsyncPropLoading():!1}get wrapLongitude(){return this.props.wrapLongitude}isPickable(){return this.props.pickable&&this.props.visible}getModels(){const e=this.state;return e&&(e.models||e.model&&[e.model])||[]}setShaderModuleProps(...e){for(const t of this.getModels())t.shaderInputs.setProps(...e)}getAttributeManager(){return this.internalState&&this.internalState.attributeManager}getCurrentLayer(){return this.internalState&&this.internalState.layer}getLoadOptions(){return this.props.loadOptions}use64bitPositions(){const{coordinateSystem:e}=this.props;return e===pe.DEFAULT||e===pe.LNGLAT||e===pe.CARTESIAN}onHover(e,t){return this.props.onHover&&this.props.onHover(e,t)||!1}onClick(e,t){return this.props.onClick&&this.props.onClick(e,t)||!1}nullPickingColor(){return[0,0,0]}encodePickingColor(e,t=[]){return t[0]=e+1&255,t[1]=e+1>>8&255,t[2]=e+1>>8>>8&255,t}decodePickingColor(e){Le(e instanceof Uint8Array);const[t,n,s]=e;return t+n*256+s*65536-1}getNumInstances(){return Number.isFinite(this.props.numInstances)?this.props.numInstances:this.state&&this.state.numInstances!==void 0?this.state.numInstances:qa(this.props.data)}getStartIndices(){return this.props.startIndices?this.props.startIndices:this.state&&this.state.startIndices?this.state.startIndices:null}getBounds(){return this.getAttributeManager()?.getBounds(["positions","instancePositions"])}getShaders(e){e=ws(e,{disableWarnings:!0,modules:this.context.defaultShaderModules});for(const t of this.props.extensions)e=ws(e,t.getShaders.call(this,t));return e}shouldUpdateState(e){return e.changeFlags.propsOrDataChanged}updateState(e){const t=this.getAttributeManager(),{dataChanged:n}=e.changeFlags;if(n&&t)if(Array.isArray(n))for(const s of n)t.invalidateAll(s);else t.invalidateAll();if(t){const{props:s}=e,i=this.internalState.hasPickingBuffer,r=Number.isInteger(s.highlightedObjectIndex)||s.pickable||s.extensions.some(o=>o.getNeedsPickingBuffer.call(this,o));if(i!==r){this.internalState.hasPickingBuffer=r;const{pickingColors:o,instancePickingColors:l}=t.attributes,c=o||l;c&&(r&&c.constant&&(c.constant=!1,t.invalidate(c.id)),!c.value&&!r&&(c.constant=!0,c.value=[0,0,0]))}}}finalizeState(e){for(const n of this.getModels())n.destroy();const t=this.getAttributeManager();t&&t.finalize(),this.context&&this.context.resourceManager.unsubscribe({consumerId:this.id}),this.internalState&&(this.internalState.uniformTransitions.clear(),this.internalState.finalize())}draw(e){for(const t of this.getModels())t.draw(e.renderPass)}getPickingInfo({info:e,mode:t,sourceLayer:n}){const{index:s}=e;return s>=0&&Array.isArray(this.props.data)&&(e.object=this.props.data[s]),e}raiseError(e,t){t&&(e=new Error(`${t}: ${e.message}`,{cause:e})),this.props.onError?.(e)||this.context?.onError?.(e,this)}getNeedsRedraw(e={clearRedrawFlags:!1}){return this._getNeedsRedraw(e)}needsUpdate(){return this.internalState?this.internalState.needsUpdate||this.hasUniformTransition()||this.shouldUpdateState(this._getUpdateParams()):!1}hasUniformTransition(){return this.internalState?.uniformTransitions.active||!1}activateViewport(e){if(!this.internalState)return;const t=this.internalState.viewport;this.internalState.viewport=e,(!t||!vl({oldViewport:t,viewport:e}))&&(this.setChangeFlags({viewportChanged:!0}),this.isComposite?this.needsUpdate()&&this.setNeedsUpdate():this._update())}invalidateAttribute(e="all"){const t=this.getAttributeManager();t&&(e==="all"?t.invalidateAll():t.invalidate(e))}updateAttributes(e){let t=!1;for(const n in e)e[n].layoutChanged()&&(t=!0);for(const n of this.getModels())this._setModelAttributes(n,e,t)}_updateAttributes(){const e=this.getAttributeManager();if(!e)return;const t=this.props,n=this.getNumInstances(),s=this.getStartIndices();e.update({data:t.data,numInstances:n,startIndices:s,props:t,transitions:t.transitions,buffers:t.data.attributes,context:this});const i=e.getChangedAttributes({clearChangedFlags:!0});this.updateAttributes(i)}_updateAttributeTransition(){const e=this.getAttributeManager();e&&e.updateTransition()}_updateUniformTransition(){const{uniformTransitions:e}=this.internalState;if(e.active){const t=e.update(),n=Object.create(this.props);for(const s in t)Object.defineProperty(n,s,{value:t[s]});return n}return this.props}calculateInstancePickingColors(e,{numInstances:t}){if(e.constant)return;const n=Math.floor(ve.length/4);if(this.internalState.usesPickingColorCache=!0,n<t){t>ks&&ae.warn("Layer has too many data objects. Picking might not be able to distinguish all objects.")(),ve=Mt.allocate(ve,t,{size:4,copy:!0,maxCount:Math.max(t,ks)});const s=Math.floor(ve.length/4),i=[0,0,0];for(let r=n;r<s;r++)this.encodePickingColor(r,i),ve[r*4+0]=i[0],ve[r*4+1]=i[1],ve[r*4+2]=i[2],ve[r*4+3]=0}e.value=ve.subarray(0,t*4)}_setModelAttributes(e,t,n=!1){if(!Object.keys(t).length)return;if(n){const o=this.getAttributeManager();e.setBufferLayout(o.getBufferLayouts(e)),t=o.getAttributes()}const s=e.userData?.excludeAttributes||{},i={},r={};for(const o in t){if(s[o])continue;const l=t[o].getValue();for(const c in l){const u=l[c];u instanceof de?t[o].settings.isIndexed?e.setIndexBuffer(u):i[c]=u:u&&(r[c]=u)}}e.setAttributes(i),e.setConstantAttributes(r)}disablePickingIndex(e){const t=this.props.data;if(!("attributes"in t)){this._disablePickingIndex(e);return}const{pickingColors:n,instancePickingColors:s}=this.getAttributeManager().attributes,i=n||s,r=i&&t.attributes&&t.attributes[i.id];if(r&&r.value){const o=r.value,l=this.encodePickingColor(e);for(let c=0;c<t.length;c++){const u=i.getVertexOffset(c);o[u]===l[0]&&o[u+1]===l[1]&&o[u+2]===l[2]&&this._disablePickingIndex(c)}}else this._disablePickingIndex(e)}_disablePickingIndex(e){const{pickingColors:t,instancePickingColors:n}=this.getAttributeManager().attributes,s=t||n;if(!s)return;const i=s.getVertexOffset(e),r=s.getVertexOffset(e+1);s.buffer.write(new Uint8Array(r-i),i)}restorePickingColors(){const{pickingColors:e,instancePickingColors:t}=this.getAttributeManager().attributes,n=e||t;n&&(this.internalState.usesPickingColorCache&&n.value.buffer!==ve.buffer&&(n.value=ve.subarray(0,n.value.length)),n.updateSubBuffer({startOffset:0}))}_initialize(){Le(!this.internalState),Le(Number.isFinite(this.props.coordinateSystem)),ge(gl,this);const e=this._getAttributeManager();e&&e.addInstanced({instancePickingColors:{type:"uint8",size:4,noAlloc:!0,update:this.calculateInstancePickingColors}}),this.internalState=new dl({attributeManager:e,layer:this}),this._clearChangeFlags(),this.state={},Object.defineProperty(this.state,"attributeManager",{get:()=>(ae.deprecated("layer.state.attributeManager","layer.getAttributeManager()")(),e)}),this.internalState.uniformTransitions=new Da(this.context.timeline),this.internalState.onAsyncPropUpdated=this._onAsyncPropUpdated.bind(this),this.internalState.setAsyncProps(this.props),this.initializeState(this.context);for(const t of this.props.extensions)t.initializeState.call(this,this.context,t);this.setChangeFlags({dataChanged:"init",propsChanged:"init",viewportChanged:!0,extensionsChanged:!0}),this._update()}_transferState(e){ge(_l,this,this===e);const{state:t,internalState:n}=e;this!==e&&(this.internalState=n,this.state=t,this.internalState.setAsyncProps(this.props),this._diffProps(this.props,this.internalState.getOldProps()))}_update(){const e=this.needsUpdate();if(ge(ml,this,e),!e)return;const t=this.props,n=this.context,s=this.internalState,i=n.viewport,r=this._updateUniformTransition();s.propsInTransition=r,n.viewport=s.viewport||i,this.props=r;try{const o=this._getUpdateParams(),l=this.getModels();if(n.device)this.updateState(o);else try{this.updateState(o)}catch{}for(const u of this.props.extensions)u.updateState.call(this,o,u);this.setNeedsRedraw(),this._updateAttributes();const c=this.getModels()[0]!==l[0];this._postUpdate(o,c)}finally{n.viewport=i,this.props=t,this._clearChangeFlags(),s.needsUpdate=!1,s.resetOldProps()}}_finalize(){ge(yl,this),this.finalizeState(this.context);for(const e of this.props.extensions)e.finalizeState.call(this,this.context,e)}_drawLayer({renderPass:e,shaderModuleProps:t=null,uniforms:n={},parameters:s={}}){this._updateAttributeTransition();const i=this.props,r=this.context;this.props=this.internalState.propsInTransition||i;try{t&&this.setShaderModuleProps(t);const{getPolygonOffset:o}=this.props,l=o&&o(n)||[0,0];r.device instanceof Jn&&r.device.setParametersWebGL({polygonOffset:l});for(const c of this.getModels())c.device.type==="webgpu"?c.setParameters({...c.parameters,...s}):c.setParameters(s);if(r.device instanceof Jn)r.device.withParametersWebGL(s,()=>{const c={renderPass:e,shaderModuleProps:t,uniforms:n,parameters:s,context:r};for(const u of this.props.extensions)u.draw.call(this,c,u);this.draw(c)});else{const c={renderPass:e,shaderModuleProps:t,uniforms:n,parameters:s,context:r};for(const u of this.props.extensions)u.draw.call(this,c,u);this.draw(c)}}finally{this.props=i}}getChangeFlags(){return this.internalState?.changeFlags}setChangeFlags(e){if(!this.internalState)return;const{changeFlags:t}=this.internalState;for(const s in e)if(e[s]){let i=!1;switch(s){case"dataChanged":const r=e[s],o=t[s];r&&Array.isArray(o)&&(t.dataChanged=Array.isArray(r)?o.concat(r):r,i=!0);default:t[s]||(t[s]=e[s],i=!0)}i&&ge(pl,this,s,e)}const n=!!(t.dataChanged||t.updateTriggersChanged||t.propsChanged||t.extensionsChanged);t.propsOrDataChanged=n,t.somethingChanged=n||t.viewportChanged||t.stateChanged}_clearChangeFlags(){this.internalState.changeFlags={dataChanged:!1,propsChanged:!1,updateTriggersChanged:!1,viewportChanged:!1,stateChanged:!1,extensionsChanged:!1,propsOrDataChanged:!1,somethingChanged:!1}}_diffProps(e,t){const n=$a(e,t);if(n.updateTriggersChanged)for(const s in n.updateTriggersChanged)n.updateTriggersChanged[s]&&this.invalidateAttribute(s);if(n.transitionsChanged)for(const s in n.transitionsChanged)this.internalState.uniformTransitions.add(s,t[s],e[s],e.transitions?.[s]);return this.setChangeFlags(n)}validateProps(){Ua(this.props)}updateAutoHighlight(e){this.props.autoHighlight&&!Number.isInteger(this.props.highlightedObjectIndex)&&this._updateAutoHighlight(e)}_updateAutoHighlight(e){const t={highlightedObjectColor:e.picked?e.color:null},{highlightColor:n}=this.props;e.picked&&typeof n=="function"&&(t.highlightColor=n(e)),this.setShaderModuleProps({picking:t}),this.setNeedsRedraw()}_getAttributeManager(){const e=this.context;return new Ma(e.device,{id:this.props.id,stats:e.stats,timeline:e.timeline})}_postUpdate(e,t){const{props:n,oldProps:s}=e,i=this.state.model;i?.isInstanced&&i.setInstanceCount(this.getNumInstances());const{autoHighlight:r,highlightedObjectIndex:o,highlightColor:l}=n;if(t||s.autoHighlight!==r||s.highlightedObjectIndex!==o||s.highlightColor!==l){const c={};Array.isArray(l)&&(c.highlightColor=l),(t||s.autoHighlight!==r||o!==s.highlightedObjectIndex)&&(c.highlightedObjectColor=Number.isFinite(o)&&o>=0?this.encodePickingColor(o):null),this.setShaderModuleProps({picking:c})}}_getUpdateParams(){return{props:this.props,oldProps:this.internalState.getOldProps(),context:this.context,changeFlags:this.internalState.changeFlags}}_getNeedsRedraw(e){if(!this.internalState)return!1;let t=!1;t=t||this.internalState.needsRedraw&&this.id;const n=this.getAttributeManager(),s=n?n.getNeedsRedraw(e):!1;if(t=t||s,t)for(const i of this.props.extensions)i.onNeedsRedraw.call(this,i);return this.internalState.needsRedraw=this.internalState.needsRedraw&&!e.clearRedrawFlags,t}_onAsyncPropUpdated(){this._diffProps(this.props,this.internalState.getOldProps()),this.setNeedsUpdate()}}Ue.defaultProps=bl;Ue.layerName="Layer";const wl="compositeLayer.renderLayers";class Vn extends Ue{get isComposite(){return!0}get isDrawable(){return!1}get isLoaded(){return super.isLoaded&&this.getSubLayers().every(e=>e.isLoaded)}getSubLayers(){return this.internalState&&this.internalState.subLayers||[]}initializeState(e){}setState(e){super.setState(e),this.setNeedsUpdate()}getPickingInfo({info:e}){const{object:t}=e;return t&&t.__source&&t.__source.parent&&t.__source.parent.id===this.id&&(e.object=t.__source.object,e.index=t.__source.index),e}filterSubLayer(e){return!0}shouldRenderSubLayer(e,t){return t&&t.length}getSubLayerClass(e,t){const{_subLayerProps:n}=this.props;return n&&n[e]&&n[e].type||t}getSubLayerRow(e,t,n){return e.__source={parent:this,object:t,index:n},e}getSubLayerAccessor(e){if(typeof e=="function"){const t={index:-1,data:this.props.data,target:[]};return(n,s)=>n&&n.__source?(t.index=n.__source.index,e(n.__source.object,t)):e(n,s)}return e}getSubLayerProps(e={}){const{opacity:t,pickable:n,visible:s,parameters:i,getPolygonOffset:r,highlightedObjectIndex:o,autoHighlight:l,highlightColor:c,coordinateSystem:u,coordinateOrigin:f,wrapLongitude:p,positionFormat:x,modelMatrix:I,extensions:L,fetch:E,operation:M,_subLayerProps:R}=this.props,T={id:"",updateTriggers:{},opacity:t,pickable:n,visible:s,parameters:i,getPolygonOffset:r,highlightedObjectIndex:o,autoHighlight:l,highlightColor:c,coordinateSystem:u,coordinateOrigin:f,wrapLongitude:p,positionFormat:x,modelMatrix:I,extensions:L,fetch:E,operation:M},B=R&&e.id&&R[e.id],V=B&&B.updateTriggers,z=e.id||"sublayer";if(B){const se=this.props[Re],ne=e.type?e.type._propTypes:{};for(const X in B){const Ie=ne[X]||se[X];Ie&&Ie.type==="accessor"&&(B[X]=this.getSubLayerAccessor(B[X]))}}Object.assign(T,e,B),T.id=`${this.props.id}-${z}`,T.updateTriggers={all:this.props.updateTriggers?.all,...e.updateTriggers,...V};for(const se of L){const ne=se.getSubLayerProps.call(this,se);ne&&Object.assign(T,ne,{updateTriggers:Object.assign(T.updateTriggers,ne.updateTriggers)})}return T}_updateAutoHighlight(e){for(const t of this.getSubLayers())t.updateAutoHighlight(e)}_getAttributeManager(){return null}_postUpdate(e,t){let n=this.internalState.subLayers;const s=!n||this.needsUpdate();if(s){const i=this.renderLayers();n=Tr(i,Boolean),this.internalState.subLayers=n}ge(wl,this,s,n);for(const i of n)i.parent=this}}Vn.layerName="CompositeLayer";class Wi{constructor(e){this.indexStarts=[0],this.vertexStarts=[0],this.vertexCount=0,this.instanceCount=0;const{attributes:t={}}=e;this.typedArrayManager=Mt,this.attributes={},this._attributeDefs=t,this.opts=e,this.updateGeometry(e)}updateGeometry(e){Object.assign(this.opts,e);const{data:t,buffers:n={},getGeometry:s,geometryBuffer:i,positionFormat:r,dataChanged:o,normalize:l=!0}=this.opts;if(this.data=t,this.getGeometry=s,this.positionSize=i&&i.size||(r==="XY"?2:3),this.buffers=n,this.normalize=l,i&&(Le(t.startIndices),this.getGeometry=this.getGeometryFromBuffer(i),l||(n.vertexPositions=i)),this.geometryBuffer=n.vertexPositions,Array.isArray(o))for(const c of o)this._rebuildGeometry(c);else this._rebuildGeometry()}updatePartialGeometry({startRow:e,endRow:t}){this._rebuildGeometry({startRow:e,endRow:t})}getGeometryFromBuffer(e){const t=e.value||e;return ArrayBuffer.isView(t)?Ei(t,{size:this.positionSize,offset:e.offset,stride:e.stride,startIndices:this.data.startIndices}):null}_allocate(e,t){const{attributes:n,buffers:s,_attributeDefs:i,typedArrayManager:r}=this;for(const o in i)if(o in s)r.release(n[o]),n[o]=null;else{const l=i[o];l.copy=t,n[o]=r.allocate(n[o],e,l)}}_forEachGeometry(e,t,n){const{data:s,getGeometry:i}=this,{iterable:r,objectInfo:o}=qt(s,t,n);for(const l of r){o.index++;const c=i?i(l,o):null;e(c,o.index)}}_rebuildGeometry(e){if(!this.data)return;let{indexStarts:t,vertexStarts:n,instanceCount:s}=this;const{data:i,geometryBuffer:r}=this,{startRow:o=0,endRow:l=1/0}=e||{},c={};if(e||(t=[0],n=[0]),this.normalize||!r)this._forEachGeometry((f,p)=>{const x=f&&this.normalizeGeometry(f);c[p]=x,n[p+1]=n[p]+(x?this.getGeometrySize(x):0)},o,l),s=n[n.length-1];else if(n=i.startIndices,s=n[i.length]||0,ArrayBuffer.isView(r))s=s||r.length/this.positionSize;else if(r instanceof de){const f=this.positionSize*4;s=s||r.byteLength/f}else if(r.buffer){const f=r.stride||this.positionSize*4;s=s||r.buffer.byteLength/f}else if(r.value){const f=r.value,p=r.stride/f.BYTES_PER_ELEMENT||this.positionSize;s=s||f.length/p}this._allocate(s,!!e),this.indexStarts=t,this.vertexStarts=n,this.instanceCount=s;const u={};this._forEachGeometry((f,p)=>{const x=c[p]||f;u.vertexStart=n[p],u.indexStart=t[p];const I=p<n.length-1?n[p+1]:s;u.geometrySize=I-n[p],u.geometryIndex=p,this.updateGeometryAttributes(x,u)},o,l),this.vertexCount=t[t.length-1]}}const Is=`uniform iconUniforms {
  float sizeScale;
  vec2 iconsTextureDim;
  float sizeMinPixels;
  float sizeMaxPixels;
  bool billboard;
  highp int sizeUnits;
  float alphaCutoff;
} icon;
`,kl={name:"icon",vs:Is,fs:Is,uniformTypes:{sizeScale:"f32",iconsTextureDim:"vec2<f32>",sizeMinPixels:"f32",sizeMaxPixels:"f32",billboard:"f32",sizeUnits:"i32",alphaCutoff:"f32"}},Il=`#version 300 es
#define SHADER_NAME icon-layer-vertex-shader
in vec2 positions;
in vec3 instancePositions;
in vec3 instancePositions64Low;
in float instanceSizes;
in float instanceAngles;
in vec4 instanceColors;
in vec3 instancePickingColors;
in vec4 instanceIconFrames;
in float instanceColorModes;
in vec2 instanceOffsets;
in vec2 instancePixelOffset;
out float vColorMode;
out vec4 vColor;
out vec2 vTextureCoords;
out vec2 uv;
vec2 rotate_by_angle(vec2 vertex, float angle) {
float angle_radian = angle * PI / 180.0;
float cos_angle = cos(angle_radian);
float sin_angle = sin(angle_radian);
mat2 rotationMatrix = mat2(cos_angle, -sin_angle, sin_angle, cos_angle);
return rotationMatrix * vertex;
}
void main(void) {
geometry.worldPosition = instancePositions;
geometry.uv = positions;
geometry.pickingColor = instancePickingColors;
uv = positions;
vec2 iconSize = instanceIconFrames.zw;
float sizePixels = clamp(
project_size_to_pixel(instanceSizes * icon.sizeScale, icon.sizeUnits),
icon.sizeMinPixels, icon.sizeMaxPixels
);
float instanceScale = iconSize.y == 0.0 ? 0.0 : sizePixels / iconSize.y;
vec2 pixelOffset = positions / 2.0 * iconSize + instanceOffsets;
pixelOffset = rotate_by_angle(pixelOffset, instanceAngles) * instanceScale;
pixelOffset += instancePixelOffset;
pixelOffset.y *= -1.0;
if (icon.billboard)  {
gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, vec3(0.0), geometry.position);
DECKGL_FILTER_GL_POSITION(gl_Position, geometry);
vec3 offset = vec3(pixelOffset, 0.0);
DECKGL_FILTER_SIZE(offset, geometry);
gl_Position.xy += project_pixel_size_to_clipspace(offset.xy);
} else {
vec3 offset_common = vec3(project_pixel_size(pixelOffset), 0.0);
DECKGL_FILTER_SIZE(offset_common, geometry);
gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, offset_common, geometry.position);
DECKGL_FILTER_GL_POSITION(gl_Position, geometry);
}
vTextureCoords = mix(
instanceIconFrames.xy,
instanceIconFrames.xy + iconSize,
(positions.xy + 1.0) / 2.0
) / icon.iconsTextureDim;
vColor = instanceColors;
DECKGL_FILTER_COLOR(vColor, geometry);
vColorMode = instanceColorModes;
}
`,Tl=`#version 300 es
#define SHADER_NAME icon-layer-fragment-shader
precision highp float;
uniform sampler2D iconsTexture;
in float vColorMode;
in vec4 vColor;
in vec2 vTextureCoords;
in vec2 uv;
out vec4 fragColor;
void main(void) {
geometry.uv = uv;
vec4 texColor = texture(iconsTexture, vTextureCoords);
vec3 color = mix(texColor.rgb, vColor.rgb, vColorMode);
float a = texColor.a * layer.opacity * vColor.a;
if (a < icon.alphaCutoff) {
discard;
}
fragColor = vec4(color, a);
DECKGL_FILTER_COLOR(fragColor, geometry);
}
`,Pl=1024,Al=4,Ts=()=>{},Ps={minFilter:"linear",mipmapFilter:"linear",magFilter:"linear",addressModeU:"clamp-to-edge",addressModeV:"clamp-to-edge"},Cl={x:0,y:0,width:0,height:0};function Ll(a){return Math.pow(2,Math.ceil(Math.log2(a)))}function Sl(a,e,t,n){const s=Math.min(t/e.width,n/e.height),i=Math.floor(e.width*s),r=Math.floor(e.height*s);return s===1?{image:e,width:i,height:r}:(a.canvas.height=r,a.canvas.width=i,a.clearRect(0,0,i,r),a.drawImage(e,0,0,e.width,e.height,0,0,i,r),{image:a.canvas,width:i,height:r})}function ht(a){return a&&(a.id||a.url)}function El(a,e,t,n){const{width:s,height:i,device:r}=a,o=r.createTexture({format:"rgba8unorm",width:e,height:t,sampler:n,mipmaps:!0}),l=r.createCommandEncoder();return l.copyTextureToTexture({sourceTexture:a,destinationTexture:o,width:s,height:i}),l.finish(),a.destroy(),o}function As(a,e,t){for(let n=0;n<e.length;n++){const{icon:s,xOffset:i}=e[n],r=ht(s);a[r]={...s,x:i,y:t}}}function Ol({icons:a,buffer:e,mapping:t={},xOffset:n=0,yOffset:s=0,rowHeight:i=0,canvasWidth:r}){let o=[];for(let l=0;l<a.length;l++){const c=a[l],u=ht(c);if(!t[u]){const{height:f,width:p}=c;n+p+e>r&&(As(t,o,s),n=0,s=i+s+e,i=0,o=[]),o.push({icon:c,xOffset:n}),n=n+p+e,i=Math.max(i,f)}}return o.length>0&&As(t,o,s),{mapping:t,rowHeight:i,xOffset:n,yOffset:s,canvasWidth:r,canvasHeight:Ll(i+s+e)}}function Ml(a,e,t){if(!a||!e)return null;t=t||{};const n={},{iterable:s,objectInfo:i}=qt(a);for(const r of s){i.index++;const o=e(r,i),l=ht(o);if(!o)throw new Error("Icon is missing.");if(!o.url)throw new Error("Icon url is missing.");!n[l]&&(!t[l]||o.url!==t[l].url)&&(n[l]={...o,source:r,sourceIndex:i.index})}return n}class Bl{constructor(e,{onUpdate:t=Ts,onError:n=Ts}){this._loadOptions=null,this._texture=null,this._externalTexture=null,this._mapping={},this._samplerParameters=null,this._pendingCount=0,this._autoPacking=!1,this._xOffset=0,this._yOffset=0,this._rowHeight=0,this._buffer=Al,this._canvasWidth=Pl,this._canvasHeight=0,this._canvas=null,this.device=e,this.onUpdate=t,this.onError=n}finalize(){this._texture?.delete()}getTexture(){return this._texture||this._externalTexture}getIconMapping(e){const t=this._autoPacking?ht(e):e;return this._mapping[t]||Cl}setProps({loadOptions:e,autoPacking:t,iconAtlas:n,iconMapping:s,textureParameters:i}){e&&(this._loadOptions=e),t!==void 0&&(this._autoPacking=t),s&&(this._mapping=s),n&&(this._texture?.delete(),this._texture=null,this._externalTexture=n),i&&(this._samplerParameters=i)}get isLoaded(){return this._pendingCount===0}packIcons(e,t){if(!this._autoPacking||typeof document>"u")return;const n=Object.values(Ml(e,t,this._mapping)||{});if(n.length>0){const{mapping:s,xOffset:i,yOffset:r,rowHeight:o,canvasHeight:l}=Ol({icons:n,buffer:this._buffer,canvasWidth:this._canvasWidth,mapping:this._mapping,rowHeight:this._rowHeight,xOffset:this._xOffset,yOffset:this._yOffset});this._rowHeight=o,this._mapping=s,this._xOffset=i,this._yOffset=r,this._canvasHeight=l,this._texture||(this._texture=this.device.createTexture({format:"rgba8unorm",width:this._canvasWidth,height:this._canvasHeight,sampler:this._samplerParameters||Ps,mipmaps:!0})),this._texture.height!==this._canvasHeight&&(this._texture=El(this._texture,this._canvasWidth,this._canvasHeight,this._samplerParameters||Ps)),this.onUpdate(),this._canvas=this._canvas||document.createElement("canvas"),this._loadIcons(n)}}_loadIcons(e){const t=this._canvas.getContext("2d",{willReadFrequently:!0});for(const n of e)this._pendingCount++,mn(n.url,this._loadOptions).then(s=>{const i=ht(n),r=this._mapping[i],{x:o,y:l,width:c,height:u}=r,{image:f,width:p,height:x}=Sl(t,s,c,u);this._texture?.copyExternalImage({image:f,x:o+(c-p)/2,y:l+(u-x)/2,width:p,height:x}),r.width=p,r.height=x,this._texture.generateMipmap(),this.onUpdate()}).catch(s=>{this.onError({url:n.url,source:n.source,sourceIndex:n.sourceIndex,loadOptions:this._loadOptions,error:s})}).finally(()=>{this._pendingCount--})}}const Gi=[0,0,0,255],Fl={iconAtlas:{type:"image",value:null,async:!0},iconMapping:{type:"object",value:{},async:!0},sizeScale:{type:"number",value:1,min:0},billboard:!0,sizeUnits:"pixels",sizeMinPixels:{type:"number",min:0,value:0},sizeMaxPixels:{type:"number",min:0,value:Number.MAX_SAFE_INTEGER},alphaCutoff:{type:"number",value:.05,min:0,max:1},getPosition:{type:"accessor",value:a=>a.position},getIcon:{type:"accessor",value:a=>a.icon},getColor:{type:"accessor",value:Gi},getSize:{type:"accessor",value:1},getAngle:{type:"accessor",value:0},getPixelOffset:{type:"accessor",value:[0,0]},onIconError:{type:"function",value:null,optional:!0},textureParameters:{type:"object",ignore:!0,value:null}};class Kt extends Ue{getShaders(){return super.getShaders({vs:Il,fs:Tl,modules:[pt,gt,kl]})}initializeState(){this.state={iconManager:new Bl(this.context.device,{onUpdate:this._onUpdate.bind(this),onError:this._onError.bind(this)})},this.getAttributeManager().addInstanced({instancePositions:{size:3,type:"float64",fp64:this.use64bitPositions(),transition:!0,accessor:"getPosition"},instanceSizes:{size:1,transition:!0,accessor:"getSize",defaultValue:1},instanceOffsets:{size:2,accessor:"getIcon",transform:this.getInstanceOffset},instanceIconFrames:{size:4,accessor:"getIcon",transform:this.getInstanceIconFrame},instanceColorModes:{size:1,type:"uint8",accessor:"getIcon",transform:this.getInstanceColorMode},instanceColors:{size:this.props.colorFormat.length,type:"unorm8",transition:!0,accessor:"getColor",defaultValue:Gi},instanceAngles:{size:1,transition:!0,accessor:"getAngle"},instancePixelOffset:{size:2,transition:!0,accessor:"getPixelOffset"}})}updateState(e){super.updateState(e);const{props:t,oldProps:n,changeFlags:s}=e,i=this.getAttributeManager(),{iconAtlas:r,iconMapping:o,data:l,getIcon:c,textureParameters:u}=t,{iconManager:f}=this.state;if(typeof r=="string")return;const p=r||this.internalState.isAsyncPropLoading("iconAtlas");f.setProps({loadOptions:t.loadOptions,autoPacking:!p,iconAtlas:r,iconMapping:p?o:null,textureParameters:u}),p?n.iconMapping!==t.iconMapping&&i.invalidate("getIcon"):(s.dataChanged||s.updateTriggersChanged&&(s.updateTriggersChanged.all||s.updateTriggersChanged.getIcon))&&f.packIcons(l,c),s.extensionsChanged&&(this.state.model?.destroy(),this.state.model=this._getModel(),i.invalidateAll())}get isLoaded(){return super.isLoaded&&this.state.iconManager.isLoaded}finalizeState(e){super.finalizeState(e),this.state.iconManager.finalize()}draw({uniforms:e}){const{sizeScale:t,sizeMinPixels:n,sizeMaxPixels:s,sizeUnits:i,billboard:r,alphaCutoff:o}=this.props,{iconManager:l}=this.state,c=l.getTexture();if(c){const u=this.state.model,f={iconsTexture:c,iconsTextureDim:[c.width,c.height],sizeUnits:ct[i],sizeScale:t,sizeMinPixels:n,sizeMaxPixels:s,billboard:r,alphaCutoff:o};u.shaderInputs.setProps({icon:f}),u.draw(this.context.renderPass)}}_getModel(){const e=[-1,-1,1,-1,-1,1,1,1];return new ke(this.context.device,{...this.getShaders(),id:this.props.id,bufferLayout:this.getAttributeManager().getBufferLayouts(),geometry:new Xe({topology:"triangle-strip",attributes:{positions:{size:2,value:new Float32Array(e)}}}),isInstanced:!0})}_onUpdate(){this.setNeedsRedraw()}_onError(e){const t=this.getCurrentLayer()?.props.onIconError;t?t(e):ae.error(e.error.message)()}getInstanceOffset(e){const{width:t,height:n,anchorX:s=t/2,anchorY:i=n/2}=this.state.iconManager.getIconMapping(e);return[t/2-s,n/2-i]}getInstanceColorMode(e){return this.state.iconManager.getIconMapping(e).mask?1:0}getInstanceIconFrame(e){const{x:t,y:n,width:s,height:i}=this.state.iconManager.getIconMapping(e);return[t,n,s,i]}}Kt.defaultProps=Fl;Kt.layerName="IconLayer";const Cs=`uniform scatterplotUniforms {
  float radiusScale;
  float radiusMinPixels;
  float radiusMaxPixels;
  float lineWidthScale;
  float lineWidthMinPixels;
  float lineWidthMaxPixels;
  float stroked;
  float filled;
  bool antialiasing;
  bool billboard;
  highp int radiusUnits;
  highp int lineWidthUnits;
} scatterplot;
`,Nl={name:"scatterplot",vs:Cs,fs:Cs,source:"",uniformTypes:{radiusScale:"f32",radiusMinPixels:"f32",radiusMaxPixels:"f32",lineWidthScale:"f32",lineWidthMinPixels:"f32",lineWidthMaxPixels:"f32",stroked:"f32",filled:"f32",antialiasing:"f32",billboard:"f32",radiusUnits:"i32",lineWidthUnits:"i32"}},Rl=`#version 300 es
#define SHADER_NAME scatterplot-layer-vertex-shader
in vec3 positions;
in vec3 instancePositions;
in vec3 instancePositions64Low;
in float instanceRadius;
in float instanceLineWidths;
in vec4 instanceFillColors;
in vec4 instanceLineColors;
in vec3 instancePickingColors;
out vec4 vFillColor;
out vec4 vLineColor;
out vec2 unitPosition;
out float innerUnitRadius;
out float outerRadiusPixels;
void main(void) {
geometry.worldPosition = instancePositions;
outerRadiusPixels = clamp(
project_size_to_pixel(scatterplot.radiusScale * instanceRadius, scatterplot.radiusUnits),
scatterplot.radiusMinPixels, scatterplot.radiusMaxPixels
);
float lineWidthPixels = clamp(
project_size_to_pixel(scatterplot.lineWidthScale * instanceLineWidths, scatterplot.lineWidthUnits),
scatterplot.lineWidthMinPixels, scatterplot.lineWidthMaxPixels
);
outerRadiusPixels += scatterplot.stroked * lineWidthPixels / 2.0;
float edgePadding = scatterplot.antialiasing ? (outerRadiusPixels + SMOOTH_EDGE_RADIUS) / outerRadiusPixels : 1.0;
unitPosition = edgePadding * positions.xy;
geometry.uv = unitPosition;
geometry.pickingColor = instancePickingColors;
innerUnitRadius = 1.0 - scatterplot.stroked * lineWidthPixels / outerRadiusPixels;
if (scatterplot.billboard) {
gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, vec3(0.0), geometry.position);
DECKGL_FILTER_GL_POSITION(gl_Position, geometry);
vec3 offset = edgePadding * positions * outerRadiusPixels;
DECKGL_FILTER_SIZE(offset, geometry);
gl_Position.xy += project_pixel_size_to_clipspace(offset.xy);
} else {
vec3 offset = edgePadding * positions * project_pixel_size(outerRadiusPixels);
DECKGL_FILTER_SIZE(offset, geometry);
gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, offset, geometry.position);
DECKGL_FILTER_GL_POSITION(gl_Position, geometry);
}
vFillColor = vec4(instanceFillColors.rgb, instanceFillColors.a * layer.opacity);
DECKGL_FILTER_COLOR(vFillColor, geometry);
vLineColor = vec4(instanceLineColors.rgb, instanceLineColors.a * layer.opacity);
DECKGL_FILTER_COLOR(vLineColor, geometry);
}
`,Dl=`#version 300 es
#define SHADER_NAME scatterplot-layer-fragment-shader
precision highp float;
in vec4 vFillColor;
in vec4 vLineColor;
in vec2 unitPosition;
in float innerUnitRadius;
in float outerRadiusPixels;
out vec4 fragColor;
void main(void) {
geometry.uv = unitPosition;
float distToCenter = length(unitPosition) * outerRadiusPixels;
float inCircle = scatterplot.antialiasing ?
smoothedge(distToCenter, outerRadiusPixels) :
step(distToCenter, outerRadiusPixels);
if (inCircle == 0.0) {
discard;
}
if (scatterplot.stroked > 0.5) {
float isLine = scatterplot.antialiasing ?
smoothedge(innerUnitRadius * outerRadiusPixels, distToCenter) :
step(innerUnitRadius * outerRadiusPixels, distToCenter);
if (scatterplot.filled > 0.5) {
fragColor = mix(vFillColor, vLineColor, isLine);
} else {
if (isLine == 0.0) {
discard;
}
fragColor = vec4(vLineColor.rgb, vLineColor.a * isLine);
}
} else if (scatterplot.filled < 0.5) {
discard;
} else {
fragColor = vFillColor;
}
fragColor.a *= inCircle;
DECKGL_FILTER_COLOR(fragColor, geometry);
}
`,Ul=`// TODO(ibgreen): Hack for Layer uniforms (move to new "color" module?)

struct LayerUniforms {
  opacity: f32,
};

var<private> layer: LayerUniforms = LayerUniforms(1.0);
// @group(0) @binding(1) var<uniform> layer: LayerUniforms;

// Main shaders

struct ScatterplotUniforms {
  radiusScale: f32,
  radiusMinPixels: f32,
  radiusMaxPixels: f32,
  lineWidthScale: f32,
  lineWidthMinPixels: f32,
  lineWidthMaxPixels: f32,
  stroked: f32,
  filled: i32,
  antialiasing: i32,
  billboard: i32,
  radiusUnits: i32,
  lineWidthUnits: i32,
};

struct ConstantAttributeUniforms {
 instancePositions: vec3<f32>,
 instancePositions64Low: vec3<f32>,
 instanceRadius: f32,
 instanceLineWidths: f32,
 instanceFillColors: vec4<f32>,
 instanceLineColors: vec4<f32>,
 instancePickingColors: vec3<f32>,

 instancePositionsConstant: i32,
 instancePositions64LowConstant: i32,
 instanceRadiusConstant: i32,
 instanceLineWidthsConstant: i32,
 instanceFillColorsConstant: i32,
 instanceLineColorsConstant: i32,
 instancePickingColorsConstant: i32
};

@group(0) @binding(2) var<uniform> scatterplot: ScatterplotUniforms;

struct ConstantAttributes {
  instancePositions: vec3<f32>,
  instancePositions64Low: vec3<f32>,
  instanceRadius: f32,
  instanceLineWidths: f32,
  instanceFillColors: vec4<f32>,
  instanceLineColors: vec4<f32>,
  instancePickingColors: vec3<f32>
};

const constants = ConstantAttributes(
  vec3<f32>(0.0),
  vec3<f32>(0.0),
  0.0,
  0.0,
  vec4<f32>(0.0, 0.0, 0.0, 1.0),
  vec4<f32>(0.0, 0.0, 0.0, 1.0),
  vec3<f32>(0.0)
);

struct Attributes {
  @builtin(instance_index) instanceIndex : u32,
  @builtin(vertex_index) vertexIndex : u32,
  @location(0) positions: vec3<f32>,
  @location(1) instancePositions: vec3<f32>,
  @location(2) instancePositions64Low: vec3<f32>,
  @location(3) instanceRadius: f32,
  @location(4) instanceLineWidths: f32,
  @location(5) instanceFillColors: vec4<f32>,
  @location(6) instanceLineColors: vec4<f32>,
  @location(7) instancePickingColors: vec3<f32>
};

struct Varyings {
  @builtin(position) position: vec4<f32>,
  @location(0) vFillColor: vec4<f32>,
  @location(1) vLineColor: vec4<f32>,
  @location(2) unitPosition: vec2<f32>,
  @location(3) innerUnitRadius: f32,
  @location(4) outerRadiusPixels: f32,
};

@vertex
fn vertexMain(attributes: Attributes) -> Varyings {
  var varyings: Varyings;

  // Draw an inline geometry constant array clip space triangle to verify that rendering works.
  // var positions = array<vec2<f32>, 3>(vec2(0.0, 0.5), vec2(-0.5, -0.5), vec2(0.5, -0.5));
  // if (attributes.instanceIndex == 0) {
  //   varyings.position = vec4<f32>(positions[attributes.vertexIndex], 0.0, 1.0);
  //   return varyings;
  // }

  // var geometry: Geometry;
  // geometry.worldPosition = instancePositions;

  // Multiply out radius and clamp to limits
  varyings.outerRadiusPixels = clamp(
    project_unit_size_to_pixel(scatterplot.radiusScale * attributes.instanceRadius, scatterplot.radiusUnits),
    scatterplot.radiusMinPixels, scatterplot.radiusMaxPixels
  );

  // Multiply out line width and clamp to limits
  let lineWidthPixels = clamp(
    project_unit_size_to_pixel(scatterplot.lineWidthScale * attributes.instanceLineWidths, scatterplot.lineWidthUnits),
    scatterplot.lineWidthMinPixels, scatterplot.lineWidthMaxPixels
  );

  // outer radius needs to offset by half stroke width
  varyings.outerRadiusPixels += scatterplot.stroked * lineWidthPixels / 2.0;
  // Expand geometry to accommodate edge smoothing
  let edgePadding = select(
    (varyings.outerRadiusPixels + SMOOTH_EDGE_RADIUS) / varyings.outerRadiusPixels,
    1.0,
    scatterplot.antialiasing != 0
  );

  // position on the containing square in [-1, 1] space
  varyings.unitPosition = edgePadding * attributes.positions.xy;
  geometry.uv = varyings.unitPosition;
  geometry.pickingColor = attributes.instancePickingColors;

  varyings.innerUnitRadius = 1.0 - scatterplot.stroked * lineWidthPixels / varyings.outerRadiusPixels;

  if (scatterplot.billboard != 0) {
    varyings.position = project_position_to_clipspace(attributes.instancePositions, attributes.instancePositions64Low, vec3<f32>(0.0)); // TODO , geometry.position);
    // DECKGL_FILTER_GL_POSITION(varyings.position, geometry);
    let offset = attributes.positions; // * edgePadding * varyings.outerRadiusPixels;
    // DECKGL_FILTER_SIZE(offset, geometry);
    let clipPixels = project_pixel_size_to_clipspace(offset.xy);
    varyings.position.x = clipPixels.x;
    varyings.position.y = clipPixels.y;
  } else {
    let offset = edgePadding * attributes.positions * project_pixel_size_float(varyings.outerRadiusPixels);
    // DECKGL_FILTER_SIZE(offset, geometry);
    varyings.position = project_position_to_clipspace(attributes.instancePositions, attributes.instancePositions64Low, offset); // TODO , geometry.position);
    // DECKGL_FILTER_GL_POSITION(varyings.position, geometry);
  }

  // Apply opacity to instance color, or return instance picking color
  varyings.vFillColor = vec4<f32>(attributes.instanceFillColors.rgb, attributes.instanceFillColors.a * layer.opacity);
  // DECKGL_FILTER_COLOR(varyings.vFillColor, geometry);
  varyings.vLineColor = vec4<f32>(attributes.instanceLineColors.rgb, attributes.instanceLineColors.a * layer.opacity);
  // DECKGL_FILTER_COLOR(varyings.vLineColor, geometry);

  return varyings;
}

@fragment
fn fragmentMain(varyings: Varyings) -> @location(0) vec4<f32> {
  // var geometry: Geometry;
  // geometry.uv = unitPosition;

  let distToCenter = length(varyings.unitPosition) * varyings.outerRadiusPixels;
  let inCircle = select(
    smoothedge(distToCenter, varyings.outerRadiusPixels),
    step(distToCenter, varyings.outerRadiusPixels),
    scatterplot.antialiasing != 0
  );

  if (inCircle == 0.0) {
    // discard;
  }

  var fragColor: vec4<f32>;

  if (scatterplot.stroked != 0) {
    let isLine = select(
      smoothedge(varyings.innerUnitRadius * varyings.outerRadiusPixels, distToCenter),
      step(varyings.innerUnitRadius * varyings.outerRadiusPixels, distToCenter),
      scatterplot.antialiasing != 0
    );

    if (scatterplot.filled != 0) {
      fragColor = mix(varyings.vFillColor, varyings.vLineColor, isLine);
    } else {
      if (isLine == 0.0) {
        // discard;
      }
      fragColor = vec4<f32>(varyings.vLineColor.rgb, varyings.vLineColor.a * isLine);
    }
  } else if (scatterplot.filled == 0) {
    // discard;
  } else {
    fragColor = varyings.vFillColor;
  }

  fragColor.a *= inCircle;
  // DECKGL_FILTER_COLOR(fragColor, geometry);

  return fragColor;
  // return vec4<f32>(0, 0, 1, 1);
}
`,Ls=[0,0,0,255],$l={radiusUnits:"meters",radiusScale:{type:"number",min:0,value:1},radiusMinPixels:{type:"number",min:0,value:0},radiusMaxPixels:{type:"number",min:0,value:Number.MAX_SAFE_INTEGER},lineWidthUnits:"meters",lineWidthScale:{type:"number",min:0,value:1},lineWidthMinPixels:{type:"number",min:0,value:0},lineWidthMaxPixels:{type:"number",min:0,value:Number.MAX_SAFE_INTEGER},stroked:!1,filled:!0,billboard:!1,antialiasing:!0,getPosition:{type:"accessor",value:a=>a.position},getRadius:{type:"accessor",value:1},getFillColor:{type:"accessor",value:Ls},getLineColor:{type:"accessor",value:Ls},getLineWidth:{type:"accessor",value:1},strokeWidth:{deprecatedFor:"getLineWidth"},outline:{deprecatedFor:"stroked"},getColor:{deprecatedFor:["getFillColor","getLineColor"]}};class Wn extends Ue{getShaders(){return super.getShaders({vs:Rl,fs:Dl,source:Ul,modules:[pt,gt,Nl]})}initializeState(){this.getAttributeManager().addInstanced({instancePositions:{size:3,type:"float64",fp64:this.use64bitPositions(),transition:!0,accessor:"getPosition"},instanceRadius:{size:1,transition:!0,accessor:"getRadius",defaultValue:1},instanceFillColors:{size:this.props.colorFormat.length,transition:!0,type:"unorm8",accessor:"getFillColor",defaultValue:[0,0,0,255]},instanceLineColors:{size:this.props.colorFormat.length,transition:!0,type:"unorm8",accessor:"getLineColor",defaultValue:[0,0,0,255]},instanceLineWidths:{size:1,transition:!0,accessor:"getLineWidth",defaultValue:1}})}updateState(e){super.updateState(e),e.changeFlags.extensionsChanged&&(this.state.model?.destroy(),this.state.model=this._getModel(),this.getAttributeManager().invalidateAll())}draw({uniforms:e}){const{radiusUnits:t,radiusScale:n,radiusMinPixels:s,radiusMaxPixels:i,stroked:r,filled:o,billboard:l,antialiasing:c,lineWidthUnits:u,lineWidthScale:f,lineWidthMinPixels:p,lineWidthMaxPixels:x}=this.props,I={stroked:r,filled:o,billboard:l,antialiasing:c,radiusUnits:ct[t],radiusScale:n,radiusMinPixels:s,radiusMaxPixels:i,lineWidthUnits:ct[u],lineWidthScale:f,lineWidthMinPixels:p,lineWidthMaxPixels:x},L=this.state.model;L.shaderInputs.setProps({scatterplot:I}),L.draw(this.context.renderPass)}_getModel(){const e=[-1,-1,0,1,-1,0,-1,1,0,1,1,0];return new ke(this.context.device,{...this.getShaders(),id:this.props.id,bufferLayout:this.getAttributeManager().getBufferLayouts(),geometry:new Xe({topology:"triangle-strip",attributes:{positions:{size:3,value:new Float32Array(e)}}}),isInstanced:!0})}}Wn.defaultProps=$l;Wn.layerName="ScatterplotLayer";const ji={CLOCKWISE:1,COUNTER_CLOCKWISE:-1};function Hi(a,e,t={}){return zl(a,t)!==e?(Wl(a,t),!0):!1}function zl(a,e={}){return Math.sign(Vl(a,e))}const Ss={x:0,y:1,z:2};function Vl(a,e={}){const{start:t=0,end:n=a.length,plane:s="xy"}=e,i=e.size||2;let r=0;const o=Ss[s[0]],l=Ss[s[1]];for(let c=t,u=n-i;c<n;c+=i)r+=(a[c+o]-a[u+o])*(a[c+l]+a[u+l]),u=c;return r/2}function Wl(a,e){const{start:t=0,end:n=a.length,size:s=2}=e,i=(n-t)/s,r=Math.floor(i/2);for(let o=0;o<r;++o){const l=t+o*s,c=t+(i-1-o)*s;for(let u=0;u<s;++u){const f=a[l+u];a[l+u]=a[c+u],a[c+u]=f}}}function we(a,e){const t=e.length,n=a.length;if(n>0){let s=!0;for(let i=0;i<t;i++)if(a[n-t+i]!==e[i]){s=!1;break}if(s)return!1}for(let s=0;s<t;s++)a[n+s]=e[s];return!0}function Pn(a,e){const t=e.length;for(let n=0;n<t;n++)a[n]=e[n]}function dt(a,e,t,n,s=[]){const i=n+e*t;for(let r=0;r<t;r++)s[r]=a[i+r];return s}function An(a,e,t,n,s=[]){let i,r;if(t&8)i=(n[3]-a[1])/(e[1]-a[1]),r=3;else if(t&4)i=(n[1]-a[1])/(e[1]-a[1]),r=1;else if(t&2)i=(n[2]-a[0])/(e[0]-a[0]),r=2;else if(t&1)i=(n[0]-a[0])/(e[0]-a[0]),r=0;else return null;for(let o=0;o<a.length;o++)s[o]=(r&1)===o?n[r]:i*(e[o]-a[o])+a[o];return s}function Lt(a,e){let t=0;return a[0]<e[0]?t|=1:a[0]>e[2]&&(t|=2),a[1]<e[1]?t|=4:a[1]>e[3]&&(t|=8),t}function qi(a,e){const{size:t=2,broken:n=!1,gridResolution:s=10,gridOffset:i=[0,0],startIndex:r=0,endIndex:o=a.length}=e||{},l=(o-r)/t;let c=[];const u=[c],f=dt(a,0,t,r);let p,x;const I=Ki(f,s,i,[]),L=[];we(c,f);for(let E=1;E<l;E++){for(p=dt(a,E,t,r,p),x=Lt(p,I);x;){An(f,p,x,I,L);const M=Lt(L,I);M&&(An(f,L,M,I,L),x=M),we(c,L),Pn(f,L),jl(I,s,x),n&&c.length>t&&(c=[],u.push(c),we(c,f)),x=Lt(p,I)}we(c,p),Pn(f,p)}return n?u:u[0]}const Es=0,Gl=1;function Yi(a,e=null,t){if(!a.length)return[];const{size:n=2,gridResolution:s=10,gridOffset:i=[0,0],edgeTypes:r=!1}=t||{},o=[],l=[{pos:a,types:r?new Array(a.length/n).fill(Gl):null,holes:e||[]}],c=[[],[]];let u=[];for(;l.length;){const{pos:f,types:p,holes:x}=l.shift();Hl(f,n,x[0]||f.length,c),u=Ki(c[0],s,i,u);const I=Lt(c[1],u);if(I){let L=Os(f,p,n,0,x[0]||f.length,u,I);const E={pos:L[0].pos,types:L[0].types,holes:[]},M={pos:L[1].pos,types:L[1].types,holes:[]};l.push(E,M);for(let R=0;R<x.length;R++)L=Os(f,p,n,x[R],x[R+1]||f.length,u,I),L[0]&&(E.holes.push(E.pos.length),E.pos=bt(E.pos,L[0].pos),r&&(E.types=bt(E.types,L[0].types))),L[1]&&(M.holes.push(M.pos.length),M.pos=bt(M.pos,L[1].pos),r&&(M.types=bt(M.types,L[1].types)))}else{const L={positions:f};r&&(L.edgeTypes=p),x.length&&(L.holeIndices=x),o.push(L)}}return o}function Os(a,e,t,n,s,i,r){const o=(s-n)/t,l=[],c=[],u=[],f=[],p=[];let x,I,L;const E=dt(a,o-1,t,n);let M=Math.sign(r&8?E[1]-i[3]:E[0]-i[2]),R=e&&e[o-1],T=0,B=0;for(let V=0;V<o;V++)x=dt(a,V,t,n,x),I=Math.sign(r&8?x[1]-i[3]:x[0]-i[2]),L=e&&e[n/t+V],I&&M&&M!==I&&(An(E,x,r,i,p),we(l,p)&&u.push(R),we(c,p)&&f.push(R)),I<=0?(we(l,x)&&u.push(L),T-=I):u.length&&(u[u.length-1]=Es),I>=0?(we(c,x)&&f.push(L),B+=I):f.length&&(f[f.length-1]=Es),Pn(E,x),M=I,R=L;return[T?{pos:l,types:e&&u}:null,B?{pos:c,types:e&&f}:null]}function Ki(a,e,t,n){const s=Math.floor((a[0]-t[0])/e)*e+t[0],i=Math.floor((a[1]-t[1])/e)*e+t[1];return n[0]=s,n[1]=i,n[2]=s+e,n[3]=i+e,n}function jl(a,e,t){t&8?(a[1]+=e,a[3]+=e):t&4?(a[1]-=e,a[3]-=e):t&2?(a[0]+=e,a[2]+=e):t&1&&(a[0]-=e,a[2]-=e)}function Hl(a,e,t,n){let s=1/0,i=-1/0,r=1/0,o=-1/0;for(let l=0;l<t;l+=e){const c=a[l],u=a[l+1];s=c<s?c:s,i=c>i?c:i,r=u<r?u:r,o=u>o?u:o}return n[0][0]=s,n[0][1]=r,n[1][0]=i,n[1][1]=o,n}function bt(a,e){for(let t=0;t<e.length;t++)a.push(e[t]);return a}const ql=85.051129;function Yl(a,e){const{size:t=2,startIndex:n=0,endIndex:s=a.length,normalize:i=!0}=e||{},r=a.slice(n,s);Zi(r,t,0,s-n);const o=qi(r,{size:t,broken:!0,gridResolution:360,gridOffset:[-180,-180]});if(i)for(const l of o)Xi(l,t);return o}function Kl(a,e=null,t){const{size:n=2,normalize:s=!0,edgeTypes:i=!1}=t||{};e=e||[];const r=[],o=[];let l=0,c=0;for(let f=0;f<=e.length;f++){const p=e[f]||a.length,x=c,I=Zl(a,n,l,p);for(let L=I;L<p;L++)r[c++]=a[L];for(let L=l;L<I;L++)r[c++]=a[L];Zi(r,n,x,c),Xl(r,n,x,c,t?.maxLatitude),l=p,o[f]=c}o.pop();const u=Yi(r,o,{size:n,gridResolution:360,gridOffset:[-180,-180],edgeTypes:i});if(s)for(const f of u)Xi(f.positions,n);return u}function Zl(a,e,t,n){let s=-1,i=-1;for(let r=t+1;r<n;r+=e){const o=Math.abs(a[r]);o>s&&(s=o,i=r-1)}return i}function Xl(a,e,t,n,s=ql){const i=a[t],r=a[n-e];if(Math.abs(i-r)>180){const o=dt(a,0,e,t);o[0]+=Math.round((r-i)/360)*360,we(a,o),o[1]=Math.sign(o[1])*s,we(a,o),o[0]=i,we(a,o)}}function Zi(a,e,t,n){let s=a[0],i;for(let r=t;r<n;r+=e){i=a[r];const o=i-s;(o>180||o<-180)&&(i-=Math.round(o/360)*360),a[r]=s=i}}function Xi(a,e){let t;const n=a.length/e;for(let i=0;i<n&&(t=a[i*e],(t+180)%360===0);i++);const s=-Math.round(t/360)*360;if(s!==0)for(let i=0;i<n;i++)a[i*e]+=s}function Jl(a,e,t,n){let s;if(Array.isArray(a[0])){const i=a.length*e;s=new Array(i);for(let r=0;r<a.length;r++)for(let o=0;o<e;o++)s[r*e+o]=a[r][o]||0}else s=a;return t?qi(s,{size:e,gridResolution:t}):n?Yl(s,{size:e}):s}const Ql=1,ec=2,cn=4;class tc extends Wi{constructor(e){super({...e,attributes:{positions:{size:3,padding:18,initialize:!0,type:e.fp64?Float64Array:Float32Array},segmentTypes:{size:1,type:Uint8ClampedArray}}})}get(e){return this.attributes[e]}getGeometryFromBuffer(e){return this.normalize?super.getGeometryFromBuffer(e):null}normalizeGeometry(e){return this.normalize?Jl(e,this.positionSize,this.opts.resolution,this.opts.wrapLongitude):e}getGeometrySize(e){if(Ms(e)){let n=0;for(const s of e)n+=this.getGeometrySize(s);return n}const t=this.getPathLength(e);return t<2?0:this.isClosed(e)?t<3?0:t+2:t}updateGeometryAttributes(e,t){if(t.geometrySize!==0)if(e&&Ms(e))for(const n of e){const s=this.getGeometrySize(n);t.geometrySize=s,this.updateGeometryAttributes(n,t),t.vertexStart+=s}else this._updateSegmentTypes(e,t),this._updatePositions(e,t)}_updateSegmentTypes(e,t){const n=this.attributes.segmentTypes,s=e?this.isClosed(e):!1,{vertexStart:i,geometrySize:r}=t;n.fill(0,i,i+r),s?(n[i]=cn,n[i+r-2]=cn):(n[i]+=Ql,n[i+r-2]+=ec),n[i+r-1]=cn}_updatePositions(e,t){const{positions:n}=this.attributes;if(!n||!e)return;const{vertexStart:s,geometrySize:i}=t,r=new Array(3);for(let o=s,l=0;l<i;o++,l++)this.getPointOnPath(e,l,r),n[o*3]=r[0],n[o*3+1]=r[1],n[o*3+2]=r[2]}getPathLength(e){return e.length/this.positionSize}getPointOnPath(e,t,n=[]){const{positionSize:s}=this;t*s>=e.length&&(t+=1-e.length/s);const i=t*s;return n[0]=e[i],n[1]=e[i+1],n[2]=s===3&&e[i+2]||0,n}isClosed(e){if(!this.normalize)return!!this.opts.loop;const{positionSize:t}=this,n=e.length-t;return e[0]===e[n]&&e[1]===e[n+1]&&(t===2||e[2]===e[n+2])}}function Ms(a){return Array.isArray(a[0])}const Bs=`uniform pathUniforms {
  float widthScale;
  float widthMinPixels;
  float widthMaxPixels;
  float jointType;
  float capType;
  float miterLimit;
  bool billboard;
  highp int widthUnits;
} path;
`,nc={name:"path",vs:Bs,fs:Bs,uniformTypes:{widthScale:"f32",widthMinPixels:"f32",widthMaxPixels:"f32",jointType:"f32",capType:"f32",miterLimit:"f32",billboard:"f32",widthUnits:"i32"}},sc=`#version 300 es
#define SHADER_NAME path-layer-vertex-shader
in vec2 positions;
in float instanceTypes;
in vec3 instanceStartPositions;
in vec3 instanceEndPositions;
in vec3 instanceLeftPositions;
in vec3 instanceRightPositions;
in vec3 instanceLeftPositions64Low;
in vec3 instanceStartPositions64Low;
in vec3 instanceEndPositions64Low;
in vec3 instanceRightPositions64Low;
in float instanceStrokeWidths;
in vec4 instanceColors;
in vec3 instancePickingColors;
uniform float opacity;
out vec4 vColor;
out vec2 vCornerOffset;
out float vMiterLength;
out vec2 vPathPosition;
out float vPathLength;
out float vJointType;
const float EPSILON = 0.001;
const vec3 ZERO_OFFSET = vec3(0.0);
float flipIfTrue(bool flag) {
return -(float(flag) * 2. - 1.);
}
vec3 getLineJoinOffset(
vec3 prevPoint, vec3 currPoint, vec3 nextPoint,
vec2 width
) {
bool isEnd = positions.x > 0.0;
float sideOfPath = positions.y;
float isJoint = float(sideOfPath == 0.0);
vec3 deltaA3 = (currPoint - prevPoint);
vec3 deltaB3 = (nextPoint - currPoint);
mat3 rotationMatrix;
bool needsRotation = !path.billboard && project_needs_rotation(currPoint, rotationMatrix);
if (needsRotation) {
deltaA3 = deltaA3 * rotationMatrix;
deltaB3 = deltaB3 * rotationMatrix;
}
vec2 deltaA = deltaA3.xy / width;
vec2 deltaB = deltaB3.xy / width;
float lenA = length(deltaA);
float lenB = length(deltaB);
vec2 dirA = lenA > 0. ? normalize(deltaA) : vec2(0.0, 0.0);
vec2 dirB = lenB > 0. ? normalize(deltaB) : vec2(0.0, 0.0);
vec2 perpA = vec2(-dirA.y, dirA.x);
vec2 perpB = vec2(-dirB.y, dirB.x);
vec2 tangent = dirA + dirB;
tangent = length(tangent) > 0. ? normalize(tangent) : perpA;
vec2 miterVec = vec2(-tangent.y, tangent.x);
vec2 dir = isEnd ? dirA : dirB;
vec2 perp = isEnd ? perpA : perpB;
float L = isEnd ? lenA : lenB;
float sinHalfA = abs(dot(miterVec, perp));
float cosHalfA = abs(dot(dirA, miterVec));
float turnDirection = flipIfTrue(dirA.x * dirB.y >= dirA.y * dirB.x);
float cornerPosition = sideOfPath * turnDirection;
float miterSize = 1.0 / max(sinHalfA, EPSILON);
miterSize = mix(
min(miterSize, max(lenA, lenB) / max(cosHalfA, EPSILON)),
miterSize,
step(0.0, cornerPosition)
);
vec2 offsetVec = mix(miterVec * miterSize, perp, step(0.5, cornerPosition))
* (sideOfPath + isJoint * turnDirection);
bool isStartCap = lenA == 0.0 || (!isEnd && (instanceTypes == 1.0 || instanceTypes == 3.0));
bool isEndCap = lenB == 0.0 || (isEnd && (instanceTypes == 2.0 || instanceTypes == 3.0));
bool isCap = isStartCap || isEndCap;
if (isCap) {
offsetVec = mix(perp * sideOfPath, dir * path.capType * 4.0 * flipIfTrue(isStartCap), isJoint);
vJointType = path.capType;
} else {
vJointType = path.jointType;
}
vPathLength = L;
vCornerOffset = offsetVec;
vMiterLength = dot(vCornerOffset, miterVec * turnDirection);
vMiterLength = isCap ? isJoint : vMiterLength;
vec2 offsetFromStartOfPath = vCornerOffset + deltaA * float(isEnd);
vPathPosition = vec2(
dot(offsetFromStartOfPath, perp),
dot(offsetFromStartOfPath, dir)
);
geometry.uv = vPathPosition;
float isValid = step(instanceTypes, 3.5);
vec3 offset = vec3(offsetVec * width * isValid, 0.0);
if (needsRotation) {
offset = rotationMatrix * offset;
}
return offset;
}
void clipLine(inout vec4 position, vec4 refPosition) {
if (position.w < EPSILON) {
float r = (EPSILON - refPosition.w) / (position.w - refPosition.w);
position = refPosition + (position - refPosition) * r;
}
}
void main() {
geometry.pickingColor = instancePickingColors;
vColor = vec4(instanceColors.rgb, instanceColors.a * layer.opacity);
float isEnd = positions.x;
vec3 prevPosition = mix(instanceLeftPositions, instanceStartPositions, isEnd);
vec3 prevPosition64Low = mix(instanceLeftPositions64Low, instanceStartPositions64Low, isEnd);
vec3 currPosition = mix(instanceStartPositions, instanceEndPositions, isEnd);
vec3 currPosition64Low = mix(instanceStartPositions64Low, instanceEndPositions64Low, isEnd);
vec3 nextPosition = mix(instanceEndPositions, instanceRightPositions, isEnd);
vec3 nextPosition64Low = mix(instanceEndPositions64Low, instanceRightPositions64Low, isEnd);
geometry.worldPosition = currPosition;
vec2 widthPixels = vec2(clamp(
project_size_to_pixel(instanceStrokeWidths * path.widthScale, path.widthUnits),
path.widthMinPixels, path.widthMaxPixels) / 2.0);
vec3 width;
if (path.billboard) {
vec4 prevPositionScreen = project_position_to_clipspace(prevPosition, prevPosition64Low, ZERO_OFFSET);
vec4 currPositionScreen = project_position_to_clipspace(currPosition, currPosition64Low, ZERO_OFFSET, geometry.position);
vec4 nextPositionScreen = project_position_to_clipspace(nextPosition, nextPosition64Low, ZERO_OFFSET);
clipLine(prevPositionScreen, currPositionScreen);
clipLine(nextPositionScreen, currPositionScreen);
clipLine(currPositionScreen, mix(nextPositionScreen, prevPositionScreen, isEnd));
width = vec3(widthPixels, 0.0);
DECKGL_FILTER_SIZE(width, geometry);
vec3 offset = getLineJoinOffset(
prevPositionScreen.xyz / prevPositionScreen.w,
currPositionScreen.xyz / currPositionScreen.w,
nextPositionScreen.xyz / nextPositionScreen.w,
project_pixel_size_to_clipspace(width.xy)
);
DECKGL_FILTER_GL_POSITION(currPositionScreen, geometry);
gl_Position = vec4(currPositionScreen.xyz + offset * currPositionScreen.w, currPositionScreen.w);
} else {
prevPosition = project_position(prevPosition, prevPosition64Low);
currPosition = project_position(currPosition, currPosition64Low);
nextPosition = project_position(nextPosition, nextPosition64Low);
width = vec3(project_pixel_size(widthPixels), 0.0);
DECKGL_FILTER_SIZE(width, geometry);
vec3 offset = getLineJoinOffset(prevPosition, currPosition, nextPosition, width.xy);
geometry.position = vec4(currPosition + offset, 1.0);
gl_Position = project_common_position_to_clipspace(geometry.position);
DECKGL_FILTER_GL_POSITION(gl_Position, geometry);
}
DECKGL_FILTER_COLOR(vColor, geometry);
}
`,ic=`#version 300 es
#define SHADER_NAME path-layer-fragment-shader
precision highp float;
in vec4 vColor;
in vec2 vCornerOffset;
in float vMiterLength;
in vec2 vPathPosition;
in float vPathLength;
in float vJointType;
out vec4 fragColor;
void main(void) {
geometry.uv = vPathPosition;
if (vPathPosition.y < 0.0 || vPathPosition.y > vPathLength) {
if (vJointType > 0.5 && length(vCornerOffset) > 1.0) {
discard;
}
if (vJointType < 0.5 && vMiterLength > path.miterLimit + 1.0) {
discard;
}
}
fragColor = vColor;
DECKGL_FILTER_COLOR(fragColor, geometry);
}
`,Ji=[0,0,0,255],rc={widthUnits:"meters",widthScale:{type:"number",min:0,value:1},widthMinPixels:{type:"number",min:0,value:0},widthMaxPixels:{type:"number",min:0,value:Number.MAX_SAFE_INTEGER},jointRounded:!1,capRounded:!1,miterLimit:{type:"number",min:0,value:4},billboard:!1,_pathType:null,getPath:{type:"accessor",value:a=>a.path},getColor:{type:"accessor",value:Ji},getWidth:{type:"accessor",value:1},rounded:{deprecatedFor:["jointRounded","capRounded"]}},un={enter:(a,e)=>e.length?e.subarray(e.length-a.length):a};class Gn extends Ue{getShaders(){return super.getShaders({vs:sc,fs:ic,modules:[pt,gt,nc]})}get wrapLongitude(){return!1}getBounds(){return this.getAttributeManager()?.getBounds(["vertexPositions"])}initializeState(){this.getAttributeManager().addInstanced({vertexPositions:{size:3,vertexOffset:1,type:"float64",fp64:this.use64bitPositions(),transition:un,accessor:"getPath",update:this.calculatePositions,noAlloc:!0,shaderAttributes:{instanceLeftPositions:{vertexOffset:0},instanceStartPositions:{vertexOffset:1},instanceEndPositions:{vertexOffset:2},instanceRightPositions:{vertexOffset:3}}},instanceTypes:{size:1,type:"uint8",update:this.calculateSegmentTypes,noAlloc:!0},instanceStrokeWidths:{size:1,accessor:"getWidth",transition:un,defaultValue:1},instanceColors:{size:this.props.colorFormat.length,type:"unorm8",accessor:"getColor",transition:un,defaultValue:Ji},instancePickingColors:{size:4,type:"uint8",accessor:(n,{index:s,target:i})=>this.encodePickingColor(n&&n.__source?n.__source.index:s,i)}}),this.setState({pathTesselator:new tc({fp64:this.use64bitPositions()})})}updateState(e){super.updateState(e);const{props:t,changeFlags:n}=e,s=this.getAttributeManager();if(n.dataChanged||n.updateTriggersChanged&&(n.updateTriggersChanged.all||n.updateTriggersChanged.getPath)){const{pathTesselator:r}=this.state,o=t.data.attributes||{};r.updateGeometry({data:t.data,geometryBuffer:o.getPath,buffers:o,normalize:!t._pathType,loop:t._pathType==="loop",getGeometry:t.getPath,positionFormat:t.positionFormat,wrapLongitude:t.wrapLongitude,resolution:this.context.viewport.resolution,dataChanged:n.dataChanged}),this.setState({numInstances:r.instanceCount,startIndices:r.vertexStarts}),n.dataChanged||s.invalidateAll()}n.extensionsChanged&&(this.state.model?.destroy(),this.state.model=this._getModel(),s.invalidateAll())}getPickingInfo(e){const t=super.getPickingInfo(e),{index:n}=t,s=this.props.data;return s[0]&&s[0].__source&&(t.object=s.find(i=>i.__source.index===n)),t}disablePickingIndex(e){const t=this.props.data;if(t[0]&&t[0].__source)for(let n=0;n<t.length;n++)t[n].__source.index===e&&this._disablePickingIndex(n);else super.disablePickingIndex(e)}draw({uniforms:e}){const{jointRounded:t,capRounded:n,billboard:s,miterLimit:i,widthUnits:r,widthScale:o,widthMinPixels:l,widthMaxPixels:c}=this.props,u=this.state.model,f={jointType:Number(t),capType:Number(n),billboard:s,widthUnits:ct[r],widthScale:o,miterLimit:i,widthMinPixels:l,widthMaxPixels:c};u.shaderInputs.setProps({path:f}),u.draw(this.context.renderPass)}_getModel(){const e=[0,1,2,1,4,2,1,3,4,3,5,4],t=[0,0,0,-1,0,1,1,-1,1,1,1,0];return new ke(this.context.device,{...this.getShaders(),id:this.props.id,bufferLayout:this.getAttributeManager().getBufferLayouts(),geometry:new Xe({topology:"triangle-list",attributes:{indices:new Uint16Array(e),positions:{value:new Float32Array(t),size:2}}}),isInstanced:!0})}calculatePositions(e){const{pathTesselator:t}=this.state;e.startIndices=t.vertexStarts,e.value=t.get("positions")}calculateSegmentTypes(e){const{pathTesselator:t}=this.state;e.startIndices=t.vertexStarts,e.value=t.get("segmentTypes")}}Gn.defaultProps=rc;Gn.layerName="PathLayer";const wt=ji.CLOCKWISE,Fs=ji.COUNTER_CLOCKWISE,Ne={};function oc(a){if(a=a&&a.positions||a,!Array.isArray(a)&&!ArrayBuffer.isView(a))throw new Error("invalid polygon")}function ot(a){return"positions"in a?a.positions:a}function St(a){return"holeIndices"in a?a.holeIndices:null}function ac(a){return Array.isArray(a[0])}function lc(a){return a.length>=1&&a[0].length>=2&&Number.isFinite(a[0][0])}function cc(a){const e=a[0],t=a[a.length-1];return e[0]===t[0]&&e[1]===t[1]&&e[2]===t[2]}function uc(a,e,t,n){for(let s=0;s<e;s++)if(a[t+s]!==a[n-e+s])return!1;return!0}function Ns(a,e,t,n,s){let i=e;const r=t.length;for(let o=0;o<r;o++)for(let l=0;l<n;l++)a[i++]=t[o][l]||0;if(!cc(t))for(let o=0;o<n;o++)a[i++]=t[0][o]||0;return Ne.start=e,Ne.end=i,Ne.size=n,Hi(a,s,Ne),i}function Rs(a,e,t,n,s=0,i,r){i=i||t.length;const o=i-s;if(o<=0)return e;let l=e;for(let c=0;c<o;c++)a[l++]=t[s+c];if(!uc(t,n,s,i))for(let c=0;c<n;c++)a[l++]=t[s+c];return Ne.start=e,Ne.end=l,Ne.size=n,Hi(a,r,Ne),l}function fc(a,e){oc(a);const t=[],n=[];if("positions"in a){const{positions:s,holeIndices:i}=a;if(i){let r=0;for(let o=0;o<=i.length;o++)r=Rs(t,r,s,e,i[o-1],i[o],o===0?wt:Fs),n.push(r);return n.pop(),{positions:t,holeIndices:n}}a=s}if(!ac(a))return Rs(t,0,a,e,0,t.length,wt),t;if(!lc(a)){let s=0;for(const[i,r]of a.entries())s=Ns(t,s,r,e,i===0?wt:Fs),n.push(s);return n.pop(),{positions:t,holeIndices:n}}return Ns(t,0,a,e,wt),t}function fn(a,e,t){const n=a.length/3;let s=0;for(let i=0;i<n;i++){const r=(i+1)%n;s+=a[i*3+e]*a[r*3+t],s-=a[r*3+e]*a[i*3+t]}return Math.abs(s/2)}function Ds(a,e,t,n){const s=a.length/3;for(let i=0;i<s;i++){const r=i*3,o=a[r+0],l=a[r+1],c=a[r+2];a[r+e]=o,a[r+t]=l,a[r+n]=c}}function hc(a,e,t,n){let s=St(a);s&&(s=s.map(o=>o/e));let i=ot(a);const r=n&&e===3;if(t){const o=i.length;i=i.slice();const l=[];for(let c=0;c<o;c+=e){l[0]=i[c],l[1]=i[c+1],r&&(l[2]=i[c+2]);const u=t(l);i[c]=u[0],i[c+1]=u[1],r&&(i[c+2]=u[2])}}if(r){const o=fn(i,0,1),l=fn(i,0,2),c=fn(i,1,2);if(!o&&!l&&!c)return[];o>l&&o>c||(l>c?(t||(i=i.slice()),Ds(i,0,2,1)):(t||(i=i.slice()),Ds(i,2,0,1)))}return Lr(i,s,e)}class dc extends Wi{constructor(e){const{fp64:t,IndexType:n=Uint32Array}=e;super({...e,attributes:{positions:{size:3,type:t?Float64Array:Float32Array},vertexValid:{type:Uint16Array,size:1},indices:{type:n,size:1}}})}get(e){const{attributes:t}=this;return e==="indices"?t.indices&&t.indices.subarray(0,this.vertexCount):t[e]}updateGeometry(e){super.updateGeometry(e);const t=this.buffers.indices;if(t)this.vertexCount=(t.value||t).length;else if(this.data&&!this.getGeometry)throw new Error("missing indices buffer")}normalizeGeometry(e){if(this.normalize){const t=fc(e,this.positionSize);return this.opts.resolution?Yi(ot(t),St(t),{size:this.positionSize,gridResolution:this.opts.resolution,edgeTypes:!0}):this.opts.wrapLongitude?Kl(ot(t),St(t),{size:this.positionSize,maxLatitude:86,edgeTypes:!0}):t}return e}getGeometrySize(e){if(Us(e)){let t=0;for(const n of e)t+=this.getGeometrySize(n);return t}return ot(e).length/this.positionSize}getGeometryFromBuffer(e){return this.normalize||!this.buffers.indices?super.getGeometryFromBuffer(e):null}updateGeometryAttributes(e,t){if(e&&Us(e))for(const n of e){const s=this.getGeometrySize(n);t.geometrySize=s,this.updateGeometryAttributes(n,t),t.vertexStart+=s,t.indexStart=this.indexStarts[t.geometryIndex+1]}else{const n=e;this._updateIndices(n,t),this._updatePositions(n,t),this._updateVertexValid(n,t)}}_updateIndices(e,{geometryIndex:t,vertexStart:n,indexStart:s}){const{attributes:i,indexStarts:r,typedArrayManager:o}=this;let l=i.indices;if(!l||!e)return;let c=s;const u=hc(e,this.positionSize,this.opts.preproject,this.opts.full3d);l=o.allocate(l,s+u.length,{copy:!0});for(let f=0;f<u.length;f++)l[c++]=u[f]+n;r[t+1]=s+u.length,i.indices=l}_updatePositions(e,{vertexStart:t,geometrySize:n}){const{attributes:{positions:s},positionSize:i}=this;if(!s||!e)return;const r=ot(e);for(let o=t,l=0;l<n;o++,l++){const c=r[l*i],u=r[l*i+1],f=i>2?r[l*i+2]:0;s[o*3]=c,s[o*3+1]=u,s[o*3+2]=f}}_updateVertexValid(e,{vertexStart:t,geometrySize:n}){const{positionSize:s}=this,i=this.attributes.vertexValid,r=e&&St(e);if(e&&e.edgeTypes?i.set(e.edgeTypes,t):i.fill(1,t,t+n),r)for(let o=0;o<r.length;o++)i[t+r[o]/s-1]=0;i[t+n-1]=0}}function Us(a){return Array.isArray(a)&&a.length>0&&!Number.isFinite(a[0])}const $s=`uniform solidPolygonUniforms {
  bool extruded;
  bool isWireframe;
  float elevationScale;
} solidPolygon;
`,pc={name:"solidPolygon",vs:$s,fs:$s,uniformTypes:{extruded:"f32",isWireframe:"f32",elevationScale:"f32"}},Qi=`in vec4 fillColors;
in vec4 lineColors;
in vec3 pickingColors;
out vec4 vColor;
struct PolygonProps {
vec3 positions;
vec3 positions64Low;
vec3 normal;
float elevations;
};
vec3 project_offset_normal(vec3 vector) {
if (project.coordinateSystem == COORDINATE_SYSTEM_LNGLAT ||
project.coordinateSystem == COORDINATE_SYSTEM_LNGLAT_OFFSETS) {
return normalize(vector * project.commonUnitsPerWorldUnit);
}
return project_normal(vector);
}
void calculatePosition(PolygonProps props) {
vec3 pos = props.positions;
vec3 pos64Low = props.positions64Low;
vec3 normal = props.normal;
vec4 colors = solidPolygon.isWireframe ? lineColors : fillColors;
geometry.worldPosition = props.positions;
geometry.pickingColor = pickingColors;
if (solidPolygon.extruded) {
pos.z += props.elevations * solidPolygon.elevationScale;
}
gl_Position = project_position_to_clipspace(pos, pos64Low, vec3(0.), geometry.position);
DECKGL_FILTER_GL_POSITION(gl_Position, geometry);
if (solidPolygon.extruded) {
#ifdef IS_SIDE_VERTEX
normal = project_offset_normal(normal);
#else
normal = project_normal(normal);
#endif
geometry.normal = normal;
vec3 lightColor = lighting_getLightColor(colors.rgb, project.cameraPosition, geometry.position.xyz, geometry.normal);
vColor = vec4(lightColor, colors.a * layer.opacity);
} else {
vColor = vec4(colors.rgb, colors.a * layer.opacity);
}
DECKGL_FILTER_COLOR(vColor, geometry);
}
`,gc=`#version 300 es
#define SHADER_NAME solid-polygon-layer-vertex-shader
in vec3 vertexPositions;
in vec3 vertexPositions64Low;
in float elevations;
${Qi}
void main(void) {
PolygonProps props;
props.positions = vertexPositions;
props.positions64Low = vertexPositions64Low;
props.elevations = elevations;
props.normal = vec3(0.0, 0.0, 1.0);
calculatePosition(props);
}
`,mc=`#version 300 es
#define SHADER_NAME solid-polygon-layer-vertex-shader-side
#define IS_SIDE_VERTEX
in vec2 positions;
in vec3 vertexPositions;
in vec3 nextVertexPositions;
in vec3 vertexPositions64Low;
in vec3 nextVertexPositions64Low;
in float elevations;
in float instanceVertexValid;
${Qi}
void main(void) {
if(instanceVertexValid < 0.5){
gl_Position = vec4(0.);
return;
}
PolygonProps props;
vec3 pos;
vec3 pos64Low;
vec3 nextPos;
vec3 nextPos64Low;
#if RING_WINDING_ORDER_CW == 1
pos = vertexPositions;
pos64Low = vertexPositions64Low;
nextPos = nextVertexPositions;
nextPos64Low = nextVertexPositions64Low;
#else
pos = nextVertexPositions;
pos64Low = nextVertexPositions64Low;
nextPos = vertexPositions;
nextPos64Low = vertexPositions64Low;
#endif
props.positions = mix(pos, nextPos, positions.x);
props.positions64Low = mix(pos64Low, nextPos64Low, positions.x);
props.normal = vec3(
pos.y - nextPos.y + (pos64Low.y - nextPos64Low.y),
nextPos.x - pos.x + (nextPos64Low.x - pos64Low.x),
0.0);
props.elevations = elevations * positions.y;
calculatePosition(props);
}
`,yc=`#version 300 es
#define SHADER_NAME solid-polygon-layer-fragment-shader
precision highp float;
in vec4 vColor;
out vec4 fragColor;
void main(void) {
fragColor = vColor;
geometry.uv = vec2(0.);
DECKGL_FILTER_COLOR(fragColor, geometry);
}
`,Wt=[0,0,0,255],_c={filled:!0,extruded:!1,wireframe:!1,_normalize:!0,_windingOrder:"CW",_full3d:!1,elevationScale:{type:"number",min:0,value:1},getPolygon:{type:"accessor",value:a=>a.polygon},getElevation:{type:"accessor",value:1e3},getFillColor:{type:"accessor",value:Wt},getLineColor:{type:"accessor",value:Wt},material:!0},kt={enter:(a,e)=>e.length?e.subarray(e.length-a.length):a};class jn extends Ue{getShaders(e){return super.getShaders({vs:e==="top"?gc:mc,fs:yc,defines:{RING_WINDING_ORDER_CW:!this.props._normalize&&this.props._windingOrder==="CCW"?0:1},modules:[pt,Pi,gt,pc]})}get wrapLongitude(){return!1}getBounds(){return this.getAttributeManager()?.getBounds(["vertexPositions"])}initializeState(){const{viewport:e}=this.context;let{coordinateSystem:t}=this.props;const{_full3d:n}=this.props;e.isGeospatial&&t===pe.DEFAULT&&(t=pe.LNGLAT);let s;t===pe.LNGLAT&&(n?s=e.projectPosition.bind(e):s=e.projectFlat.bind(e)),this.setState({numInstances:0,polygonTesselator:new dc({preproject:s,fp64:this.use64bitPositions(),IndexType:Uint32Array})});const i=this.getAttributeManager(),r=!0;i.remove(["instancePickingColors"]),i.add({indices:{size:1,isIndexed:!0,update:this.calculateIndices,noAlloc:r},vertexPositions:{size:3,type:"float64",stepMode:"dynamic",fp64:this.use64bitPositions(),transition:kt,accessor:"getPolygon",update:this.calculatePositions,noAlloc:r,shaderAttributes:{nextVertexPositions:{vertexOffset:1}}},instanceVertexValid:{size:1,type:"uint16",stepMode:"instance",update:this.calculateVertexValid,noAlloc:r},elevations:{size:1,stepMode:"dynamic",transition:kt,accessor:"getElevation"},fillColors:{size:this.props.colorFormat.length,type:"unorm8",stepMode:"dynamic",transition:kt,accessor:"getFillColor",defaultValue:Wt},lineColors:{size:this.props.colorFormat.length,type:"unorm8",stepMode:"dynamic",transition:kt,accessor:"getLineColor",defaultValue:Wt},pickingColors:{size:4,type:"uint8",stepMode:"dynamic",accessor:(o,{index:l,target:c})=>this.encodePickingColor(o&&o.__source?o.__source.index:l,c)}})}getPickingInfo(e){const t=super.getPickingInfo(e),{index:n}=t,s=this.props.data;return s[0]&&s[0].__source&&(t.object=s.find(i=>i.__source.index===n)),t}disablePickingIndex(e){const t=this.props.data;if(t[0]&&t[0].__source)for(let n=0;n<t.length;n++)t[n].__source.index===e&&this._disablePickingIndex(n);else super.disablePickingIndex(e)}draw({uniforms:e}){const{extruded:t,filled:n,wireframe:s,elevationScale:i}=this.props,{topModel:r,sideModel:o,wireframeModel:l,polygonTesselator:c}=this.state,u={extruded:!!t,elevationScale:i,isWireframe:!1};l&&s&&(l.setInstanceCount(c.instanceCount-1),l.shaderInputs.setProps({solidPolygon:{...u,isWireframe:!0}}),l.draw(this.context.renderPass)),o&&n&&(o.setInstanceCount(c.instanceCount-1),o.shaderInputs.setProps({solidPolygon:u}),o.draw(this.context.renderPass)),r&&n&&(r.setVertexCount(c.vertexCount),r.shaderInputs.setProps({solidPolygon:u}),r.draw(this.context.renderPass))}updateState(e){super.updateState(e),this.updateGeometry(e);const{props:t,oldProps:n,changeFlags:s}=e,i=this.getAttributeManager();(s.extensionsChanged||t.filled!==n.filled||t.extruded!==n.extruded)&&(this.state.models?.forEach(o=>o.destroy()),this.setState(this._getModels()),i.invalidateAll())}updateGeometry({props:e,oldProps:t,changeFlags:n}){if(n.dataChanged||n.updateTriggersChanged&&(n.updateTriggersChanged.all||n.updateTriggersChanged.getPolygon)){const{polygonTesselator:i}=this.state,r=e.data.attributes||{};i.updateGeometry({data:e.data,normalize:e._normalize,geometryBuffer:r.getPolygon,buffers:r,getGeometry:e.getPolygon,positionFormat:e.positionFormat,wrapLongitude:e.wrapLongitude,resolution:this.context.viewport.resolution,fp64:this.use64bitPositions(),dataChanged:n.dataChanged,full3d:e._full3d}),this.setState({numInstances:i.instanceCount,startIndices:i.vertexStarts}),n.dataChanged||this.getAttributeManager().invalidateAll()}}_getModels(){const{id:e,filled:t,extruded:n}=this.props;let s,i,r;if(t){const o=this.getShaders("top");o.defines.NON_INSTANCED_MODEL=1;const l=this.getAttributeManager().getBufferLayouts({isInstanced:!1});s=new ke(this.context.device,{...o,id:`${e}-top`,topology:"triangle-list",bufferLayout:l,isIndexed:!0,userData:{excludeAttributes:{instanceVertexValid:!0}}})}if(n){const o=this.getAttributeManager().getBufferLayouts({isInstanced:!0});i=new ke(this.context.device,{...this.getShaders("side"),id:`${e}-side`,bufferLayout:o,geometry:new Xe({topology:"triangle-strip",attributes:{positions:{size:2,value:new Float32Array([1,0,0,0,1,1,0,1])}}}),isInstanced:!0,userData:{excludeAttributes:{indices:!0}}}),r=new ke(this.context.device,{...this.getShaders("side"),id:`${e}-wireframe`,bufferLayout:o,geometry:new Xe({topology:"line-strip",attributes:{positions:{size:2,value:new Float32Array([1,0,0,0,0,1,1,1])}}}),isInstanced:!0,userData:{excludeAttributes:{indices:!0}}})}return{models:[i,r,s].filter(Boolean),topModel:s,sideModel:i,wireframeModel:r}}calculateIndices(e){const{polygonTesselator:t}=this.state;e.startIndices=t.indexStarts,e.value=t.get("indices")}calculatePositions(e){const{polygonTesselator:t}=this.state;e.startIndices=t.vertexStarts,e.value=t.get("positions")}calculateVertexValid(e){e.value=this.state.polygonTesselator.get("vertexValid")}}jn.defaultProps=_c;jn.layerName="SolidPolygonLayer";function xc({data:a,getIndex:e,dataRange:t,replace:n}){const{startRow:s=0,endRow:i=1/0}=t,r=a.length;let o=r,l=r;for(let p=0;p<r;p++){const x=e(a[p]);if(o>p&&x>=s&&(o=p),x>=i){l=p;break}}let c=o;const f=l-o!==n.length?a.slice(l):void 0;for(let p=0;p<n.length;p++)a[c++]=n[p];if(f){for(let p=0;p<f.length;p++)a[c++]=f[p];a.length=c}return{startRow:o,endRow:o+n.length}}function vc(a,e){if(!a)return null;const t="startIndices"in a?a.startIndices[e]:e,n=a.featureIds.value[t];return t!==-1?bc(a,n,t):null}function bc(a,e,t){const n={properties:{...a.properties[e]}};for(const s in a.numericProps)n.properties[s]=a.numericProps[s].value[t];return n}function wc(a,e){const t={points:null,lines:null,polygons:null};for(const n in t){const s=a[n].globalFeatureIds.value;t[n]=new Uint8ClampedArray(s.length*4);const i=[];for(let r=0;r<s.length;r++)e(s[r],i),t[n][r*4+0]=i[0],t[n][r*4+1]=i[1],t[n][r*4+2]=i[2],t[n][r*4+3]=255}return t}const zs=`uniform sdfUniforms {
  float gamma;
  bool enabled;
  float buffer;
  float outlineBuffer;
  vec4 outlineColor;
} sdf;
`,kc={name:"sdf",vs:zs,fs:zs,uniformTypes:{gamma:"f32",enabled:"f32",buffer:"f32",outlineBuffer:"f32",outlineColor:"vec4<f32>"}},Ic=`#version 300 es
#define SHADER_NAME multi-icon-layer-fragment-shader
precision highp float;
uniform sampler2D iconsTexture;
in vec4 vColor;
in vec2 vTextureCoords;
in vec2 uv;
out vec4 fragColor;
void main(void) {
geometry.uv = uv;
if (!bool(picking.isActive)) {
float alpha = texture(iconsTexture, vTextureCoords).a;
vec4 color = vColor;
if (sdf.enabled) {
float distance = alpha;
alpha = smoothstep(sdf.buffer - sdf.gamma, sdf.buffer + sdf.gamma, distance);
if (sdf.outlineBuffer > 0.0) {
float inFill = alpha;
float inBorder = smoothstep(sdf.outlineBuffer - sdf.gamma, sdf.outlineBuffer + sdf.gamma, distance);
color = mix(sdf.outlineColor, vColor, inFill);
alpha = inBorder;
}
}
float a = alpha * color.a;
if (a < icon.alphaCutoff) {
discard;
}
fragColor = vec4(color.rgb, a * layer.opacity);
}
DECKGL_FILTER_COLOR(fragColor, geometry);
}
`,hn=192/256,Vs=[],Tc={getIconOffsets:{type:"accessor",value:a=>a.offsets},alphaCutoff:.001,smoothing:.1,outlineWidth:0,outlineColor:{type:"color",value:[0,0,0,255]}};class Hn extends Kt{getShaders(){const e=super.getShaders();return{...e,modules:[...e.modules,kc],fs:Ic}}initializeState(){super.initializeState(),this.getAttributeManager().addInstanced({instanceOffsets:{size:2,accessor:"getIconOffsets"},instancePickingColors:{type:"uint8",size:3,accessor:(t,{index:n,target:s})=>this.encodePickingColor(n,s)}})}updateState(e){super.updateState(e);const{props:t,oldProps:n}=e;let{outlineColor:s}=t;s!==n.outlineColor&&(s=s.map(i=>i/255),s[3]=Number.isFinite(s[3])?s[3]:1,this.setState({outlineColor:s})),!t.sdf&&t.outlineWidth&&ae.warn(`${this.id}: fontSettings.sdf is required to render outline`)()}draw(e){const{sdf:t,smoothing:n,outlineWidth:s}=this.props,{outlineColor:i}=this.state,r=s?Math.max(n,hn*(1-s)):-1,o=this.state.model,l={buffer:hn,outlineBuffer:r,gamma:n,enabled:!!t,outlineColor:i};if(o.shaderInputs.setProps({sdf:l}),super.draw(e),t&&s){const{iconManager:c}=this.state;c.getTexture()&&(o.shaderInputs.setProps({sdf:{...l,outlineBuffer:hn}}),o.draw(this.context.renderPass))}}getInstanceOffset(e){return e?Array.from(e).flatMap(t=>super.getInstanceOffset(t)):Vs}getInstanceColorMode(e){return 1}getInstanceIconFrame(e){return e?Array.from(e).flatMap(t=>super.getInstanceIconFrame(t)):Vs}}Hn.defaultProps=Tc;Hn.layerName="MultiIconLayer";const Gt=1e20;class Pc{constructor({fontSize:e=24,buffer:t=3,radius:n=8,cutoff:s=.25,fontFamily:i="sans-serif",fontWeight:r="normal",fontStyle:o="normal"}={}){this.buffer=t,this.cutoff=s,this.radius=n;const l=this.size=e+t*4,c=this._createCanvas(l),u=this.ctx=c.getContext("2d",{willReadFrequently:!0});u.font=`${o} ${r} ${e}px ${i}`,u.textBaseline="alphabetic",u.textAlign="left",u.fillStyle="black",this.gridOuter=new Float64Array(l*l),this.gridInner=new Float64Array(l*l),this.f=new Float64Array(l),this.z=new Float64Array(l+1),this.v=new Uint16Array(l)}_createCanvas(e){const t=document.createElement("canvas");return t.width=t.height=e,t}draw(e){const{width:t,actualBoundingBoxAscent:n,actualBoundingBoxDescent:s,actualBoundingBoxLeft:i,actualBoundingBoxRight:r}=this.ctx.measureText(e),o=Math.ceil(n),l=0,c=Math.max(0,Math.min(this.size-this.buffer,Math.ceil(r-i))),u=Math.min(this.size-this.buffer,o+Math.ceil(s)),f=c+2*this.buffer,p=u+2*this.buffer,x=Math.max(f*p,0),I=new Uint8ClampedArray(x),L={data:I,width:f,height:p,glyphWidth:c,glyphHeight:u,glyphTop:o,glyphLeft:l,glyphAdvance:t};if(c===0||u===0)return L;const{ctx:E,buffer:M,gridInner:R,gridOuter:T}=this;E.clearRect(M,M,c,u),E.fillText(e,M,M+o);const B=E.getImageData(M,M,c,u);T.fill(Gt,0,x),R.fill(0,0,x);for(let V=0;V<u;V++)for(let z=0;z<c;z++){const se=B.data[4*(V*c+z)+3]/255;if(se===0)continue;const ne=(V+M)*f+z+M;if(se===1)T[ne]=0,R[ne]=Gt;else{const X=.5-se;T[ne]=X>0?X*X:0,R[ne]=X<0?X*X:0}}Ws(T,0,0,f,p,f,this.f,this.v,this.z),Ws(R,M,M,c,u,f,this.f,this.v,this.z);for(let V=0;V<x;V++){const z=Math.sqrt(T[V])-Math.sqrt(R[V]);I[V]=Math.round(255-255*(z/this.radius+this.cutoff))}return L}}function Ws(a,e,t,n,s,i,r,o,l){for(let c=e;c<e+n;c++)Gs(a,t*i+c,i,s,r,o,l);for(let c=t;c<t+s;c++)Gs(a,c*i+e,1,n,r,o,l)}function Gs(a,e,t,n,s,i,r){i[0]=0,r[0]=-1e20,r[1]=Gt,s[0]=a[e];for(let o=1,l=0,c=0;o<n;o++){s[o]=a[e+o*t];const u=o*o;do{const f=i[l];c=(s[o]-s[f]+u-f*f)/(o-f)/2}while(c<=r[l]&&--l>-1);l++,i[l]=o,r[l]=c,r[l+1]=Gt}for(let o=0,l=0;o<n;o++){for(;r[l+1]<o;)l++;const c=i[l],u=o-c;a[e+o*t]=s[c]+u*u}}const Ac=32,Cc=[];function Lc(a){return Math.pow(2,Math.ceil(Math.log2(a)))}function Sc({characterSet:a,getFontWidth:e,fontHeight:t,buffer:n,maxCanvasWidth:s,mapping:i={},xOffset:r=0,yOffset:o=0}){let l=0,c=r;const u=t+n*2;for(const f of a)if(!i[f]){const p=e(f);c+p+n*2>s&&(c=0,l++),i[f]={x:c+n,y:o+l*u+n,width:p,height:u,layoutWidth:p,layoutHeight:t},c+=p+n*2}return{mapping:i,xOffset:c,yOffset:o+l*u,canvasHeight:Lc(o+(l+1)*u)}}function er(a,e,t,n){let s=0;for(let i=e;i<t;i++){const r=a[i];s+=n[r]?.layoutWidth||0}return s}function tr(a,e,t,n,s,i){let r=e,o=0;for(let l=e;l<t;l++){const c=er(a,l,l+1,s);o+c>n&&(r<l&&i.push(l),r=l,o=0),o+=c}return o}function Ec(a,e,t,n,s,i){let r=e,o=e,l=e,c=0;for(let u=e;u<t;u++)if((a[u]===" "||a[u+1]===" "||u+1===t)&&(l=u+1),l>o){let f=er(a,o,l,s);c+f>n&&(r<o&&(i.push(o),r=o,c=0),f>n&&(f=tr(a,o,l,n,s,i),r=i[i.length-1])),o=l,c+=f}return c}function Oc(a,e,t,n,s=0,i){i===void 0&&(i=a.length);const r=[];return e==="break-all"?tr(a,s,i,t,n,r):Ec(a,s,i,t,n,r),r}function Mc(a,e,t,n,s,i){let r=0,o=0;for(let l=e;l<t;l++){const c=a[l],u=n[c];u?(o||(o=u.layoutHeight),s[l]=r+u.layoutWidth/2,r+=u.layoutWidth):(ae.warn(`Missing character: ${c} (${c.codePointAt(0)})`)(),s[l]=r,r+=Ac)}i[0]=r,i[1]=o}function Bc(a,e,t,n,s){const i=Array.from(a),r=i.length,o=new Array(r),l=new Array(r),c=new Array(r),u=(t==="break-word"||t==="break-all")&&isFinite(n)&&n>0,f=[0,0],p=[0,0];let x=0,I=0,L=0;for(let E=0;E<=r;E++){const M=i[E];if((M===`
`||E===r)&&(L=E),L>I){const R=u?Oc(i,t,n,s,I,L):Cc;for(let T=0;T<=R.length;T++){const B=T===0?I:R[T-1],V=T<R.length?R[T]:L;Mc(i,B,V,s,o,p);for(let z=B;z<V;z++){o[z]-p[0]/2;const se=i[z],ne=s[se]?.layoutOffsetY||0;l[z]=x+p[1]/2+ne,c[z]=p[0]}x=x+p[1]*e,f[0]=Math.max(f[0],p[0])}I=L}M===`
`&&(o[I]=0,l[I]=0,c[I]=0,I++)}return f[1]=x,{x:o,y:l,rowWidth:c,size:f}}function Fc({value:a,length:e,stride:t,offset:n,startIndices:s,characterSet:i}){const r=a.BYTES_PER_ELEMENT,o=t?t/r:1,l=n?n/r:0,c=s[e]||Math.ceil((a.length-l)/o),u=i&&new Set,f=new Array(e);let p=a;if(o>1||l>0){const x=a.constructor;p=new x(c);for(let I=0;I<c;I++)p[I]=a[I*o+l]}for(let x=0;x<e;x++){const I=s[x],L=s[x+1]||c,E=p.subarray(I,L);f[x]=String.fromCodePoint.apply(null,E),u&&E.forEach(u.add,u)}if(u)for(const x of u)i.add(String.fromCodePoint(x));return{texts:f,characterCount:c}}class nr{constructor(e=5){this._cache={},this._order=[],this.limit=e}get(e){const t=this._cache[e];return t&&(this._deleteOrder(e),this._appendOrder(e)),t}set(e,t){this._cache[e]?(this.delete(e),this._cache[e]=t,this._appendOrder(e)):(Object.keys(this._cache).length===this.limit&&this.delete(this._order[0]),this._cache[e]=t,this._appendOrder(e))}delete(e){this._cache[e]&&(delete this._cache[e],this._deleteOrder(e))}_deleteOrder(e){const t=this._order.indexOf(e);t>=0&&this._order.splice(t,1)}_appendOrder(e){this._order.push(e)}}function Nc(){const a=[];for(let e=32;e<128;e++)a.push(String.fromCharCode(e));return a}const Ye={fontFamily:"Monaco, monospace",fontWeight:"normal",characterSet:Nc(),fontSize:64,buffer:4,sdf:!1,cutoff:.25,radius:12,smoothing:.1},js=1024,Hs=.9,qs=1.2,sr=3;let jt=new nr(sr);function Rc(a,e){let t;typeof e=="string"?t=new Set(Array.from(e)):t=new Set(e);const n=jt.get(a);if(!n)return t;for(const s in n.mapping)t.has(s)&&t.delete(s);return t}function Dc(a,e){for(let t=0;t<a.length;t++)e.data[4*t+3]=a[t]}function Ys(a,e,t,n){a.font=`${n} ${t}px ${e}`,a.fillStyle="#000",a.textBaseline="alphabetic",a.textAlign="left"}function Uc(a){ae.assert(Number.isFinite(a)&&a>=sr,"Invalid cache limit"),jt=new nr(a)}class $c{constructor(){this.props={...Ye}}get atlas(){return this._atlas}get mapping(){return this._atlas&&this._atlas.mapping}get scale(){const{fontSize:e,buffer:t}=this.props;return(e*qs+t*2)/e}setProps(e={}){Object.assign(this.props,e),this._key=this._getKey();const t=Rc(this._key,this.props.characterSet),n=jt.get(this._key);if(n&&t.size===0){this._atlas!==n&&(this._atlas=n);return}const s=this._generateFontAtlas(t,n);this._atlas=s,jt.set(this._key,s)}_generateFontAtlas(e,t){const{fontFamily:n,fontWeight:s,fontSize:i,buffer:r,sdf:o,radius:l,cutoff:c}=this.props;let u=t&&t.data;u||(u=document.createElement("canvas"),u.width=js);const f=u.getContext("2d",{willReadFrequently:!0});Ys(f,n,i,s);const{mapping:p,canvasHeight:x,xOffset:I,yOffset:L}=Sc({getFontWidth:E=>f.measureText(E).width,fontHeight:i*qs,buffer:r,characterSet:e,maxCanvasWidth:js,...t&&{mapping:t.mapping,xOffset:t.xOffset,yOffset:t.yOffset}});if(u.height!==x){const E=f.getImageData(0,0,u.width,u.height);u.height=x,f.putImageData(E,0,0)}if(Ys(f,n,i,s),o){const E=new Pc({fontSize:i,buffer:r,radius:l,cutoff:c,fontFamily:n,fontWeight:`${s}`});for(const M of e){const{data:R,width:T,height:B,glyphTop:V}=E.draw(M);p[M].width=T,p[M].layoutOffsetY=i*Hs-V;const z=f.createImageData(T,B);Dc(R,z),f.putImageData(z,p[M].x,p[M].y)}}else for(const E of e)f.fillText(E,p[E].x,p[E].y+r+i*Hs);return{xOffset:I,yOffset:L,mapping:p,data:u,width:u.width,height:u.height}}_getKey(){const{fontFamily:e,fontWeight:t,fontSize:n,buffer:s,sdf:i,radius:r,cutoff:o}=this.props;return i?`${e} ${t} ${n} ${s} ${r} ${o}`:`${e} ${t} ${n} ${s}`}}const Ks=`uniform textBackgroundUniforms {
  bool billboard;
  float sizeScale;
  float sizeMinPixels;
  float sizeMaxPixels;
  vec4 borderRadius;
  vec4 padding;
  highp int sizeUnits;
  bool stroked;
} textBackground;
`,zc={name:"textBackground",vs:Ks,fs:Ks,uniformTypes:{billboard:"f32",sizeScale:"f32",sizeMinPixels:"f32",sizeMaxPixels:"f32",borderRadius:"vec4<f32>",padding:"vec4<f32>",sizeUnits:"i32",stroked:"f32"}},Vc=`#version 300 es
#define SHADER_NAME text-background-layer-vertex-shader
in vec2 positions;
in vec3 instancePositions;
in vec3 instancePositions64Low;
in vec4 instanceRects;
in float instanceSizes;
in float instanceAngles;
in vec2 instancePixelOffsets;
in float instanceLineWidths;
in vec4 instanceFillColors;
in vec4 instanceLineColors;
in vec3 instancePickingColors;
out vec4 vFillColor;
out vec4 vLineColor;
out float vLineWidth;
out vec2 uv;
out vec2 dimensions;
vec2 rotate_by_angle(vec2 vertex, float angle) {
float angle_radian = radians(angle);
float cos_angle = cos(angle_radian);
float sin_angle = sin(angle_radian);
mat2 rotationMatrix = mat2(cos_angle, -sin_angle, sin_angle, cos_angle);
return rotationMatrix * vertex;
}
void main(void) {
geometry.worldPosition = instancePositions;
geometry.uv = positions;
geometry.pickingColor = instancePickingColors;
uv = positions;
vLineWidth = instanceLineWidths;
float sizePixels = clamp(
project_size_to_pixel(instanceSizes * textBackground.sizeScale, textBackground.sizeUnits),
textBackground.sizeMinPixels, textBackground.sizeMaxPixels
);
dimensions = instanceRects.zw * sizePixels + textBackground.padding.xy + textBackground.padding.zw;
vec2 pixelOffset = (positions * instanceRects.zw + instanceRects.xy) * sizePixels + mix(-textBackground.padding.xy, textBackground.padding.zw, positions);
pixelOffset = rotate_by_angle(pixelOffset, instanceAngles);
pixelOffset += instancePixelOffsets;
pixelOffset.y *= -1.0;
if (textBackground.billboard)  {
gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, vec3(0.0), geometry.position);
DECKGL_FILTER_GL_POSITION(gl_Position, geometry);
vec3 offset = vec3(pixelOffset, 0.0);
DECKGL_FILTER_SIZE(offset, geometry);
gl_Position.xy += project_pixel_size_to_clipspace(offset.xy);
} else {
vec3 offset_common = vec3(project_pixel_size(pixelOffset), 0.0);
DECKGL_FILTER_SIZE(offset_common, geometry);
gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, offset_common, geometry.position);
DECKGL_FILTER_GL_POSITION(gl_Position, geometry);
}
vFillColor = vec4(instanceFillColors.rgb, instanceFillColors.a * layer.opacity);
DECKGL_FILTER_COLOR(vFillColor, geometry);
vLineColor = vec4(instanceLineColors.rgb, instanceLineColors.a * layer.opacity);
DECKGL_FILTER_COLOR(vLineColor, geometry);
}
`,Wc=`#version 300 es
#define SHADER_NAME text-background-layer-fragment-shader
precision highp float;
in vec4 vFillColor;
in vec4 vLineColor;
in float vLineWidth;
in vec2 uv;
in vec2 dimensions;
out vec4 fragColor;
float round_rect(vec2 p, vec2 size, vec4 radii) {
vec2 pixelPositionCB = (p - 0.5) * size;
vec2 sizeCB = size * 0.5;
float maxBorderRadius = min(size.x, size.y) * 0.5;
vec4 borderRadius = vec4(min(radii, maxBorderRadius));
borderRadius.xy =
(pixelPositionCB.x > 0.0) ? borderRadius.xy : borderRadius.zw;
borderRadius.x = (pixelPositionCB.y > 0.0) ? borderRadius.x : borderRadius.y;
vec2 q = abs(pixelPositionCB) - sizeCB + borderRadius.x;
return -(min(max(q.x, q.y), 0.0) + length(max(q, 0.0)) - borderRadius.x);
}
float rect(vec2 p, vec2 size) {
vec2 pixelPosition = p * size;
return min(min(pixelPosition.x, size.x - pixelPosition.x),
min(pixelPosition.y, size.y - pixelPosition.y));
}
vec4 get_stroked_fragColor(float dist) {
float isBorder = smoothedge(dist, vLineWidth);
return mix(vFillColor, vLineColor, isBorder);
}
void main(void) {
geometry.uv = uv;
if (textBackground.borderRadius != vec4(0.0)) {
float distToEdge = round_rect(uv, dimensions, textBackground.borderRadius);
if (textBackground.stroked) {
fragColor = get_stroked_fragColor(distToEdge);
} else {
fragColor = vFillColor;
}
float shapeAlpha = smoothedge(-distToEdge, 0.0);
fragColor.a *= shapeAlpha;
} else {
if (textBackground.stroked) {
float distToEdge = rect(uv, dimensions);
fragColor = get_stroked_fragColor(distToEdge);
} else {
fragColor = vFillColor;
}
}
DECKGL_FILTER_COLOR(fragColor, geometry);
}
`,Gc={billboard:!0,sizeScale:1,sizeUnits:"pixels",sizeMinPixels:0,sizeMaxPixels:Number.MAX_SAFE_INTEGER,borderRadius:{type:"object",value:0},padding:{type:"array",value:[0,0,0,0]},getPosition:{type:"accessor",value:a=>a.position},getSize:{type:"accessor",value:1},getAngle:{type:"accessor",value:0},getPixelOffset:{type:"accessor",value:[0,0]},getBoundingRect:{type:"accessor",value:[0,0,0,0]},getFillColor:{type:"accessor",value:[0,0,0,255]},getLineColor:{type:"accessor",value:[0,0,0,255]},getLineWidth:{type:"accessor",value:1}};class qn extends Ue{getShaders(){return super.getShaders({vs:Vc,fs:Wc,modules:[pt,gt,zc]})}initializeState(){this.getAttributeManager().addInstanced({instancePositions:{size:3,type:"float64",fp64:this.use64bitPositions(),transition:!0,accessor:"getPosition"},instanceSizes:{size:1,transition:!0,accessor:"getSize",defaultValue:1},instanceAngles:{size:1,transition:!0,accessor:"getAngle"},instanceRects:{size:4,accessor:"getBoundingRect"},instancePixelOffsets:{size:2,transition:!0,accessor:"getPixelOffset"},instanceFillColors:{size:4,transition:!0,type:"unorm8",accessor:"getFillColor",defaultValue:[0,0,0,255]},instanceLineColors:{size:4,transition:!0,type:"unorm8",accessor:"getLineColor",defaultValue:[0,0,0,255]},instanceLineWidths:{size:1,transition:!0,accessor:"getLineWidth",defaultValue:1}})}updateState(e){super.updateState(e);const{changeFlags:t}=e;t.extensionsChanged&&(this.state.model?.destroy(),this.state.model=this._getModel(),this.getAttributeManager().invalidateAll())}draw({uniforms:e}){const{billboard:t,sizeScale:n,sizeUnits:s,sizeMinPixels:i,sizeMaxPixels:r,getLineWidth:o}=this.props;let{padding:l,borderRadius:c}=this.props;l.length<4&&(l=[l[0],l[1],l[0],l[1]]),Array.isArray(c)||(c=[c,c,c,c]);const u=this.state.model,f={billboard:t,stroked:!!o,borderRadius:c,padding:l,sizeUnits:ct[s],sizeScale:n,sizeMinPixels:i,sizeMaxPixels:r};u.shaderInputs.setProps({textBackground:f}),u.draw(this.context.renderPass)}_getModel(){const e=[0,0,1,0,0,1,1,1];return new ke(this.context.device,{...this.getShaders(),id:this.props.id,bufferLayout:this.getAttributeManager().getBufferLayouts(),geometry:new Xe({topology:"triangle-strip",vertexCount:4,attributes:{positions:{size:2,value:new Float32Array(e)}}}),isInstanced:!0})}}qn.defaultProps=Gc;qn.layerName="TextBackgroundLayer";const Zs={start:1,middle:0,end:-1},Xs={top:1,center:0,bottom:-1},dn=[0,0,0,255],jc=1,Hc={billboard:!0,sizeScale:1,sizeUnits:"pixels",sizeMinPixels:0,sizeMaxPixels:Number.MAX_SAFE_INTEGER,background:!1,getBackgroundColor:{type:"accessor",value:[255,255,255,255]},getBorderColor:{type:"accessor",value:dn},getBorderWidth:{type:"accessor",value:0},backgroundBorderRadius:{type:"object",value:0},backgroundPadding:{type:"array",value:[0,0,0,0]},characterSet:{type:"object",value:Ye.characterSet},fontFamily:Ye.fontFamily,fontWeight:Ye.fontWeight,lineHeight:jc,outlineWidth:{type:"number",value:0,min:0},outlineColor:{type:"color",value:dn},fontSettings:{type:"object",value:{},compare:1},wordBreak:"break-word",maxWidth:{type:"number",value:-1},getText:{type:"accessor",value:a=>a.text},getPosition:{type:"accessor",value:a=>a.position},getColor:{type:"accessor",value:dn},getSize:{type:"accessor",value:32},getAngle:{type:"accessor",value:0},getTextAnchor:{type:"accessor",value:"middle"},getAlignmentBaseline:{type:"accessor",value:"center"},getPixelOffset:{type:"accessor",value:[0,0]},backgroundColor:{deprecatedFor:["background","getBackgroundColor"]}};class Yn extends Vn{constructor(){super(...arguments),this.getBoundingRect=(e,t)=>{let{size:[n,s]}=this.transformParagraph(e,t);const{fontSize:i}=this.state.fontAtlasManager.props;n/=i,s/=i;const{getTextAnchor:r,getAlignmentBaseline:o}=this.props,l=Zs[typeof r=="function"?r(e,t):r],c=Xs[typeof o=="function"?o(e,t):o];return[(l-1)*n/2,(c-1)*s/2,n,s]},this.getIconOffsets=(e,t)=>{const{getTextAnchor:n,getAlignmentBaseline:s}=this.props,{x:i,y:r,rowWidth:o,size:[l,c]}=this.transformParagraph(e,t),u=Zs[typeof n=="function"?n(e,t):n],f=Xs[typeof s=="function"?s(e,t):s],p=i.length,x=new Array(p*2);let I=0;for(let L=0;L<p;L++){const E=(1-u)*(l-o[L])/2;x[I++]=(u-1)*l/2+E+i[L],x[I++]=(f-1)*c/2+r[L]}return x}}initializeState(){this.state={styleVersion:0,fontAtlasManager:new $c},this.props.maxWidth>0&&ae.warn("v8.9 breaking change: TextLayer maxWidth is now relative to text size")()}updateState(e){const{props:t,oldProps:n,changeFlags:s}=e;(s.dataChanged||s.updateTriggersChanged&&(s.updateTriggersChanged.all||s.updateTriggersChanged.getText))&&this._updateText(),(this._updateFontAtlas()||t.lineHeight!==n.lineHeight||t.wordBreak!==n.wordBreak||t.maxWidth!==n.maxWidth)&&this.setState({styleVersion:this.state.styleVersion+1})}getPickingInfo({info:e}){return e.object=e.index>=0?this.props.data[e.index]:null,e}_updateFontAtlas(){const{fontSettings:e,fontFamily:t,fontWeight:n}=this.props,{fontAtlasManager:s,characterSet:i}=this.state,r={...e,characterSet:i,fontFamily:t,fontWeight:n};if(!s.mapping)return s.setProps(r),!0;for(const o in r)if(r[o]!==s.props[o])return s.setProps(r),!0;return!1}_updateText(){const{data:e,characterSet:t}=this.props,n=e.attributes?.getText;let{getText:s}=this.props,i=e.startIndices,r;const o=t==="auto"&&new Set;if(n&&i){const{texts:l,characterCount:c}=Fc({...ArrayBuffer.isView(n)?{value:n}:n,length:e.length,startIndices:i,characterSet:o});r=c,s=(u,{index:f})=>l[f]}else{const{iterable:l,objectInfo:c}=qt(e);i=[0],r=0;for(const u of l){c.index++;const f=Array.from(s(u,c)||"");o&&f.forEach(o.add,o),r+=f.length,i.push(r)}}this.setState({getText:s,startIndices:i,numInstances:r,characterSet:o||t})}transformParagraph(e,t){const{fontAtlasManager:n}=this.state,s=n.mapping,i=this.state.getText,{wordBreak:r,lineHeight:o,maxWidth:l}=this.props,c=i(e,t)||"";return Bc(c,o,r,l*n.props.fontSize,s)}renderLayers(){const{startIndices:e,numInstances:t,getText:n,fontAtlasManager:{scale:s,atlas:i,mapping:r},styleVersion:o}=this.state,{data:l,_dataDiff:c,getPosition:u,getColor:f,getSize:p,getAngle:x,getPixelOffset:I,getBackgroundColor:L,getBorderColor:E,getBorderWidth:M,backgroundBorderRadius:R,backgroundPadding:T,background:B,billboard:V,fontSettings:z,outlineWidth:se,outlineColor:ne,sizeScale:X,sizeUnits:Ie,sizeMinPixels:Te,sizeMaxPixels:Je,transitions:ie,updateTriggers:ee}=this.props,Qe=this.getSubLayerClass("characters",Hn),g=this.getSubLayerClass("background",qn);return[B&&new g({getFillColor:L,getLineColor:E,getLineWidth:M,borderRadius:R,padding:T,getPosition:u,getSize:p,getAngle:x,getPixelOffset:I,billboard:V,sizeScale:X,sizeUnits:Ie,sizeMinPixels:Te,sizeMaxPixels:Je,transitions:ie&&{getPosition:ie.getPosition,getAngle:ie.getAngle,getSize:ie.getSize,getFillColor:ie.getBackgroundColor,getLineColor:ie.getBorderColor,getLineWidth:ie.getBorderWidth,getPixelOffset:ie.getPixelOffset}},this.getSubLayerProps({id:"background",updateTriggers:{getPosition:ee.getPosition,getAngle:ee.getAngle,getSize:ee.getSize,getFillColor:ee.getBackgroundColor,getLineColor:ee.getBorderColor,getLineWidth:ee.getBorderWidth,getPixelOffset:ee.getPixelOffset,getBoundingRect:{getText:ee.getText,getTextAnchor:ee.getTextAnchor,getAlignmentBaseline:ee.getAlignmentBaseline,styleVersion:o}}}),{data:l.attributes&&l.attributes.background?{length:l.length,attributes:l.attributes.background}:l,_dataDiff:c,autoHighlight:!1,getBoundingRect:this.getBoundingRect}),new Qe({sdf:z.sdf,smoothing:Number.isFinite(z.smoothing)?z.smoothing:Ye.smoothing,outlineWidth:se/(z.radius||Ye.radius),outlineColor:ne,iconAtlas:i,iconMapping:r,getPosition:u,getColor:f,getSize:p,getAngle:x,getPixelOffset:I,billboard:V,sizeScale:X*s,sizeUnits:Ie,sizeMinPixels:Te*s,sizeMaxPixels:Je*s,transitions:ie&&{getPosition:ie.getPosition,getAngle:ie.getAngle,getColor:ie.getColor,getSize:ie.getSize,getPixelOffset:ie.getPixelOffset}},this.getSubLayerProps({id:"characters",updateTriggers:{all:ee.getText,getPosition:ee.getPosition,getAngle:ee.getAngle,getColor:ee.getColor,getSize:ee.getSize,getPixelOffset:ee.getPixelOffset,getIconOffsets:{getTextAnchor:ee.getTextAnchor,getAlignmentBaseline:ee.getAlignmentBaseline,styleVersion:o}}}),{data:l,_dataDiff:c,startIndices:e,numInstances:t,getIconOffsets:this.getIconOffsets,getIcon:n})]}static set fontAtlasCacheLimit(e){Uc(e)}}Yn.defaultProps=Hc;Yn.layerName="TextLayer";const Et={circle:{type:Wn,props:{filled:"filled",stroked:"stroked",lineWidthMaxPixels:"lineWidthMaxPixels",lineWidthMinPixels:"lineWidthMinPixels",lineWidthScale:"lineWidthScale",lineWidthUnits:"lineWidthUnits",pointRadiusMaxPixels:"radiusMaxPixels",pointRadiusMinPixels:"radiusMinPixels",pointRadiusScale:"radiusScale",pointRadiusUnits:"radiusUnits",pointAntialiasing:"antialiasing",pointBillboard:"billboard",getFillColor:"getFillColor",getLineColor:"getLineColor",getLineWidth:"getLineWidth",getPointRadius:"getRadius"}},icon:{type:Kt,props:{iconAtlas:"iconAtlas",iconMapping:"iconMapping",iconSizeMaxPixels:"sizeMaxPixels",iconSizeMinPixels:"sizeMinPixels",iconSizeScale:"sizeScale",iconSizeUnits:"sizeUnits",iconAlphaCutoff:"alphaCutoff",iconBillboard:"billboard",getIcon:"getIcon",getIconAngle:"getAngle",getIconColor:"getColor",getIconPixelOffset:"getPixelOffset",getIconSize:"getSize"}},text:{type:Yn,props:{textSizeMaxPixels:"sizeMaxPixels",textSizeMinPixels:"sizeMinPixels",textSizeScale:"sizeScale",textSizeUnits:"sizeUnits",textBackground:"background",textBackgroundPadding:"backgroundPadding",textFontFamily:"fontFamily",textFontWeight:"fontWeight",textLineHeight:"lineHeight",textMaxWidth:"maxWidth",textOutlineColor:"outlineColor",textOutlineWidth:"outlineWidth",textWordBreak:"wordBreak",textCharacterSet:"characterSet",textBillboard:"billboard",textFontSettings:"fontSettings",getText:"getText",getTextAngle:"getAngle",getTextColor:"getColor",getTextPixelOffset:"getPixelOffset",getTextSize:"getSize",getTextAnchor:"getTextAnchor",getTextAlignmentBaseline:"getAlignmentBaseline",getTextBackgroundColor:"getBackgroundColor",getTextBorderColor:"getBorderColor",getTextBorderWidth:"getBorderWidth"}}},Ot={type:Gn,props:{lineWidthUnits:"widthUnits",lineWidthScale:"widthScale",lineWidthMinPixels:"widthMinPixels",lineWidthMaxPixels:"widthMaxPixels",lineJointRounded:"jointRounded",lineCapRounded:"capRounded",lineMiterLimit:"miterLimit",lineBillboard:"billboard",getLineColor:"getColor",getLineWidth:"getWidth"}},Cn={type:jn,props:{extruded:"extruded",filled:"filled",wireframe:"wireframe",elevationScale:"elevationScale",material:"material",_full3d:"_full3d",getElevation:"getElevation",getFillColor:"getFillColor",getLineColor:"getLineColor"}};function st({type:a,props:e}){const t={};for(const n in e)t[n]=a.defaultProps[e[n]];return t}function pn(a,e){const{transitions:t,updateTriggers:n}=a.props,s={updateTriggers:{},transitions:t&&{getPosition:t.geometry}};for(const i in e){const r=e[i];let o=a.props[i];i.startsWith("get")&&(o=a.getSubLayerAccessor(o),s.updateTriggers[r]=n[i],t&&(s.transitions[r]=t[i])),s[r]=o}return s}function qc(a){if(Array.isArray(a))return a;switch(ae.assert(a.type,"GeoJSON does not have type"),a.type){case"Feature":return[a];case"FeatureCollection":return ae.assert(Array.isArray(a.features),"GeoJSON does not have features array"),a.features;default:return[{geometry:a}]}}function Js(a,e,t={}){const n={pointFeatures:[],lineFeatures:[],polygonFeatures:[],polygonOutlineFeatures:[]},{startRow:s=0,endRow:i=a.length}=t;for(let r=s;r<i;r++){const o=a[r],{geometry:l}=o;if(l)if(l.type==="GeometryCollection"){ae.assert(Array.isArray(l.geometries),"GeoJSON does not have geometries array");const{geometries:c}=l;for(let u=0;u<c.length;u++){const f=c[u];Qs(f,n,e,o,r)}}else Qs(l,n,e,o,r)}return n}function Qs(a,e,t,n,s){const{type:i,coordinates:r}=a,{pointFeatures:o,lineFeatures:l,polygonFeatures:c,polygonOutlineFeatures:u}=e;if(!Kc(i,r)){ae.warn(`${i} coordinates are malformed`)();return}switch(i){case"Point":o.push(t({geometry:a},n,s));break;case"MultiPoint":r.forEach(f=>{o.push(t({geometry:{type:"Point",coordinates:f}},n,s))});break;case"LineString":l.push(t({geometry:a},n,s));break;case"MultiLineString":r.forEach(f=>{l.push(t({geometry:{type:"LineString",coordinates:f}},n,s))});break;case"Polygon":c.push(t({geometry:a},n,s)),r.forEach(f=>{u.push(t({geometry:{type:"LineString",coordinates:f}},n,s))});break;case"MultiPolygon":r.forEach(f=>{c.push(t({geometry:{type:"Polygon",coordinates:f}},n,s)),f.forEach(p=>{u.push(t({geometry:{type:"LineString",coordinates:p}},n,s))})});break}}const Yc={Point:1,MultiPoint:2,LineString:2,MultiLineString:3,Polygon:3,MultiPolygon:4};function Kc(a,e){let t=Yc[a];for(ae.assert(t,`Unknown GeoJSON type ${a}`);e&&--t>0;)e=e[0];return e&&Number.isFinite(e[0])}function ir(){return{points:{},lines:{},polygons:{},polygonsOutline:{}}}function It(a){return a.geometry.coordinates}function Zc(a,e){const t=ir(),{pointFeatures:n,lineFeatures:s,polygonFeatures:i,polygonOutlineFeatures:r}=a;return t.points.data=n,t.points._dataDiff=e.pointFeatures&&(()=>e.pointFeatures),t.points.getPosition=It,t.lines.data=s,t.lines._dataDiff=e.lineFeatures&&(()=>e.lineFeatures),t.lines.getPath=It,t.polygons.data=i,t.polygons._dataDiff=e.polygonFeatures&&(()=>e.polygonFeatures),t.polygons.getPolygon=It,t.polygonsOutline.data=r,t.polygonsOutline._dataDiff=e.polygonOutlineFeatures&&(()=>e.polygonOutlineFeatures),t.polygonsOutline.getPath=It,t}function Xc(a,e){const t=ir(),{points:n,lines:s,polygons:i}=a,r=wc(a,e);return t.points.data={length:n.positions.value.length/n.positions.size,attributes:{...n.attributes,getPosition:n.positions,instancePickingColors:{size:4,value:r.points}},properties:n.properties,numericProps:n.numericProps,featureIds:n.featureIds},t.lines.data={length:s.pathIndices.value.length-1,startIndices:s.pathIndices.value,attributes:{...s.attributes,getPath:s.positions,instancePickingColors:{size:4,value:r.lines}},properties:s.properties,numericProps:s.numericProps,featureIds:s.featureIds},t.lines._pathType="open",t.polygons.data={length:i.polygonIndices.value.length-1,startIndices:i.polygonIndices.value,attributes:{...i.attributes,getPolygon:i.positions,pickingColors:{size:4,value:r.polygons}},properties:i.properties,numericProps:i.numericProps,featureIds:i.featureIds},t.polygons._normalize=!1,i.triangles&&(t.polygons.data.attributes.indices=i.triangles.value),t.polygonsOutline.data={length:i.primitivePolygonIndices.value.length-1,startIndices:i.primitivePolygonIndices.value,attributes:{...i.attributes,getPath:i.positions,instancePickingColors:{size:4,value:r.polygons}},properties:i.properties,numericProps:i.numericProps,featureIds:i.featureIds},t.polygonsOutline._pathType="open",t}const Jc=["points","linestrings","polygons"],Qc={...st(Et.circle),...st(Et.icon),...st(Et.text),...st(Ot),...st(Cn),stroked:!0,filled:!0,extruded:!1,wireframe:!1,_full3d:!1,iconAtlas:{type:"object",value:null},iconMapping:{type:"object",value:{}},getIcon:{type:"accessor",value:a=>a.properties.icon},getText:{type:"accessor",value:a=>a.properties.text},pointType:"circle",getRadius:{deprecatedFor:"getPointRadius"}};class rr extends Vn{initializeState(){this.state={layerProps:{},features:{},featuresDiff:{}}}updateState({props:e,changeFlags:t}){if(!t.dataChanged)return;const{data:n}=this.props,s=n&&"points"in n&&"polygons"in n&&"lines"in n;this.setState({binary:s}),s?this._updateStateBinary({props:e,changeFlags:t}):this._updateStateJSON({props:e,changeFlags:t})}_updateStateBinary({props:e,changeFlags:t}){const n=Xc(e.data,this.encodePickingColor);this.setState({layerProps:n})}_updateStateJSON({props:e,changeFlags:t}){const n=qc(e.data),s=this.getSubLayerRow.bind(this);let i={};const r={};if(Array.isArray(t.dataChanged)){const l=this.state.features;for(const c in l)i[c]=l[c].slice(),r[c]=[];for(const c of t.dataChanged){const u=Js(n,s,c);for(const f in l)r[f].push(xc({data:i[f],getIndex:p=>p.__source.index,dataRange:c,replace:u[f]}))}}else i=Js(n,s);const o=Zc(i,r);this.setState({features:i,featuresDiff:r,layerProps:o})}getPickingInfo(e){const t=super.getPickingInfo(e),{index:n,sourceLayer:s}=t;return t.featureType=Jc.find(i=>s.id.startsWith(`${this.id}-${i}-`)),n>=0&&s.id.startsWith(`${this.id}-points-text`)&&this.state.binary&&(t.index=this.props.data.points.globalFeatureIds.value[n]),t}_updateAutoHighlight(e){const t=`${this.id}-points-`,n=e.featureType==="points";for(const s of this.getSubLayers())s.id.startsWith(t)===n&&s.updateAutoHighlight(e)}_renderPolygonLayer(){const{extruded:e,wireframe:t}=this.props,{layerProps:n}=this.state,s="polygons-fill",i=this.shouldRenderSubLayer(s,n.polygons?.data)&&this.getSubLayerClass(s,Cn.type);if(i){const r=pn(this,Cn.props),o=e&&t;return o||delete r.getLineColor,r.updateTriggers.lineColors=o,new i(r,this.getSubLayerProps({id:s,updateTriggers:r.updateTriggers}),n.polygons)}return null}_renderLineLayers(){const{extruded:e,stroked:t}=this.props,{layerProps:n}=this.state,s="polygons-stroke",i="linestrings",r=!e&&t&&this.shouldRenderSubLayer(s,n.polygonsOutline?.data)&&this.getSubLayerClass(s,Ot.type),o=this.shouldRenderSubLayer(i,n.lines?.data)&&this.getSubLayerClass(i,Ot.type);if(r||o){const l=pn(this,Ot.props);return[r&&new r(l,this.getSubLayerProps({id:s,updateTriggers:l.updateTriggers}),n.polygonsOutline),o&&new o(l,this.getSubLayerProps({id:i,updateTriggers:l.updateTriggers}),n.lines)]}return null}_renderPointLayers(){const{pointType:e}=this.props,{layerProps:t,binary:n}=this.state;let{highlightedObjectIndex:s}=this.props;!n&&Number.isFinite(s)&&(s=t.points.data.findIndex(o=>o.__source.index===s));const i=new Set(e.split("+")),r=[];for(const o of i){const l=`points-${o}`,c=Et[o],u=c&&this.shouldRenderSubLayer(l,t.points?.data)&&this.getSubLayerClass(l,c.type);if(u){const f=pn(this,c.props);let p=t.points;if(o==="text"&&n){const{instancePickingColors:x,...I}=p.data.attributes;p={...p,data:{...p.data,attributes:I}}}r.push(new u(f,this.getSubLayerProps({id:l,updateTriggers:f.updateTriggers,highlightedObjectIndex:s}),p))}}return r}renderLayers(){const{extruded:e}=this.props,t=this._renderPolygonLayer(),n=this._renderLineLayers(),s=this._renderPointLayers();return[!e&&t,n,s,e&&t]}getSubLayerAccessor(e){const{binary:t}=this.state;return!t||typeof e!="function"?super.getSubLayerAccessor(e):(n,s)=>{const{data:i,index:r}=s,o=vc(i,r);return e(o,s)}}}rr.layerName="GeoJsonLayer";rr.defaultProps=Qc;export{rr as GeoJsonLayer,Kt as IconLayer,Gn as PathLayer,Wn as ScatterplotLayer,jn as SolidPolygonLayer,Yn as TextLayer,Hn as _MultiIconLayer,qn as _TextBackgroundLayer};
