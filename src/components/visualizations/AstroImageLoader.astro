---
import { Image } from 'astro:assets';

interface Props {
  src: string;
  alt: string;
  width?: number;
  height?: number;
  class?: string;
}

const { src, alt, width, height, class: className, ...rest } = Astro.props;

// Check if it's an external URL
const isExternalUrl = src.startsWith('http://') || src.startsWith('https://');

// For local images, let Astro's image optimization handle it
let optimizedImage;
if (!isExternalUrl) {
  try {
    // Clean up path if needed
    const cleanPath = src.startsWith('/') ? src.substring(1) : src;
    
    // Import the image directly - this triggers Astro's image optimization
    optimizedImage = await import(`../../../${cleanPath}`);
  } catch (error) {
    console.error(`Error loading image from path: ${src}`, error);
  }
}
---

{isExternalUrl ? (
  <img 
    src={src} 
    alt={alt} 
    width={width}
    height={height}
    class={className}
    {...rest}
  />
) : optimizedImage ? (
  <Image 
    src={optimizedImage.default} 
    alt={alt}
    width={width || optimizedImage.default.width}
    height={height || optimizedImage.default.height}
    class={className}
    {...rest}
  />
) : (
  <div class={`image-error ${className || ''}`}>
    <p>Unable to load image: {src}</p>
  </div>
)}

<style>
  .image-error {
    padding: 1rem;
    border: 1px dashed #ccc;
    background-color: #f9f9f9;
    text-align: center;
    font-size: 0.875rem;
    color: #666;
  }
  
  img {
    max-width: 100%;
    height: auto;
    display: block;
  }
</style>
