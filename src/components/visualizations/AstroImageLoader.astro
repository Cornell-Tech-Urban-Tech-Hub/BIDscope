---
import { Image } from 'astro:assets';

// Define the props interface
interface Props {
  src: string;
  alt: string;
  width?: number;
  height?: number;
  class?: string;
  inferSize?: boolean;
}

// Get the props with defaults
const { 
  src, 
  alt, 
  width = undefined, 
  height = undefined,
  class: className = "",
  inferSize = false
} = Astro.props;

// Process image path correctly for public directory
// If the path doesn't start with a slash and doesn't include 'src/', 
// we assume it's a path relative to public/
let imageSrc = src;


// If both width and height are missing and inferSize is false, use default dimensions
// to prevent the MissingImageDimension error
const useWidth = width || 800;
const useHeight = height || 600;
---

<div class={`astro-image-container ${className}`}>
  {inferSize ? (
    <Image
      src={imageSrc}
      alt={alt}
      inferSize={true}
      class="astro-loaded-image"
    />
  ) : (
    <Image
      src={imageSrc}
      alt={alt}
      width={useWidth}
      height={useHeight}
      class="astro-loaded-image"
    />
  )}
</div>

<style>
  .astro-image-container {
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    overflow: hidden;
  }
  
  .astro-loaded-image {
    max-width: 100%;
    height: auto;
    object-fit: contain;
  }
</style>
